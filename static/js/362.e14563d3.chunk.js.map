{"version":3,"file":"static/js/362.e14563d3.chunk.js","mappings":"qVAce,SAASA,EAAuBC,GAC7C,OAAiBC,EAAAA,EAAAA,MAAVC,GAAP,eACA,EAA8BC,EAAAA,UAAwB,GAAtD,eAAOC,EAAP,KAAgBC,EAAhB,KAEMC,EADWH,EAAAA,WAAiBI,EAAAA,IAA1BC,KACiBC,SAEzB,GAA4BC,EAAAA,EAAAA,KAAW,kBAAMC,EAAAA,EAAAA,IAAQ,CAAEC,KAAMN,IAAeO,aAAY,CACtFC,YAAa,CAACR,KADRS,EAAR,EAAQA,IAAR,EAAaC,WAIb,IAAKD,IAAQA,EAAIE,KAAM,OAAO,KAE9B,IAAMC,GAAWP,EAAAA,EAAAA,IAAQI,EAAIE,MACvBE,EAAMjB,EAAOkB,IAAI,OAEjBC,GAAgB,SAAC,KAAD,CAAQC,QAAS,kBAAMjB,GAAYD,IAAnC,qBAEtB,OAAQe,GACN,IAAK,UACH,OACE,SAACI,EAAD,CAAMC,KAAK,MAAX,UACE,SAAC,aAAD,CAAeC,MAAM,qBAI3B,IAAK,QACH,OACE,SAACF,EAAD,CAAMC,KAAK,MAAX,UACE,SAAC,aAAD,CAAeC,MAAM,2BAI3B,QACE,OACE,SAACF,EAAD,CAAMC,KAAK,MAAX,UACE,SAAC,aAAD,CAAeC,MAAM,QAAQC,QAASL,EAAtC,UACE,SAACM,EAAD,CAA8BT,SAAAA,EAAUd,QAAAA,EAAWwB,OAAQ,CAAC,gBASxE,IAAML,EAAO,SAAC,GAAD,IAAGM,EAAH,EAAGA,SAAa7B,GAAhB,mBACX,SAAC,WAAD,gBAAYyB,MAAM,SAAYzB,GAA9B,cACE,SAAC,aAAD,CACE6B,SAAUA,EACVC,QACE,iBAAKC,UAAU,oDAAf,WACE,SAAC,KAAD,CAAaC,OAAK,EAACC,OAAO,MAAMF,UAAU,OAA1C,oBAGA,SAAC,KAAD,CAAaE,OAAO,MAAMC,MAAM,UAAUH,UAAU,OAApD,sBAGA,SAAC,KAAD,CAAaE,OAAO,MAAMC,MAAM,QAAQH,UAAU,OAAlD,oBAGA,SAAC,KAAD,CAAaE,OAAO,MAAMC,MAAM,MAAhC,0BAWJP,EAAyB,SAAC,GAA0E,IAAxET,EAAuE,EAAvEA,SAAUU,EAA6D,EAA7DA,OAAQxB,EAAqD,EAArDA,QAC5C+B,IADiG,aAC1FC,EAAAA,EAAAA,IAAQ,CAAEC,OAAe,OAARnB,QAAQ,IAARA,OAAA,EAAAA,EAAUmB,QAAS,MAEjD,GAAIjC,EAAS,OAAO,gBAAKkC,wBAAyB,CAAEC,OAAQJ,EAAKK,OAAOH,OAAS,4BAEjF,IAAkBI,EAElB,OACE,UAAC,KAAD,CACEC,QAASP,EACTQ,SAAU,SAACC,GAGT,OAFAA,EAAEC,iBAEK3B,EACJ4B,YAAYX,EAAKK,QACjBO,MAAK,SAACC,OACNC,OAAM,SAACL,QARd,WAHgBH,EAcJ,QAdqBb,EAAOsB,SAAP,UAAmBT,MAehD,SAAC,WAAD,WACE,SAAC,eAAD,CAAgBA,KAAK,QAAQU,OAAQhB,EAAKK,OAAOH,YAGrD,gBAAKN,UAAU,OAAf,UACE,SAAC,YAAD,CAAaG,MAAO,kB,oICxEfkB,EAAb,+IACE,SAAYZ,GACV,OAAOa,KAAKC,MAAL,UAAcD,KAAKE,MAAnB,UAAkCf,KAF7C,wBAKE,SAAWA,GACT,OAAOa,KAAKC,MAAL,UAAcD,KAAKE,MAAnB,SAAiCf,OAN5C,GAAoCgB,EAAAA,IAU7B,SAAS7C,IAAiC,IAAzBM,EAAwB,uDAAJ,GAC1C,OAAOwC,EAAAA,EAAAA,IAAwCxC,EAAM,YAAamC,GAO7D,SAASM,IAA6B,IAAvBzC,EAAsB,uDAAJ,GACtC,OAAOwC,EAAAA,EAAAA,IAAsBxC,EAAM","sources":["../../../../packages/miq-staffjs/src/Setting/PagesUpdateView.tsx","../../../../packages/miq-staffjs/src/Setting/models.tsx"],"sourcesContent":["import { Button, QueryButton } from '@miq/componentjs';\nimport { SharedDataCtx } from '@miq/contextjs';\nimport Form, { Inputs, useForm } from '@miq/formjs';\nimport { useRequest } from '@miq/hookjs';\nimport * as React from 'react';\nimport { useSearchParams } from 'react-router-dom';\n\nimport Staff from '..';\nimport { Setting, SettingInstance } from './models';\n\ntype Props = {\n  onUpdate?: (payload: any) => void;\n};\n\nexport default function PagesSettingUpdateView(props: Props) {\n  const [params] = useSearchParams();\n  const [preview, setPreview] = React.useState<boolean>(true);\n  const { site } = React.useContext(SharedDataCtx);\n  const settingSlug = site.settings;\n\n  const { res, updateData } = useRequest(() => Setting({ slug: settingSlug }).retrieve(), {\n    refreshDeps: [settingSlug],\n  });\n\n  if (!res || !res.data) return null;\n\n  const instance = Setting(res.data);\n  const tab = params.get('tab');\n\n  const PreviewButton = <Button onClick={() => setPreview(!preview)}>Preview</Button>;\n\n  switch (tab) {\n    case 'privacy':\n      return (\n        <View back=\"../\">\n          <Staff.Section title=\"Privacy policy\"></Staff.Section>\n        </View>\n      );\n\n    case 'terms':\n      return (\n        <View back=\"../\">\n          <Staff.Section title=\"Terms and conditions\"></Staff.Section>\n        </View>\n      );\n\n    default:\n      return (\n        <View back=\"../\">\n          <Staff.Section title=\"About\" actions={PreviewButton}>\n            <SettingPagesUpdateForm {...{ instance, preview }} fields={['about']} />\n          </Staff.Section>\n        </View>\n      );\n  }\n}\n\ntype ViewProps = { children: React.ReactNode; back?: string };\n\nconst View = ({ children, ...props }: ViewProps) => (\n  <Staff.View title=\"Pages\" {...props}>\n    <Staff.Section\n      children={children}\n      header={\n        <div className=\"d-flex align-items-center border-bottom pb-2 mb-2\">\n          <QueryButton index target=\"tab\" className=\"me-1\">\n            About\n          </QueryButton>\n          <QueryButton target=\"tab\" value=\"privacy\" className=\"me-1\">\n            Privacy\n          </QueryButton>\n          <QueryButton target=\"tab\" value=\"terms\" className=\"me-1\">\n            Terms\n          </QueryButton>\n          <QueryButton target=\"tab\" value=\"faq\">\n            Faq\n          </QueryButton>\n        </div>\n      }\n    />\n  </Staff.View>\n);\n\ntype SettingPagesUpdateFormProps = Props & { instance: SettingInstance; fields: string[]; preview: boolean };\n\nconst SettingPagesUpdateForm = ({ instance, fields, preview, ...props }: SettingPagesUpdateFormProps) => {\n  const form = useForm({ about: instance?.about || '' });\n\n  if (preview) return <div dangerouslySetInnerHTML={{ __html: form.values.about || 'Nothing to preview ...' }} />;\n\n  const hasField = (name: string) => fields.includes(`${name}`);\n\n  return (\n    <Form\n      context={form}\n      onSubmit={(e) => {\n        e.preventDefault();\n\n        return instance\n          .updatePages(form.values)\n          .then((r) => {})\n          .catch((e) => {});\n      }}\n    >\n      {hasField('about') && (\n        <Form.Field>\n          <Form.TextAreaX name=\"about\" mirror={form.values.about} />\n        </Form.Field>\n      )}\n      <div className=\"my-3\">\n        <Form.Submit value={'Update'} />\n      </div>\n    </Form>\n  );\n};\n","import { ImgProps } from '@miq/componentjs';\nimport { StaffModel, StaffService } from '../service';\n\nexport interface SiteType {\n  navbar?: { label: string; path: string }[];\n  /** Site setting slug */\n  settings?: string;\n  name?: string;\n  domain?: string;\n}\n\nexport type SettingType = Record<string, any> & {\n  slug?: string;\n  is_live?: string;\n  site?: SiteType;\n\n  logo?: string;\n  logo_data?: ImgProps;\n\n  contact_number?: string;\n  contact_number_title?: string;\n  contact_number_display?: string;\n  contact_email?: string;\n  whatsapp_link?: string;\n  whatsapp_link_title?: string;\n\n  ga_tracking?: string;\n  fb_pixel?: string;\n  fb_app_id?: string;\n  fb_app_secret?: string;\n\n  ct_title?: string;\n  ct_text?: string;\n  ct_html?: string;\n  ct_image?: string;\n  ct_image_data?: ImgProps;\n};\n\nexport class SettingService extends StaffService<SettingType> {\n  updatePages(values: any) {\n    return this.patch(`${this._path}pages/`, values);\n  }\n\n  updateSite(values: any) {\n    return this.patch(`${this._path}site/`, values);\n  }\n}\n\nexport function Setting(data: SettingType = {}) {\n  return StaffModel<SettingType, SettingService>(data, 'settings/', SettingService);\n}\n\nexport type SettingInstance = ReturnType<typeof Setting>;\n\nexport type IndexType = {};\n\nexport function Index(data: IndexType = {}) {\n  return StaffModel<IndexType>(data, 'index/');\n}\n\nexport type IndexInstance = ReturnType<typeof Index>;\n\n// export type SettingType = typeof Setting & SettingState & { patch: (v: any) => Promise<any> };\n"],"names":["PagesSettingUpdateView","props","useSearchParams","params","React","preview","setPreview","settingSlug","SharedDataCtx","site","settings","useRequest","Setting","slug","retrieve","refreshDeps","res","updateData","data","instance","tab","get","PreviewButton","onClick","View","back","title","actions","SettingPagesUpdateForm","fields","children","header","className","index","target","value","form","useForm","about","dangerouslySetInnerHTML","__html","values","name","context","onSubmit","e","preventDefault","updatePages","then","r","catch","includes","mirror","SettingService","this","patch","_path","StaffService","StaffModel","Index"],"sourceRoot":""}
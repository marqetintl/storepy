{"version":3,"sources":["shop/product/utils.jsx","shop/product/components.jsx","shop/product/UpdateView.jsx"],"names":["productServices","prodSlug","values","oldValues","this","patchPath","path","StaffService","ProductRow","product","Tr","className","Td","to","slug","title","name","ProductTable","props","data","results","items","renderItem","item","key","pagination","count","next","previous","onPreviousClick","e","onNextClick","ProductNameInput","onSuccess","onError","placeholder","form","rest","Label","value","TextInput","required","onSave","patch","then","catch","err","error","errors","maxLength","ProductDescriptionInput","label","TextAreaX","description","ProductUpdateForm","children","context","NameInput","DescriptionInput","SlugPublicInput","slug_public","ProductCreateForm","useForm","onSubmit","preventDefault","post","handleError","ProductImageUploadButton","multiple","onCreate","imgsArray","filter","img","images","map","onCreateSuccess","onCreateError","ProductImageAltTextInput","image","alt_text","ProductCoverUploadButton","cover_data","cover","onUpdate","imgData","onUpdateSuccess","ProductUpdateView","match","params","useState","setProduct","toast","useContext","ToastCtx","setValues","useEffect","detail","page","response","message","status","success","onUpdateError","Section","patchPage"],"mappings":"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","file":"static/js/8.8616728a.chunk.js","sourcesContent":["import { StaffService } from \"@miq/adminjs\";\n\nclass StaffProductService extends StaffService {\n  // constructor(path) {\n  //   super(path);\n  // }\n\n  patchPage(prodSlug, values, oldValues) {\n    return this.patchPath(`${this.path}${prodSlug}/page/`, values, oldValues);\n  }\n}\n\nexport const productServices = new StaffProductService(\"products/\");\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Link } from \"react-router-dom\";\n\nimport Form, { useForm, FormProvider } from \"@miq/form\";\nimport { ImageAltTextInput } from \"@miq/adminjs\";\nimport { Table, ItemTable, ImgUploadButton } from \"@miq/components\";\nimport { productServices } from \"./utils\";\n\nexport const ProductRow = ({ product, ...props }) => {\n  if (!product) return null;\n\n  return (\n    <Table.Tr className=\"\">\n      <Table.Td className=\"w-100\">\n        <Link to={`/staff/shop/products/${product.slug}/`}>\n          <div className=\"mb-1\" title={product.name}>\n            {product.name}\n          </div>\n        </Link>\n      </Table.Td>\n    </Table.Tr>\n  );\n};\n\nexport const ProductTable = (props) => {\n  const { data = { results: [] } } = props;\n\n  const handlePreviousClick = (e) => {};\n  const handleNextClick = (e) => {};\n\n  return (\n    <div>\n      <ItemTable\n        className=\"w-100\"\n        items={data.results}\n        renderItem={(item) => <ProductRow {...props} product={item} key={item.slug} />}\n        pagination={{\n          count: data.count,\n          next: data.next,\n          previous: data.previous,\n          onPreviousClick: handlePreviousClick,\n          onNextClick: handleNextClick,\n        }}\n      />\n    </div>\n  );\n};\n\nProductTable.propTypes = {\n  data: PropTypes.shape({ results: PropTypes.array }).isRequired,\n  setData: PropTypes.func.isRequired,\n};\n\n//\n// ========================= FORM COMPONENTS ===================================================================\n//\n\nexport const ProductCategoryInput = ({ onSuccess, onError, ...props }) => {\n  const { placeholder = \"Give a name to the item\", form } = props;\n  if (!form) return null;\n\n  return (\n    <>\n      <Form.Label value=\"Name\" className=\"mb-1\" />\n      <Form.TextInput {...props} name=\"name\" error={form.errors.name} placeholder={placeholder} maxLength={99} />\n    </>\n  );\n};\n\nexport const ProductNameInput = ({ onSuccess, onError, ...props }) => {\n  const { product, placeholder = \"Give a name to the item\", form, ...rest } = props;\n\n  if (!form) return null;\n\n  return (\n    <>\n      <Form.Label value=\"Name\" className=\"mb-1\" />\n      <Form.TextInput\n        {...rest}\n        required\n        name=\"name\"\n        onSave={({ value }) => {\n          if (!value || !product || !product.slug) return;\n\n          return productServices\n            .patch(product.slug, { name: value }, { name: product.name })\n            .then((data) => {\n              if (onSuccess) return onSuccess(data);\n            })\n            .catch((err) => {\n              if (onError) return onError(err);\n            });\n        }}\n        error={form.errors.name}\n        placeholder={placeholder}\n        maxLength={99}\n      />\n    </>\n  );\n};\n\nexport const ProductDescriptionInput = ({ onSuccess, onError, ...props }) => {\n  const { product, placeholder = \"Give a description to the item\", form, label, ...rest } = props;\n  if (!product || !form) return null;\n\n  return (\n    <>\n      {label && <Form.Label value=\"Description\" className=\"mb-1\" />}\n      <Form.TextAreaX\n        {...rest}\n        name=\"description\"\n        onSave={({ name, value }) =>\n          productServices\n            .patch(product.slug, { [name]: value }, { [name]: product[name] })\n            .then((data) => {\n              if (onSuccess) return onSuccess(data);\n            })\n            .catch((err) => {\n              if (onError) return onError(err);\n            })\n        }\n        error={form.errors.description}\n        placeholder={placeholder}\n      />\n    </>\n  );\n};\n\nexport const ProductSlugPublicInput = ({ onSuccess, onError, ...props }) => {\n  const { product, placeholder = \"Seo slug ...\", form, ...rest } = props;\n  if (!product || !form) return null;\n\n  return (\n    <>\n      <Form.Label value=\"Slug\" className=\"mb-1\" />\n      <Form.TextInput\n        {...rest}\n        required\n        name=\"slug_public\"\n        onSave={({ value }) =>\n          productServices\n            .patch(product.slug, { slug_public: value }, { slug_public: product.slug_public })\n            .then((data) => {\n              if (onSuccess) return onSuccess(data);\n            })\n            .catch((err) => {\n              if (onError) return onError(err);\n            })\n        }\n        error={form.errors.slug_public}\n        placeholder={placeholder}\n        maxLength={99}\n      />\n    </>\n  );\n};\n\nexport const ProductUpdateForm = ({ children, form, ...props }) => {\n  if (!form) return null;\n  return (\n    <Form {...props} context={form}>\n      {children}\n    </Form>\n  );\n};\n\nProductUpdateForm.NameInput = ProductNameInput;\nProductUpdateForm.DescriptionInput = ProductDescriptionInput;\nProductUpdateForm.SlugPublicInput = ProductSlugPublicInput;\n\nexport const ProductCreateForm = ({ onSuccess, onError, ...props }) => {\n  const form = useForm({ name: \"\" });\n\n  return (\n    <Form\n      {...props}\n      context={form}\n      onSubmit={(e) => {\n        e.preventDefault();\n        return productServices\n          .post({ name: form.values.name })\n          .then((data) => {\n            if (onSuccess) return onSuccess(data);\n          })\n          .catch((err) => {\n            if (onError) return onError(err);\n            form.handleError(err);\n          });\n      }}\n    >\n      <ProductNameInput form={form} placeholder={\"Give a name to the new item ...\"} />\n    </Form>\n  );\n};\n\nexport const ProductImageUploadButton = ({ product, ...props }) => {\n  if (!product || !product.slug) return null;\n\n  return (\n    <ImgUploadButton\n      multiple={true}\n      onCreate={(imgsArray) => {\n        imgsArray = imgsArray.filter((img) => img && img.slug);\n\n        productServices\n          .patch(product.slug, { images: [...product.images, ...imgsArray.map((img) => img.slug)] })\n          .then((data) => {\n            if (props.onCreateSuccess) props.onCreateSuccess(data);\n          })\n          .catch((err) => {\n            if (props.onCreateError) props.onCreateError(err);\n          });\n      }}\n    />\n  );\n};\n\nexport const ProductImageAltTextInput = ({ image, ...props }) => {\n  const form = useForm({ alt_text: image.alt_text || \"\" });\n\n  return (\n    <FormProvider value={form}>\n      <ImageAltTextInput\n        required\n        image={image}\n        onSuccess={props.onSuccess}\n        onError={props.onError}\n        placeholder=\"Add an alternative text ...\"\n      />\n    </FormProvider>\n  );\n};\n\nProductImageAltTextInput.propTypes = {\n  image: PropTypes.shape({\n    slug: PropTypes.string.isRequired,\n  }),\n\n  onUpdate: PropTypes.func,\n  onError: PropTypes.func,\n};\n\nexport const ProductCoverUploadButton = ({ children, product, ...props }) => {\n  if (!product || !product.slug) return null;\n\n  const handleCoverCreate = ({ slug }) => {\n    productServices\n      .patch(product.slug, { cover: slug })\n      .then((data) => {\n        if (props.onCreateSuccess) props.onCreateSuccess(data);\n      })\n      .catch((err) => {\n        if (props.onCreateError) props.onCreateError(err);\n      });\n  };\n  const handleCoverUpdate = (imgData) => {\n    if (props.onUpdateSuccess) props.onUpdateSuccess(imgData);\n  };\n\n  return (\n    <ImgUploadButton\n      slug={product.cover_data ? product.cover_data.slug : null}\n      onCreate={handleCoverCreate}\n      onUpdate={handleCoverUpdate}\n      className=\"product-cover-upload-button\"\n    >\n      {children}\n    </ImgUploadButton>\n  );\n};\n\nProductCoverUploadButton.propTypes = {\n  children: PropTypes.any.isRequired,\n  product: PropTypes.shape({ slug: PropTypes.string.isRequired }).isRequired,\n  onCreateSuccess: PropTypes.func,\n  onCreateError: PropTypes.func,\n  onUpdateSuccess: PropTypes.func,\n  onUpdateError: PropTypes.func,\n};\n","import { useContext, useEffect, useState } from \"react\";\n\nimport { AdminView } from \"@miq/adminjs\";\nimport Form, { useForm } from \"@miq/form\";\nimport {\n  // Icons,\n  // IconNavLink,\n  ToastCtx,\n  ImgSquare,\n  // IconButton,\n  ImgDeleteIconButton,\n} from \"@miq/components\";\n\nimport { productServices } from \"./utils\";\nimport { ProductCoverUploadButton, ProductUpdateForm } from \"./components\";\n\nexport default function ProductUpdateView(props) {\n  const { prodSlug } = props.match.params;\n\n  const [product, setProduct] = useState(null);\n  const toast = useContext(ToastCtx);\n\n  const form = useForm({ name: \"\", description: \"\", title: \"\", slug_public: \"\" });\n  const { setValues } = form;\n\n  useEffect(() => {\n    productServices\n      .detail(prodSlug)\n      .then((data) => {\n        setProduct(data);\n\n        setValues({\n          name: data.name || \"\",\n          description: data.description || \"\",\n          title: data.page.title || \"\",\n          slug_public: data.slug_public || \"\",\n        });\n      })\n      .catch((err) => {\n        if (err.response) {\n          toast.error({ message: \"Something went wrong\" });\n          if (err.response.status === 404) {\n            return;\n          }\n        }\n      });\n  }, [prodSlug, setValues, toast]);\n\n  if (!product) return null;\n\n  const handlePageUpdate = ({ name, value }) => {\n    productServices\n      .patchPage(prodSlug, { [name]: value }, { [name]: product[name] })\n      .then((data) => {\n        setProduct(data);\n        toast.success({ message: \"Item updated.\" });\n      })\n      .catch((err) => {\n        toast.error({ message: \"Could not update item.\" });\n      });\n  };\n\n  return (\n    <AdminView title={form.values.name} className=\"product-update-view\">\n      <div className=\"view-header d-flex flex-column flex-md-row mb-2\">\n        <div className=\"cover\">\n          <ProductCoverUploadButton\n            product={product}\n            onCreateSuccess={(data) => {\n              setProduct(data);\n              toast.success({ message: \"Product cover updated.\" });\n            }}\n            onCreateError={() => {\n              toast.error({ message: \"Could not upload cover image.\" });\n            }}\n            onUpdateSuccess={(imgData) => {\n              setProduct({ ...product, cover: imgData.slug, cover_data: imgData });\n              if (toast) toast.success({ message: \"Product cover updated.\" });\n            }}\n            onUpdateError={() => {\n              toast.error({ message: \"Could not upload cover image.\" });\n            }}\n          >\n            <ImgSquare {...product.cover_data} className=\"product-cover\" />\n          </ProductCoverUploadButton>\n\n          {product.cover && (\n            <ImgDeleteIconButton\n              label=\"Delete cover\"\n              className=\"btn-danger-3\"\n              slug={product.cover_data.slug}\n              // onSuccess={() => onProductUpdate({ ...product, cover_data: null, cover: null })}\n            />\n          )}\n        </div>\n        <div className=\"ms-1 ms-md-2\">\n          <div className=\"text-md fw-bold\">{product.name}</div>\n        </div>\n      </div>\n\n      <ProductUpdateForm form={form} product={product}>\n        <AdminView.Section title=\"Details\">\n          <div className=\"mb-1\">\n            <ProductUpdateForm.NameInput\n              product={product}\n              form={form}\n              onSuccess={(data) => {\n                setProduct(data);\n                toast.success({ message: \"Item updated.\" });\n              }}\n              onError={(err) => {\n                form.handleError(err);\n                toast.error({ message: \"Could not update item.\" });\n              }}\n            />\n          </div>\n\n          <div className=\"mb-1\">\n            <ProductUpdateForm.DescriptionInput\n              product={product}\n              form={form}\n              label={true}\n              onSuccess={(data) => {\n                setProduct(data);\n                toast.success({ message: \"Item updated.\" });\n              }}\n              onError={(err) => {\n                form.handleError(err);\n                toast.error({ message: \"Could not update item.\" });\n              }}\n            />\n          </div>\n        </AdminView.Section>\n\n        <AdminView.Section title=\"Price\"></AdminView.Section>\n        <AdminView.Section title=\"Images\"></AdminView.Section>\n\n        <AdminView.Section title=\"Seo\">\n          <div className=\"mb-1\">\n            <Form.Label value=\"Title\" className=\"mb-1\" />\n            <Form.TextInput\n              name=\"title\"\n              onSave={handlePageUpdate}\n              error={form.errors.name}\n              placeholder=\"Give a name to the item\"\n              maxLength={99}\n            />\n          </div>\n          <div className=\"mb-1\">\n            <ProductUpdateForm.SlugPublicInput\n              product={product}\n              form={form}\n              onSuccess={(data) => {\n                setProduct(data);\n                toast.success({ message: \"Item updated.\" });\n              }}\n              onError={(err) => {\n                form.handleError(err);\n                toast.error({ message: \"Could not update item.\" });\n              }}\n            />\n          </div>\n        </AdminView.Section>\n      </ProductUpdateForm>\n    </AdminView>\n  );\n}\n"],"sourceRoot":""}
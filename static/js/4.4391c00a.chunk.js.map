{"version":3,"sources":["shop/public/components.jsx","shop/product/utils.jsx","shop/product/components.jsx","shop/product/index.jsx"],"names":["ProductPriceDisplay","product","retail_price","sale_price","is_on_sale","className","amountWithSymbol","ProductAttributeList","attributes","map","attr","name","value","CategoryLinks","props","ctx","useContext","SharedDataCtx","isLoaded","categories","cat","href","url","title","showCover","cover","src_mobile","thumb_sq","name_truncated","slug","SearchForm","search","location","push","useRef","debounce","history","query","URLSearchParams","action","required","initialValue","get","onChange","e","target","length","delete","set","current","path","URL","window","pathname","placeholder","minLength","maxLength","BreadCrumbs","breadcrumbs","role","item","label","productServices","prodSlug","this","patchPath","unpublish","values","postPath","attrSlug","oldValues","deletePath","imgSlug","StaffService","QueryFilterSelect","children","pushOnChange","emptyLabel","searchParams","getClassName","pushQuery","QueryFilterToggle","inputId","getWindowQuery","type","id","checked","Boolean","htmlFor","ProductListFilterForm","method","onSubmit","preventDefault","CategorySelect","items","PublishedSelect","PreSaleToggle","SaleToggle","Select","Toggle","ProductImageAltTextInput","image","alt_text","form","useForm","setValues","useEffect","onSuccess","onError","StaffProductDeleteButton","onClick","then","catch","err","StaffProductPublishButton","toast","page","is_published","onPublishSuccess","onUnpublishSuccess","data","error","message","SHOP_MSGS","default","publish","response","category","publish_error_retail_price","handleError","publish_error_category","publish_error_page","ProductImageUploadButton","multiple","onCreate","imgsArray","filter","img","patch","images","onCreateSuccess","onCreateError","StaffProductAddView","lazy","StaffProductUpdateView","StaffProductRoutes","match","render","args","back","addForwardSlash","requiredPerms","StaffProductListView","perms","useState","loading","state","setState","published","presale","sale","list","stateData","getPageUrl","getPage","getQueryUrl","pageUrl","canAdd","hasPerms","prevLink","previous","getPreviousUrl","nextLink","next","updateViewProps","filterProps","SHOP_PATHS","productList","count","actions","to","disabled","Section","results","headers","renderItem","itemProps","ProductRow","key","cover_data","category_data","is_pre_sale","Tr","Td","style","minWidth","productUpdate","add_to_cart_count","retail_price_data","sale_price_data","pill"],"mappings":"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","file":"static/js/4.4391c00a.chunk.js","sourcesContent":["import ReactDOM from 'react-dom';\nimport { useContext, useEffect, useRef, useState } from 'react';\n\nimport { SharedDataCtx } from '@miq/contexts';\nimport { Img, Picture, SearchTextInput } from '@miq/components';\nimport { IS_DEV } from '@miq/utils';\nimport debounce from 'lodash.debounce';\n\n/**\n * PRODUCT\n */\n\nexport const ProductPriceDisplay = ({ product }) => {\n  if (!product || !product.retail_price) return null;\n\n  const { retail_price, sale_price } = product;\n\n  if (product.is_on_sale && sale_price != null) {\n    return (\n      <div className=\"product-price-display d-flex align-items-center\">\n        <div className=\"text-danger fw-bold me-2\">{sale_price.amountWithSymbol}</div>\n        <div className=\"text-line-through\">{retail_price.amountWithSymbol}</div>\n      </div>\n    );\n  }\n  return (\n    <div className=\"product-price-display d-flex align-items-center\">\n      <div className=\"fw-bold\">{retail_price.amountWithSymbol}</div>\n    </div>\n  );\n};\n\nexport const ProductAttributeList = ({ product }) => {\n  const { attributes = [] } = product || {};\n\n  if (!attributes) return null;\n\n  return (\n    <ul className=\"product-attr-list\">\n      {attributes?.map((attr) => {\n        return (\n          <li className=\"attr\" key={attr.name}>\n            <span className=\"attr-label\">{attr.name} : </span>\n            <span className=\"attr-value\">{attr.value}</span>\n          </li>\n        );\n      })}\n    </ul>\n  );\n};\n\n/**\n * CATEGORY\n */\n\nexport const CategoryLinks = (props) => {\n  const ctx = useContext(SharedDataCtx);\n\n  if (!ctx.isLoaded || !ctx.categories) return null;\n\n  // console.log(ctx.categories);\n\n  return (\n    <div className=\"category-links pb-2\">\n      {ctx.categories?.map((cat) => {\n        return (\n          <div className=\"item w-25 w-md-15\" key={cat.slug}>\n            <a href={cat.url} className=\"\" title={cat.name}>\n              {props.showCover && cat?.cover && (\n                <Picture {...cat.cover} src_mobile={cat?.cover?.thumb_sq || cat?.cover?.src_mobile} />\n              )}\n              <div className=\"info\">{cat.name_truncated}</div>\n            </a>\n          </div>\n        );\n      })}\n    </div>\n  );\n};\n\nexport function SearchForm(props) {\n  const { search } = props.location;\n\n  const push = useRef(debounce((url) => props?.history?.push(url), 300));\n\n  const query = new URLSearchParams(search);\n  const handleSearch = ({ e }) => {\n    const { value } = e.target;\n\n    if (!value || value.length < 3) {\n      query.delete('q');\n    } else {\n      query.set('q', e.target.value);\n    }\n\n    if (!push.current) return;\n\n    const path = new URL(window.location.href);\n    push.current(`${path.pathname}?${query}`);\n  };\n\n  return (\n    <form action=\"/shop/\" className=\"product-search-form\">\n      <SearchTextInput\n        required\n        initialValue={query.get('q')}\n        onChange={handleSearch}\n        className=\"search-input\"\n        placeholder={'Cherchez un produit ...'}\n        minLength={3}\n        maxLength={99}\n      />\n    </form>\n  );\n}\n\nexport const BreadCrumbs = (props) => {\n  const { isLoaded, breadcrumbs } = useContext(SharedDataCtx);\n\n  if (!isLoaded || !breadcrumbs) {\n    return null;\n  }\n\n  return (\n    <section className=\"miq-breadcrumbs\" role={'navigation'} aria-label=\"breadcrumbs\">\n      {breadcrumbs.map((item) => {\n        return (\n          <a href={item.path} className=\"item\" key={item.label} title={item.title} aria-label={item.title}>\n            {item.label}\n          </a>\n        );\n      })}\n    </section>\n  );\n};\n\n//\n// NOT USED\nexport const ProductDetailImages = ({ product, ...props }) => {\n  const { images = [], cover } = product;\n  const [active, setActive] = useState(cover);\n\n  const [root, setRoot] = useState(null);\n\n  useEffect(() => {\n    if (IS_DEV) return;\n\n    const el = document.getElementById('product-detail-images');\n    if (el) setRoot(el);\n  }, [setRoot]);\n\n  if (!product) return null;\n\n  const render = (\n    <div className=\"product-images d-flex flex-column-reverse flex-sm-row\">\n      <div className=\"thumbnails d-flex flex-row flex-sm-column me-1\">\n        <Img src={cover.thumb} className=\"mb-1\" onClick={() => setActive(cover)} />\n\n        {images.map((img) => (\n          <Img src={img.thumb} onClick={() => setActive(img)} className=\"mb-1\" key={img.src} />\n        ))}\n      </div>\n\n      <div className=\"\">\n        <Img src={active.src} />\n      </div>\n    </div>\n  );\n\n  return IS_DEV ? render : root ? ReactDOM.createPortal(render, root) : null;\n};\n","import { StaffService } from '@miq/utils';\n\nclass StaffProductService extends StaffService {\n  publish(prodSlug) {\n    return this.patchPath(`${this.path}${prodSlug}/publish/`, {});\n  }\n\n  unpublish(prodSlug) {\n    return this.patchPath(`${this.path}${prodSlug}/publish/`, { unpublish: true });\n  }\n\n  // ATTR\n\n  postAttribute(prodSlug, values) {\n    return this.postPath(`${this.path}${prodSlug}/attribute/new/`, values);\n  }\n\n  patchAttribute(prodSlug, attrSlug, values, oldValues) {\n    return this.patchPath(`${this.path}${prodSlug}/attribute/${attrSlug}/`, values, oldValues);\n  }\n\n  deleteAttribute(prodSlug, attrSlug) {\n    return this.deletePath(`${this.path}${prodSlug}/attribute/${attrSlug}/`);\n  }\n\n  // PAGE\n\n  patchPage(prodSlug, values, oldValues) {\n    return this.patchPath(`${this.path}${prodSlug}/page/`, values, oldValues);\n  }\n\n  // COVER\n\n  swapCover(prodSlug, imgSlug) {\n    return this.patchPath(`${this.path}${prodSlug}/swap-cover/`, { slug: imgSlug });\n  }\n}\n\nexport const productServices = new StaffProductService('products/');\n","import React, { useEffect } from 'react';\nimport PropTypes from 'prop-types';\n\nimport { productServices } from './utils';\nimport {\n  useForm,\n  FormProvider,\n  ImgUploadButton,\n  ImageAltTextInput,\n  Button,\n  getClassName,\n  getWindowQuery,\n} from 'src/exports';\n\n//#region FILTERS\n\nconst QueryFilterSelect = ({ children, ...props }) => {\n  const { name, pushOnChange = true, emptyLabel = 'Select', history } = props;\n  const query = new URL(window.location.href).searchParams;\n\n  const handleChange = (e) => {\n    const { value } = e.target;\n    if (!value) {\n      query.delete(name);\n    } else {\n      query.set(name, value);\n    }\n    query.delete('page');\n    pushOnChange && pushQuery(query);\n  };\n\n  function pushQuery(query) {\n    const path = new URL(window.location.href);\n    history.push(`${path.pathname}?${query}`);\n  }\n\n  return (\n    <select\n      className={getClassName(['miq-select', props.className])}\n      value={query.get(name) || ''}\n      onChange={handleChange}\n    >\n      <option value=\"\">{emptyLabel}</option>\n      {children}\n    </select>\n  );\n};\n\nQueryFilterSelect.propTypes = {\n  children: PropTypes.any,\n  name: PropTypes.string.isRequired,\n  history: PropTypes.any.isRequired,\n  pushOnChange: PropTypes.any,\n  emptyLabel: PropTypes.string,\n};\n\nconst QueryFilterToggle = (props) => {\n  const { label, name, history, pushOnChange = true, inputId, className } = props;\n  const query = getWindowQuery();\n\n  const handleChange = ({ target }) => {\n    const { checked } = target;\n    if (!checked) {\n      query.delete(name);\n    } else {\n      query.set(name, checked);\n      query.delete('page');\n    }\n    pushOnChange && pushQuery(query);\n  };\n\n  function pushQuery() {\n    const path = new URL(window.location.href);\n    history.push(`${path.pathname}?${query}`);\n  }\n\n  return (\n    <div className={getClassName(['miq-query-filter-toggle d-flex align-items-center', className])}>\n      <input\n        type=\"checkbox\"\n        className=\"miq-checkbox\"\n        id={inputId}\n        className=\"me-1\"\n        onChange={handleChange}\n        checked={Boolean(query.get(name)) || false}\n      />\n      <label htmlFor={inputId}>{label}</label>\n    </div>\n  );\n};\n\nQueryFilterToggle.propTypes = {\n  name: PropTypes.string.isRequired,\n  history: PropTypes.any.isRequired,\n  inputId: PropTypes.string,\n  className: PropTypes.string,\n};\n\nexport const ProductListFilterForm = ({ children, className }) => {\n  return (\n    <form action=\".\" method=\"GET\" className={className} onSubmit={(e) => e.preventDefault()}>\n      {children}\n    </form>\n  );\n};\n\nconst CategoryFilterSelect = ({ items, ...props }) => {\n  return (\n    <QueryFilterSelect {...props} name=\"cat\">\n      {items?.map((cat) => (\n        <option value={cat.value} key={cat.slug}>\n          {cat.label}\n        </option>\n      ))}\n    </QueryFilterSelect>\n  );\n};\n\nconst PublishedFilterSelect = (props) => {\n  return (\n    <QueryFilterSelect {...props} name=\"published\">\n      <option value=\"include\">Produits publiés</option>\n      <option value=\"exclude\">Produits non publiés</option>\n    </QueryFilterSelect>\n  );\n};\n\nconst PreSaleFilterToggle = (props) => {\n  return <QueryFilterToggle {...props} name=\"presale\" />;\n};\n\nconst SaleFilterToggle = (props) => {\n  return <QueryFilterToggle {...props} name=\"sale\" />;\n};\n\nProductListFilterForm.CategorySelect = CategoryFilterSelect;\nProductListFilterForm.PublishedSelect = PublishedFilterSelect;\nProductListFilterForm.PreSaleToggle = PreSaleFilterToggle;\nProductListFilterForm.SaleToggle = SaleFilterToggle;\nProductListFilterForm.Select = QueryFilterSelect;\nProductListFilterForm.Toggle = QueryFilterToggle;\n//#endregion FILTERS\n\n//#region ProductImageAltTextInput\n\nexport const ProductImageAltTextInput = ({ image, ...props }) => {\n  const alt_text = image?.alt_text || '';\n\n  const form = useForm({ alt_text });\n\n  const imgSlug = image?.slug;\n  const setValues = form.setValues;\n\n  useEffect(() => {\n    setValues({ alt_text });\n  }, [imgSlug, setValues, alt_text]);\n\n  if (!image || !image.slug) return null;\n\n  return (\n    <FormProvider value={form} className={props.className}>\n      <ImageAltTextInput\n        required\n        image={image}\n        onSuccess={props.onSuccess}\n        onError={props.onError}\n        placeholder=\"Add an alternative text ...\"\n      />\n    </FormProvider>\n  );\n};\n\nProductImageAltTextInput.propTypes = {\n  image: PropTypes.shape({\n    slug: PropTypes.string.isRequired,\n  }),\n\n  onUpdate: PropTypes.func,\n  onError: PropTypes.func,\n};\n\n//#endregion ProductImageAltTextInput\n\n//#region BUTTONS > >\n\n//#region StaffProductDeleteButton\n\n/**\n * Delete a product\n * Usage:\n * ```js\n * <StaffProductDeleteButton label=\"Delete me!\" prodSlug='123' onSuccess={()=>{}} onError={()=>{}} className=\"btn-danger-3\" />\n * ```\n *\n * @param {Object} props\n * @param {string} props.label\n * @param {string} props.prodSlug\n * @param {Function} props.onSuccess\n * @param {Function} props.onError\n * @param {string=} props.className\n * @param {string=} props.id\n * @augments {Component<Props, State>}\n */\nexport const StaffProductDeleteButton = ({ prodSlug, ...props }) => {\n  if (!prodSlug) return null;\n  const { className = 'btn-danger', label, onSuccess, onError } = props;\n  return (\n    <Button\n      id={props.id}\n      className={className}\n      onClick={() => {\n        return productServices\n          .delete(prodSlug)\n          .then(() => onSuccess?.({ prodSlug }))\n          .catch((err) => onError?.(err));\n      }}\n    >\n      {label || 'Supprimer cet article'}\n    </Button>\n  );\n};\n//#endregion StaffProductDeleteButton\n\n//#region StaffProductPublishButton\n\n/**\n * Button component for publishing a product\n * ```js\n * <StaffProductPublishButton\n *  product={product}\n *  prodSlug='slug'\n *  product={{slug: 'slug', page:{slug:'pageSlug'}}}\n *  onPublishSuccess={(data) => setProduct(data)}\n *  onUnpublishSuccess={(data) => setProduct(data)}\n *  onUnpublishSuccess={(err) => setError(err)}\n * />\n * ```\n * @param {Object} props\n * @param {string} props.prodSlug - slug of the product: required\n * @param {Object} props.product - product object\n * @param {Object} props.form - product form\n * @param {Function} props.onPublishSuccess publish success callback\n * @param {Function} props.onUnpublishSuccess unpublish success callback\n * @param {Function} props.onError\n * @param {Object} props.toast\n * @param {string} props.className\n * @param {string} props.id\n * @augments {Component<Props, State>}\n *\n */\n\nexport function StaffProductPublishButton(props) {\n  const { prodSlug, product, toast, ...rest } = props;\n  if (!prodSlug || !product?.page) return null;\n\n  const { is_published } = product.page;\n  const { form, onPublishSuccess, onUnpublishSuccess, onError } = props;\n\n  const handlePublish = () => {\n    if (is_published)\n      return productServices\n        .unpublish(prodSlug)\n        .then((data) => onUnpublishSuccess?.(data))\n        .catch((err) => {\n          return toast?.error({ message: SHOP_MSGS.default });\n        });\n\n    return productServices\n      .publish(prodSlug)\n      .then((data) => onPublishSuccess?.(data))\n      .catch((err) => {\n        const { response = {} } = err;\n\n        if (!response.data) {\n          toast?.error({ message: SHOP_MSGS.default });\n        }\n        const { retail_price, category, page } = response.data;\n\n        if (retail_price) {\n          toast?.error({ message: SHOP_MSGS.product.publish_error_retail_price });\n        }\n        if (category) {\n          if (form) form.handleError(err);\n          toast?.error({ message: SHOP_MSGS.product.publish_error_category });\n        }\n        if (page) {\n          toast?.error({ message: SHOP_MSGS.product.publish_error_page });\n        }\n        return onError?.(err);\n      });\n  };\n\n  return (\n    <Button\n      id={props.id}\n      onClick={handlePublish}\n      className={getClassName([\n        'staff-product-publish-button',\n        is_published ? 'btn-danger' : 'btn-primary',\n        props.className,\n      ])}\n    >\n      {is_published ? 'Unpublish' : 'Publish'} product\n    </Button>\n  );\n}\n\nStaffProductPublishButton.propTypes = {\n  /** product slug */\n  prodSlug: PropTypes.string.isRequired,\n  /** product data */\n  product: PropTypes.shape({ page: PropTypes.shape({ is_published: PropTypes.bool }).isRequired }).isRequired,\n  /** if props.form: calls form.handleError whenever applicable BEFORE calling props.onError */\n  form: PropTypes.object,\n  onPublishSuccess: PropTypes.func,\n  onUnpublishSuccess: PropTypes.func,\n  onError: PropTypes.func,\n};\n\n//#endregion\n\n//#region ProductImageUploadButton\n\n/**\n * Upload a product image\n * Usage:\n * ```js\n * <ProductImageUploadButton product={{prodData}} />\n * ```\n *\n * @param {Object} props\n * @param {Object} props.product\n * @param {bool} props.multiple\n * @param {Function} props.onCreate\n * @param {Function} props.onCreateSuccess\n * @param {Function} props.onCreateError\n * @augments {ImgUploadButton<Props, State>}\n */\n\nexport const ProductImageUploadButton = ({ product, ...props }) => {\n  if (!product || !product.slug) return null;\n\n  return (\n    <ImgUploadButton\n      multiple={true}\n      className=\"btn-primary-3\"\n      onCreate={(imgsArray) => {\n        imgsArray = imgsArray.filter((img) => img && img.slug);\n        return productServices\n          .patch(product.slug, { images: [...product.images, ...imgsArray.map((img) => img.slug)] })\n          .then((data) => {\n            if (props.onCreateSuccess) props.onCreateSuccess(data);\n          })\n          .catch((err) => {\n            if (props.onCreateError) props.onCreateError(err);\n          });\n      }}\n    />\n  );\n};\n//#endregion ProductImageButton\n\n//#region ProductCoverUploadButton\nexport const ProductCoverUploadButton = ({ children, product, ...props }) => {\n  if (!product || !product.slug) return null;\n\n  const handleCoverCreate = ({ slug }) => {\n    productServices\n      .patch(product.slug, { cover: slug })\n      .then((data) => {\n        if (props.onCreateSuccess) props.onCreateSuccess(data);\n      })\n      .catch((err) => {\n        if (props.onCreateError) props.onCreateError(err);\n      });\n  };\n  const handleCoverUpdate = (imgData) => {\n    if (props.onUpdateSuccess) props.onUpdateSuccess(imgData);\n  };\n\n  return (\n    <ImgUploadButton\n      slug={product.cover_data ? product.cover_data.slug : null}\n      onCreate={handleCoverCreate}\n      onUpdate={handleCoverUpdate}\n      className=\"product-cover-upload-button\"\n    >\n      {children}\n    </ImgUploadButton>\n  );\n};\nProductCoverUploadButton.propTypes = {\n  children: PropTypes.any.isRequired,\n  product: PropTypes.shape({ slug: PropTypes.string.isRequired }).isRequired,\n  onCreateSuccess: PropTypes.func,\n  onCreateError: PropTypes.func,\n  onUpdateSuccess: PropTypes.func,\n  onUpdateError: PropTypes.func,\n};\n//#endregion ProductCoverUploadButton\n\n//#endregion BUTTONS\n","import React, { lazy, useState, useContext, useEffect } from 'react';\nimport { Switch, Link } from 'react-router-dom';\n\nimport './index.scss';\n\nimport { SharedDataCtx } from '@miq/contexts';\nimport { AdminRoute, AdminNavLink, AdminView, hasPerms } from '@miq/adminjs';\nimport { addForwardSlash } from '@miq/utils';\nimport { Table, ItemTable, ImgSquare, Loading } from '@miq/components';\n\nimport { productServices } from './utils';\nimport { SHOP_PATHS } from '../constants';\nimport { ProductPriceDisplay } from '../public/components';\nimport { getWindowQuery, PublishedStatusSpan } from 'src/exports';\nimport { ProductListFilterForm as FilterForm } from './components';\n\nconst StaffProductAddView = lazy(() => import('./AddView'));\nconst StaffProductUpdateView = lazy(() => import('./UpdateView/'));\n\nexport default function StaffProductRoutes(props) {\n  const { path, url } = props.match;\n\n  return (\n    <Switch>\n      <AdminRoute\n        path={`${path}new/`}\n        render={(args) => <StaffProductAddView back={addForwardSlash(url)} {...args} />}\n        requiredPerms={['shop.add_product']}\n      />\n\n      <AdminRoute\n        requiredPerms={['shop.view_product']}\n        render={(args) => <StaffProductListView {...args} back={props.back} />}\n      />\n    </Switch>\n  );\n}\n\nconst StaffProductListView = (props) => {\n  const { path } = props.match;\n  const { perms } = useContext(SharedDataCtx);\n  const [state, setState] = useState({ loading: true, data: null, error: null });\n\n  const query = getWindowQuery();\n  const cat = query.get('cat');\n  const page = query.get('page');\n  const published = query.get('published');\n  const presale = query.get('presale');\n  const sale = query.get('sale');\n\n  useEffect(() => {\n    setState({ loading: true, data: null, error: null });\n    const query = new URLSearchParams(window.location.search);\n    query.delete('tab');\n    productServices\n      .list(query)\n      .then((data) => {\n        setState({ loading: false, data, error: null });\n      })\n      .catch((error) => {\n        setState({ loading: false, data: null, error });\n      });\n  }, [cat, page, published, presale, sale]);\n\n  function getQueryUrl(query) {\n    const path = new URL(window.location.href);\n    return `${path.pathname}?${query}`;\n  }\n\n  const stateData = state?.data || {};\n\n  const getPreviousUrl = () => {\n    let url = getPageUrl(stateData?.previous);\n    if (!url) {\n      const page = getPage(window.location.href);\n      if (`${page}` === '2') {\n        url = new URL(window.location.href);\n        url.searchParams.delete('page');\n        return `${url.pathname}?${url.searchParams}`;\n      }\n    }\n    return url;\n  };\n  const getNextUrl = () => getPageUrl(stateData?.next);\n  const getPageUrl = (url) => {\n    if (!url) return;\n    const page = getPage(url);\n    if (!page) return;\n    query.set('page', page);\n    return getQueryUrl(query);\n  };\n  const getPage = (pageUrl) => new URL(pageUrl).searchParams.get('page');\n\n  const canAdd = hasPerms(perms.perms, ['shop.add_product']);\n\n  const prevLink = getPreviousUrl();\n  const nextLink = getNextUrl();\n\n  const updateViewProps = { state, setState, prevLink, nextLink };\n  const filterProps = { history: props.history };\n\n  return (\n    <Switch>\n      <AdminRoute\n        path={`${path}:prodSlug/`}\n        render={(args) => (\n          <StaffProductUpdateView back={SHOP_PATHS.productList(true)} {...args} list={updateViewProps} />\n        )}\n        requiredPerms={['shop.change_product']}\n      />\n\n      {\n        //#region ListView\n      }\n      <AdminRoute requiredPerms={['shop.view_product']}>\n        <AdminView\n          title={`Products ${state.loading ? '' : `(${stateData.count})`}`}\n          back={props.back}\n          actions={\n            <AdminNavLink\n              label=\"Add product\"\n              to={`${addForwardSlash(props.match.url)}new/`}\n              disabled={!canAdd}\n              className=\"btn-primary\"\n            />\n          }\n        >\n          <div className=\"mb-2\">\n            <FilterForm>\n              <div className=\"d-grid grid-md-4 gap-2\">\n                <FilterForm.CategorySelect\n                  {...filterProps}\n                  items={stateData?.categories?.items}\n                  emptyLabel=\"Filtrer par catégorie\"\n                />\n                <FilterForm.PublishedSelect {...filterProps} emptyLabel=\"Filtrer par status\" />\n                <FilterForm.PreSaleToggle {...filterProps} label=\"En pré-vente\" />\n                <FilterForm.SaleToggle {...filterProps} label=\"En promo\" />\n              </div>\n            </FilterForm>\n          </div>\n\n          {\n            //#region ProductTable\n          }\n\n          <AdminView.Section className=\"product-table mb-3\">\n            {state.loading && <Loading />}\n\n            {!state.loading && (\n              <ItemTable\n                className=\"w-100\"\n                items={stateData?.results}\n                headers={['', '', 'Add to carts', 'Price (CFA)', 'Status']}\n                renderItem={(product) => {\n                  const itemProps = { product, query };\n                  return <ProductRow {...itemProps} key={product.slug} />;\n                }}\n              />\n            )}\n          </AdminView.Section>\n\n          {\n            //#endregion ProductTable\n          }\n\n          <div className=\"mb-3\">\n            {prevLink && (\n              <Link to={prevLink} className=\"btn\">\n                Previous\n              </Link>\n            )}\n            {nextLink && (\n              <Link to={nextLink} className=\"btn\">\n                Next\n              </Link>\n            )}\n          </div>\n        </AdminView>\n      </AdminRoute>\n\n      {\n        //#endregion\n      }\n    </Switch>\n  );\n};\n\n//#region ProductRow\n\nconst ProductRow = (props) => {\n  const { product } = props;\n  const prodSlug = product?.slug;\n\n  if (!prodSlug) return null;\n\n  const { name, cover_data, category_data, is_on_sale, is_pre_sale } = product;\n\n  return (\n    <Table.Tr className=\"product-row\">\n      <Table.Td className=\"d-flex product-cover\" style={{ minWidth: 0 }}>\n        <ImgSquare {...cover_data} className=\"rounded\" />\n      </Table.Td>\n\n      <Table.Td className=\"product-detail\">\n        <Link to={SHOP_PATHS.productUpdate(prodSlug, true)}>\n          <div className=\"fw-bold\" title={name}>\n            {name}\n          </div>\n        </Link>\n\n        <div className=\"text-muted text-sm\">\n          {category_data && <span className=\"me-1\">{category_data.name}</span>}\n          {is_pre_sale && <span className=\"me-1\">Pré-vente</span>}\n        </div>\n      </Table.Td>\n\n      <Table.Td className=\"d-none d-md-table-cell text-sm text-center\">{product.add_to_cart_count}</Table.Td>\n\n      <Table.Td className=\"text-center\">\n        <ProductPriceDisplay\n          product={product}\n          retail_price={product.retail_price_data}\n          sale_price={product.sale_price_data}\n        />\n      </Table.Td>\n\n      <Table.Td className=\"d-none d-md-table-cell text-sm text-center\">\n        <PublishedStatusSpan is_published={product?.page?.is_published} pill />\n      </Table.Td>\n    </Table.Tr>\n  );\n};\n//#endregion ProductRow\n"],"sourceRoot":""}
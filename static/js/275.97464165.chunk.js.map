{"version":3,"file":"static/js/275.97464165.chunk.js","mappings":"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","sources":["../../../../shopy/shopy-storejs/src/Product/UpdateView.tsx"],"sourcesContent":["import * as React from 'react';\nimport { useParams, useNavigate, useSearchParams } from 'react-router-dom';\n\nimport Staff from '@miq/staffjs';\nimport { useForm } from '@miq/formjs';\nimport { useRequest } from '@miq/hookjs';\nimport { Loading, QueryButton } from '@miq/componentjs';\nimport { addForwardSlash, Response } from '@miq/utiljs';\n\nimport './updateview.scss';\n\nimport { StaffProduct } from './models';\nimport { PublishButton, UnPublishButton } from '../components';\nimport {\n  ProductUpdateInfoTab,\n  ProductUpdateInventoryTab,\n  ProductUpdateMediaTab,\n  ProductUpdateSettingsTab,\n  ProductUpdateTabProps,\n} from './UpdateViewTabs';\nimport { ProductCardItem } from './components';\nimport { emitter } from '../events';\n\n//#region FIELDS\n\nconst formInfoFields = [\n  'name',\n  'category',\n  'description',\n  'retail_price',\n  'is_pre_sale',\n  'is_pre_sale_text',\n  'is_pre_sale_dt',\n  'is_on_sale',\n  'sale_price',\n];\nconst configFormFields = ['cost', 'color_group_pk', 'stage'];\nconst supplierFormFields = [\n  'supplier_name',\n  'supplier_item_id',\n  'supplier_item_sn',\n  'supplier_item_category',\n  'supplier_item_url',\n  'supplier_item_cost',\n  'supplier_item_cost_currency',\n  'supplier_order_id',\n];\nconst seoFields = ['meta_title', 'meta_description', 'meta_slug'];\nconst formFields = [...formInfoFields, ...configFormFields, ...supplierFormFields, ...seoFields];\nconst formDefaultValues: any = {\n  retail_price: 0.0,\n  is_pre_sale: false,\n  sale_price: 0.0,\n  is_on_sale: false,\n  is_published: false,\n};\nconst mapData2Values = (data: any = {}) => {\n  const values: any = {};\n  formFields.forEach((f) => {\n    const value = data?.[f];\n    if (value == null) {\n      values[f] = formDefaultValues[f] ?? '';\n      return;\n    }\n    values[f] = value;\n  });\n  return { ...formDefaultValues, ...values };\n};\n\n//#endregion FIELDS\n\n//#region ProductStaffUpdateView\n\nexport default function ProductStaffUpdateView(props: any) {\n  let { back } = props;\n  const { prodSlug } = useParams();\n  const [params] = useSearchParams();\n  const navigate = useNavigate();\n\n  const form = useForm(mapData2Values());\n  const { res, setRes, loading, ...request } = useRequest(() => StaffProduct({ slug: prodSlug }).retrieve(), {\n    refreshDeps: [prodSlug],\n    onSuccess: ({ data }) => form.setValues(mapData2Values(data)),\n    onError: ({ response }) => {\n      if (response?.status === 404) return navigate('../');\n    },\n  });\n\n  const r = new Response(res);\n  if (!r.isSuccess) return null;\n\n  if (loading) return <Loading />;\n\n  const instance = StaffProduct(r.data);\n\n  const updateData = (d: any) => {\n    request.updateData(d);\n    emitter.update(d);\n  };\n\n  const tab = params.get('tab');\n\n  const tabsProps = {\n    instance,\n    form,\n    setRes,\n    onUpdate: updateData,\n    navigate,\n    back,\n    params,\n    tab,\n    categories: r?.data?.categories,\n  };\n  const page = params.get('page');\n  return (\n    <Staff.View\n      back={`${addForwardSlash(back)}${page ? `?page=${page}` : ''}`}\n      title={<ProductCardItem data={{ ...instance.export() }} />}\n      requiredPerms={['store.change_product']}\n      className=\"product-staff-update-view\"\n    >\n      <Staff.Section\n        title={QButtons}\n        actions={\n          instance.is_published ? (\n            <UnPublishButton instance={instance} onSuccess={({ data }) => updateData(data)}>\n              DÃ©publier ce produit\n            </UnPublishButton>\n          ) : (\n            <PublishButton\n              instance={instance}\n              onSuccess={({ data }) => updateData(data)}\n              onError={(err) => form.handleError(err)}\n            >\n              Publier ce produit\n            </PublishButton>\n          )\n        }\n      >\n        {(() => {\n          switch (tab) {\n            case 'inventory':\n              return <ProductUpdateInventoryTab {...tabsProps} />;\n            case 'settings':\n              return <ProductUpdateSettingsTab {...tabsProps} />;\n            case 'media':\n              return <ProductUpdateMediaTab {...tabsProps} />;\n\n            default:\n              return <ProductUpdateInfoTab {...tabsProps} />;\n          }\n        })()}\n      </Staff.Section>\n    </Staff.View>\n  );\n}\n\n//#endregion ProductStaffUpdateView\n\nconst QButtons = (\n  <div className=\"query-buttons\">\n    <QueryButton index target=\"tab\" className=\"btn-md\">\n      Info\n    </QueryButton>\n    <QueryButton target=\"tab\" value=\"media\" className=\"btn-md\">\n      Media\n    </QueryButton>\n    <QueryButton target=\"tab\" value=\"inventory\" className=\"btn-md\">\n      Inventory\n    </QueryButton>\n    <QueryButton target=\"tab\" value=\"settings\" className=\"btn-md\">\n      Settings\n    </QueryButton>\n  </div>\n);\n"],"names":["formFields","formDefaultValues","retail_price","is_pre_sale","sale_price","is_on_sale","is_published","mapData2Values","data","values","forEach","f","value","ProductStaffUpdateView","props","back","prodSlug","useParams","useSearchParams","params","navigate","useNavigate","form","useForm","useRequest","StaffProduct","slug","retrieve","refreshDeps","onSuccess","setValues","onError","response","status","res","setRes","loading","request","r","Response","isSuccess","instance","updateData","d","emitter","tab","get","tabsProps","onUpdate","categories","page","addForwardSlash","title","export","requiredPerms","className","QButtons","actions","err","handleError","index","target"],"sourceRoot":""}
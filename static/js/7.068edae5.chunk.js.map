{"version":3,"sources":["shop/orders/components.jsx","shop/product/forms.jsx","shop/product/Attribute.jsx","shop/product/UpdateView/ProductList.jsx","shop/product/UpdateView/index.jsx"],"names":["SupplierData","product","className","supplier_name","supplier_item_id","supplier_item_category","supplier_item_cost","supplier_item_cost_currency","href","supplier_item_url","target","rel","isRequired","ProductNameInput","props","showLabel","label","input","placeholder","rest","Label","value","TextInput","required","name","maxLength","ProductCategoryInput","categories","SelectInput","nullValue","items","map","cat","Option","key","ProductRetailPriceInput","id","type","min","step","ProductPresaleCheckboxInput","CheckboxInput","ProductPresaleTextInput","TextAreaX","ProductOnSaleCheckboxInput","ProductSalePriceInput","ProductForm","children","context","fields","prodSlug","onWillSubmit","onSuccess","onError","onSubmit","e","preventDefault","fD","forEach","field","values","productServices","patch","then","data","catch","err","handleError","NameInput","DescField","text","Field","CategoryInput","RetailPriceInput","PresaleCheckboxInput","PresaleTextInput","OnSaleCheckboxInput","SalePriceInput","StageSelect","stages","stage","AttributeUpdateForm","instance","form","useForm","slug","patchAttribute","style","alignItems","error","errors","Icon","Icons","Trash","render","args","onClick","deleteAttribute","setOpen","toast","message","renderHeader","Submit","AttributeCreateForm","initValues","postAttribute","setValues","AttrNameInput","minLength","AttrValueInput","ProductListItemCard","cover_data","to","SHOP_PATHS","productUpdate","is_published","page","pill","short","retail_price","retail_price_data","sale_price","sale_price_data","ProductListCard","list","state","loading","results","prod","ProductUpdateStaffView","search","location","query","URLSearchParams","useState","setState","match","params","pFormInitial","useEffect","detail","mapProductDataToForm","useContext","ToastCtx","tab","get","history","sharedProps","setProduct","setError","prev_slug","next_slug","title","LABELS","viewTitle","viewText","actions","CN","view","back","set","ViewTabs","success","SHOP_MSGS","update_success","footer","bottom","name_field_text","none","category","is_pre_sale","is_pre_sale_text","is_on_sale","desc_field_text","description","top","onPublishSuccess","publish_success","onUnpublishSuccess","unpublish_success","MediaViewTab","Section","onCreateSuccess","gap","cover","onCreate","imgData","cover_create_success","cover_update_error","onUpdate","cover_update_success","onDelete","cover_delete_success","image","images_data","img","swapCover","filter","i","images","bodyClassName","InventoryViewTab","addAtr","setAddAtr","productData","attributes","attr","pData","SettingsViewTab","delete_success","push","productList","delete_error","ProductSEOForm","slug_public","patchPage","page_update_success","page_update_error","QueryButton","path","URL","window","pathname","pushQuery","viewCn"],"mappings":"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","file":"static/js/7.068edae5.chunk.js","sourcesContent":["export const SupplierData = ({ product, ...props }) => {\n  if (!product) return null;\n\n  return (\n    <div className=\"product-supplier-data\">\n      <ul>\n        <li>\n          <span className=\"\">Supplier</span>\n          <span className=\"\">{product.supplier_name}</span>\n        </li>\n        <li>\n          <span className=\"\">Item id</span>\n          <span className=\"\">{product.supplier_item_id}</span>\n        </li>\n        <li>\n          <span className=\"\">Category</span>\n          <span className=\"\">{product.supplier_item_category}</span>\n        </li>\n\n        <li>\n          <span className=\"\">Item cost</span>\n          <span className=\"\">\n            {product.supplier_item_cost} ({product.supplier_item_cost_currency})\n          </span>\n        </li>\n        <li>\n          <a href={product.supplier_item_url} className=\"text-underline\" target=\"_blank\" rel=\"noopener noreferrer\">\n            View supplier page\n          </a>\n        </li>\n      </ul>\n    </div>\n  );\n};\n","import { useEffect } from 'react';\nimport { AdminView, PublishedStatusSpan } from '@miq/adminjs';\nimport Form from '@miq/form';\nimport { isRequired } from '@miq/utils';\nimport { productServices } from './utils';\nimport { SHOP_MSGS } from '../constants';\n\nconst isR = isRequired;\n\nexport function ProductQuickUpdateForm({ form, product, ...props }) {\n  const { setProduct, toast, categories } = props;\n  const productSlug = product?.slug;\n\n  useEffect(() => {}, [productSlug]);\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    const fD = {\n      name: form.values.name,\n      retail_price: form.values.retail_price,\n      is_on_sale: form.values.is_on_sale,\n      is_pre_sale: form.values.is_pre_sale,\n    };\n\n    if (form.values.category) fD.category = form.values.category;\n    if (form.values.is_on_sale) fD.sale_price = form.values.sale_price;\n\n    if (form.values.is_pre_sale) fD.is_pre_sale_text = form.values.is_pre_sale_text;\n\n    return productServices\n      .patch(product.slug, fD)\n      .then((data) => {\n        setProduct?.({ ...product, ...data });\n        toast?.success({ message: SHOP_MSGS.product.update_success });\n      })\n      .catch((err) => {\n        toast?.error({ message: SHOP_MSGS.product.update_error });\n        return form.handleError(err);\n      });\n  };\n\n  return (\n    <ProductForm context={form} onSubmit={handleSubmit} className=\"quick-product-update-form\">\n      <div className=\"d-grid grid-md-3 gap-3\">\n        <div className=\"span-md-2\">\n          <AdminView.Section\n            title=\"Details\"\n            actions={<PublishedStatusSpan is_published={product?.page?.is_published} pill />}\n          >\n            <div className=\"mb-1\">\n              <ProductNameInput error={form.errors.name} />\n            </div>\n\n            {categories && (\n              <div className=\"mb-1\">\n                <ProductCategoryInput categories={categories} error={form?.errors?.category} />\n              </div>\n            )}\n\n            <div className=\"mb-1\">\n              <div className=\"mb-1\">\n                <ProductRetailPriceInput error={form?.errors?.retail_price} />\n              </div>\n\n              {/* PRE SALE */}\n              <div className=\"mb-1\">\n                <div className=\"d-flex align-items-center mb-1\">\n                  <ProductPresaleCheckboxInput error={form?.errors?.is_pre_sale} />\n                </div>\n\n                {form.values.is_pre_sale && (\n                  <div className=\"mb-2\">\n                    <ProductPresaleTextInput error={form?.errors?.is_pre_sale_text} />\n                  </div>\n                )}\n              </div>\n\n              {/* SALE  */}\n              <div className=\"d-flex align-items-center mb-1\">\n                <ProductOnSaleCheckboxInput error={form?.errors?.is_on_sale} />\n              </div>\n\n              {form.values.is_on_sale && (\n                <div className=\"mb-2\">\n                  <ProductSalePriceInput error={form?.errors?.sale_price} />\n                </div>\n              )}\n            </div>\n\n            <div className=\"my-3\">\n              <Form.Submit value=\"Update product\" className=\"btn btn-primary-3\" />\n            </div>\n          </AdminView.Section>\n        </div>\n      </div>\n    </ProductForm>\n  );\n}\n\n//#region INPUTS\n\nexport const ProductNameInput = (props) => {\n  const { showLabel = false, label = 'Name', ...input } = props;\n  const { placeholder = 'Give a name to the item', ...rest } = input;\n  return (\n    <>\n      {showLabel && <Form.Label value={label} className=\"mb-1\" />}\n      <Form.TextInput {...rest} required name=\"name\" placeholder={placeholder} maxLength={99} />\n    </>\n  );\n};\n\nexport const ProductDescriptionField = (props) => {\n  const { label, text, ...input } = props;\n  const { placeholder = 'Give a description to the item', ...rest } = input;\n  return (\n    <Form.Field {...{ label, text }}>\n      <Form.TextAreaX\n        {...rest}\n        name=\"description\"\n        // error={form.errors.description}\n        placeholder={placeholder}\n      />\n    </Form.Field>\n  );\n};\n\nexport const ProductCategoryInput = (props) => {\n  const { showLabel = false, label = 'Category', ...input } = props;\n  const { categories, ...rest } = input;\n\n  return (\n    <>\n      {showLabel && <Form.Label value={label} />}\n      <Form.SelectInput {...rest} required name=\"category\" nullValue={{ label: 'Sélectionnez une catégorie' }}>\n        {categories?.items?.map((cat) => {\n          return <Form.SelectInput.Option {...cat} key={cat.value} />;\n        })}\n      </Form.SelectInput>\n    </>\n  );\n};\n\nexport const ProductRetailPriceInput = (props) => {\n  const { showLabel = false, label = 'Retail price', ...rest } = props;\n\n  return (\n    <>\n      {showLabel && <Form.Label value={label} id=\"retail_price_label\" />}\n      <Form.TextInput\n        {...rest}\n        required\n        type=\"number\"\n        name=\"retail_price\"\n        aria-describedby=\"retail_price_label\"\n        min=\"0\"\n        step=\"0.01\"\n      />\n    </>\n  );\n};\n\nexport const ProductPresaleCheckboxInput = (props) => {\n  const { showLabel = false, label = 'Pre-sale', ...rest } = props;\n\n  return (\n    <div className=\"d-flex align-items-center\">\n      <Form.CheckboxInput {...rest} name=\"is_pre_sale\" className=\"me-2\" />\n      <Form.Label value={label} />\n    </div>\n  );\n};\n\nexport const ProductPresaleTextInput = (props) => {\n  return (\n    <>\n      <Form.Label value=\"Pre sale text\" id=\"is_pre_sale_text_label\" className=\"miq-checkbox-label\" />\n      <Form.TextAreaX name=\"is_pre_sale_text\" aria-describedby=\"is_pre_sale_text_label\" />\n    </>\n  );\n};\n\nexport const ProductOnSaleCheckboxInput = (props) => {\n  const { showLabel = false, label = 'On Sale', ...rest } = props;\n\n  return (\n    <div className=\"d-flex align-items-center\">\n      <Form.CheckboxInput {...rest} name=\"is_on_sale\" className=\"me-2\" />\n      <Form.Label value={label} />\n    </div>\n  );\n};\n\nexport const ProductSalePriceInput = (props) => {\n  const { showLabel = false, label = 'Sale price', ...rest } = props;\n  return (\n    <>\n      {showLabel && <Form.Label value={label} id=\"sale_price_label\" className=\"miq-checkbox-label\" />}\n      <Form.TextInput\n        {...rest}\n        required\n        type=\"number\"\n        name=\"sale_price\"\n        aria-describedby=\"sale_price_label\"\n        min=\"0\"\n        step=\"0.01\"\n      />\n    </>\n  );\n};\n\nexport const ProductStageSelect = (props) => {\n  const { showLabel = false, label = 'Stage', ...input } = props;\n  const { stages, name, ...rest } = input;\n\n  return (\n    <>\n      {showLabel && <Form.Label value={label} />}\n      <Form.SelectInput {...rest} required name={name || 'stage'} nullValue={{ label: 'Select stage' }}>\n        {stages?.map?.((stage) => {\n          return <Form.SelectInput.Option {...stage} key={stage.value} />;\n        })}\n      </Form.SelectInput>\n    </>\n  );\n};\n\n//#endregion INPUTS\n\n//#region FORMS\n\nexport const ProductForm = ({ children, context, fields = [], prodSlug, ...props }) => {\n  const { onWillSubmit, onSuccess, onError, ...rest } = props;\n\n  const handleSubmit = (e) => {\n    if (!context || !fields) return;\n\n    onWillSubmit?.();\n\n    e.preventDefault();\n    const fD = {\n      // name: context.values.name,\n      // retail_price: form.values.retail_price,\n      // is_on_sale: form.values.is_on_sale,\n      // is_pre_sale: form.values.is_pre_sale,\n    };\n\n    fields.forEach((field) => {\n      const value = context.values[field];\n      if (value == null) return;\n      fD[field] = value;\n    });\n\n    // if (form.values.category) fD.category = form.values.category;\n    // if (form.values.is_on_sale) fD.sale_price = form.values.sale_price;\n\n    // if (form.values.is_pre_sale) fD.is_pre_sale_text = form.values.is_pre_sale_text;\n    if (!prodSlug) return;\n\n    return productServices\n      .patch(prodSlug, fD)\n      .then((data) => {\n        props?.onSuccess?.(data);\n      })\n      .catch((err) => {\n        if (props.onError) return props.onError(err);\n        return context.handleError(err);\n      });\n  };\n  return (\n    <Form {...rest} context={context} onSubmit={props.onSubmit || handleSubmit}>\n      {children}\n    </Form>\n  );\n};\n\nProductForm.NameInput = ProductNameInput;\nProductForm.DescField = ProductDescriptionField;\nProductForm.CategoryInput = ProductCategoryInput;\nProductForm.RetailPriceInput = ProductRetailPriceInput;\nProductForm.PresaleCheckboxInput = ProductPresaleCheckboxInput;\nProductForm.PresaleTextInput = ProductPresaleTextInput;\nProductForm.OnSaleCheckboxInput = ProductOnSaleCheckboxInput;\nProductForm.SalePriceInput = ProductSalePriceInput;\nProductForm.StageSelect = ProductStageSelect;\n\n//#endregion\n","import { IBtnSave, ConfirmIconButton, Icons, Button } from '@miq/components';\n\nimport Form, { useForm } from '@miq/form';\nimport { productServices } from './utils';\n\n//#region FORMS\n\nexport const AttributeUpdateForm = ({ instance, product, ...props }) => {\n  const form = useForm({ name: instance?.name || '', value: instance?.value || '' });\n\n  if (!instance || !instance.slug || !product || !product.slug) return null;\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n\n    return productServices\n      .patchAttribute(product.slug, instance.slug, form.values)\n      .then((data) => {\n        return props?.onSuccess(data);\n      })\n      .catch((err) => {\n        return form.handleError(err);\n      });\n  };\n\n  return (\n    <Form context={form} onSubmit={handleSubmit}>\n      <div className=\"d-flex flex-column flex-md-row\" style={{ alignItems: 'end' }}>\n        <div className=\"me-md-1\">\n          <AttrNameInput error={form.errors.name} />\n        </div>\n\n        <div className=\"w-100 me-md-1\">\n          <AttrValueInput error={form.errors.value} />\n        </div>\n\n        <div className=\"d-flex ms-md-1\">\n          <ConfirmIconButton\n            Icon={Icons.Trash}\n            render={(args) => (\n              <div className=\"p-3 w-100 d-flex justify-content-center\">\n                <div className=\"w-md-50 d-flex align-items-center justify-content-between\">\n                  <div>\n                    <Button\n                      onClick={() =>\n                        productServices\n                          .deleteAttribute(product.slug, instance.slug)\n                          .then((data) => {\n                            args?.setOpen(false);\n                            return props?.onSuccess(data);\n                          })\n                          .catch(() => {\n                            props?.toast?.error({ message: 'Could not delete attribute.' });\n                          })\n                      }\n                      className=\"btn-danger\"\n                    >\n                      Supprimer\n                    </Button>\n                  </div>\n                  <div>\n                    <Button onClick={() => args?.setOpen(false)}>Annuler</Button>\n                  </div>\n                </div>\n              </div>\n            )}\n            renderHeader={(args) => {\n              return (\n                <div className=\"p-3\">\n                  <div className=\"fw-bold\">Supprimer l'attribut \"{instance.name}\"</div>\n                </div>\n              );\n            }}\n            className=\"btn-danger-3 me-1\"\n          />\n          <Form.Submit value=\"Save\" className=\"btn btn-primary-2\" />\n        </div>\n      </div>\n    </Form>\n  );\n};\n\nexport function AttributeCreateForm({ product, ...props }) {\n  const initValues = { name: '', value: '' };\n  const form = useForm(initValues);\n\n  if (!product || !product.slug) return null;\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    // if (form.hasErrors()) return;\n\n    return productServices\n      .postAttribute(product.slug, form.values)\n      .then((data) => {\n        form.setValues(initValues);\n        return props?.onSuccess(data);\n      })\n      .catch((err) => {\n        return form.handleError(err);\n      });\n  };\n\n  // const invalidAttrNames = product?.attributes?.map((at) => at.name) || [];\n\n  return (\n    <Form context={form} onSubmit={handleSubmit}>\n      <div className=\"d-flex flex-column flex-md-row\" style={{ alignItems: 'end' }}>\n        <div className=\"me-md-1\">\n          <Form.Label value=\"Name\" />\n          <AttrNameInput error={form.errors.name} />\n        </div>\n\n        <div className=\"w-100 me-md-1\">\n          <Form.Label value=\"Value\" />\n          <AttrValueInput error={form.errors.value} />\n        </div>\n\n        <div className=\"ms-md-1\">\n          <IBtnSave type=\"submit\" className=\"btn-primary-3\" />\n        </div>\n      </div>\n    </Form>\n  );\n}\n\n//#endregion FORMS\n\n//#region INPUTS\n\nconst AttrNameInput = (props) => (\n  <Form.TextInput placeholder=\"Nom de l'attribut\" {...props} required name=\"name\" maxLength={30} minLength={2} />\n);\n\nconst AttrValueInput = (props) => (\n  <Form.TextInput placeholder=\"Valeur de l'attribut\" {...props} required name=\"value\" maxLength={99} minLength={2} />\n);\n\n//#endregion INPUTS\n","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport { ProductPriceDisplay } from 'src/shop/public/components';\nimport { ImgSquare, Loading, PublishedStatusSpan } from 'src/exports';\nimport { SHOP_PATHS } from 'src/shop/constants';\n\nexport const ProductListItemCard = ({ product = {}, ...props }) => {\n  return (\n    <div className=\"product-list-item-card d-flex\">\n      <div className=\"me-1\">\n        <ImgSquare {...product?.cover_data} className=\"rounded\" />\n      </div>\n\n      <Link to={SHOP_PATHS.productUpdate(product.slug, true)}>\n        <div className=\"flex-1\">\n          <div className=\"d-flex align-items-center\">\n            <span className=\"product-title me-2\">{product.name}</span>\n            <PublishedStatusSpan is_published={product?.page?.is_published} pill short />\n          </div>\n          <ProductPriceDisplay\n            product={{ ...product, retail_price: product.retail_price_data, sale_price: product.sale_price_data }}\n          />\n        </div>\n      </Link>\n    </div>\n  );\n};\n\nexport function ProductListCard(props) {\n  const { list } = props;\n\n  const state = list?.state;\n\n  if (!state) return null;\n  if (state.loading) return <Loading />;\n  if (!state.data) return null;\n\n  return state?.data?.results.map((prod) => {\n    return (\n      <div className=\"mb-1\" key={prod.slug}>\n        <ProductListItemCard product={prod} />\n      </div>\n    );\n  });\n}\n","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport { useContext, useEffect, useState } from 'react';\n\nimport { AdminView, StaffCoverUpdateForm } from '@miq/adminjs';\nimport Form, { useForm } from '@miq/form';\nimport { Card, ToastCtx, Button, Img, ImgDeleteIconButton, Loading } from '@miq/components';\n\nimport './update-view.scss';\n\nimport { SupplierData } from 'src/shop/orders/components';\n\nimport { productServices } from 'src/shop/product/utils';\nimport {\n  ProductImageAltTextInput,\n  ProductImageUploadButton,\n  StaffProductDeleteButton,\n  StaffProductPublishButton,\n} from 'src/shop/product/components';\nimport { AttributeCreateForm, AttributeUpdateForm } from 'src/shop/product/Attribute';\nimport { ProductForm } from 'src/shop/product/forms';\nimport { SHOP_MSGS, SHOP_PATHS } from 'src/shop/constants';\n\nimport { ProductListCard, ProductListItemCard } from './ProductList';\n\nexport default function ProductUpdateStaffView(props) {\n  const { search } = props.location;\n  const query = new URLSearchParams(search);\n\n  const [state, setState] = useState({ loading: true, data: null, error: null });\n\n  const { prodSlug } = props.match.params;\n  const form = useForm(pFormInitial);\n  const { setValues } = form;\n  useEffect(() => {\n    if (!prodSlug) return null;\n    setState({ loading: true, data: null, error: null });\n    productServices\n      .detail(prodSlug)\n      .then((data) => {\n        setState({ loading: false, data, error: null });\n        setValues(mapProductDataToForm(data));\n      })\n      .catch((error) => {\n        setState({ loading: false, data: null, error });\n      });\n  }, [prodSlug, setValues]);\n\n  const toast = useContext(ToastCtx);\n\n  if (state.loading) return <Loading />;\n\n  const product = state?.data;\n  if (!product) return null;\n\n  const tab = query.get('tab') || 'info';\n\n  const setProduct = (data) => setState({ ...state, data: { ...state.data, ...data } });\n  const setError = (error) => setState({ ...state, error });\n\n  const { history } = props;\n  const sharedProps = { ...props, tab, prodSlug, product, setProduct, state, setState, setError, form, toast };\n  const { prev_slug, next_slug } = product;\n\n  return (\n    <AdminView\n      title={LABELS.viewTitle}\n      text={LABELS.viewText}\n      actions={\n        <div>\n          {prev_slug && (\n            <Link\n              to={SHOP_PATHS.productUpdate(prev_slug, query)}\n              className=\"btn me-1\"\n              title=\"Voir le produit précédent\"\n            >\n              Previous\n            </Link>\n          )}\n          {next_slug && (\n            <Link to={SHOP_PATHS.productUpdate(next_slug, query)} className=\"btn\" title=\"Voir le produit suivant\">\n              Next\n            </Link>\n          )}\n        </div>\n      }\n      className={CN.view}\n      back={props?.back}\n    >\n      <div className=\"me-1 w-25 d-none d-lg-block\">\n        <ProductListCard {...props} prodSlug={prodSlug} />\n      </div>\n\n      <div className=\"flex-1\">\n        <div className=\"d-flex flex-column-reverse flex-md-row align-items-center justify-content-between\">\n          {\n            //#region QueryButtons\n          }\n          <div className=\"mb-1\">\n            <QueryButton {...{ history, query }} onClick={(query) => query.set('tab', 'info')}>\n              Info\n            </QueryButton>\n            <QueryButton {...{ history, query }} onClick={(query) => query.set('tab', 'media')}>\n              Media\n            </QueryButton>\n            <QueryButton {...{ history, query }} onClick={(query) => query.set('tab', 'inventory')}>\n              Inventory\n            </QueryButton>\n            <QueryButton {...{ history, query }} onClick={(query) => query.set('tab', 'settings')}>\n              Settings\n            </QueryButton>\n          </div>\n          {\n            //#endregion\n          }\n\n          <div className=\"mb-2 min-w-35\">\n            <ProductListItemCard product={state?.data} />\n          </div>\n        </div>\n\n        <ViewTabs {...sharedProps} />\n      </div>\n    </AdminView>\n  );\n}\n\n//#region TABS\n\n//#region ViewTab\nconst ViewTabs = ({ tab, ...props }) => {\n  const { prodSlug, form, product, state, setProduct, toast } = props;\n\n  if (state?.loading) return <Loading />;\n\n  switch (tab) {\n    case 'media':\n      return <MediaViewTab {...props} />;\n    case 'inventory':\n      return <InventoryViewTab {...props} />;\n    case 'settings':\n      return <SettingsViewTab {...props} />;\n\n    default:\n      const { setError } = props;\n      const { categories } = product;\n      const fields = [\n        'name',\n        'category',\n        'description',\n        'retail_price',\n        'is_pre_sale',\n        'is_pre_sale_text',\n        'is_on_sale',\n        'sale_price',\n      ];\n\n      return (\n        <div className=\"d-grid grid-md-3 gap-1\">\n          {\n            //#region MAIN\n          }\n          <div className=\"span-md-2\">\n            <ProductForm\n              context={form}\n              prodSlug={prodSlug}\n              product={product}\n              fields={fields}\n              onSuccess={(data) => {\n                setProduct(data);\n                toast.success({ message: SHOP_MSGS.product.update_success });\n              }}\n              onError={(err) => {\n                form.handleError(err);\n              }}\n              toast={toast}\n            >\n              <Card\n                title=\"Details\"\n                text=\"Modifier les informations de cet article.\"\n                footer={\n                  <div className=\"sticky\" style={{ bottom: 0 }}>\n                    <div className=\"d-flex justify-content-center\">\n                      <Form.Submit value=\"Sauvegarder\" className=\"submit-btn btn btn-primary min-w-25\" />\n                    </div>\n                  </div>\n                }\n                className=\"mb-1\"\n              >\n                <Form.Field label=\"Nom\" text={LABELS.name_field_text}>\n                  <ProductForm.NameInput error={form.errors.name} />\n                </Form.Field>\n                <Form.Field label=\"Catégorie\" text={LABELS.none}>\n                  <ProductForm.CategoryInput {...{ categories }} error={form.errors.category} className=\"d-block\" />\n                </Form.Field>\n                <Form.Field label=\"Prix\">\n                  <ProductForm.RetailPriceInput error={form.errors.retail_price} />\n                </Form.Field>\n\n                <Form.Field label=\"Pré-vente\">\n                  <ProductForm.PresaleCheckboxInput\n                    label=\"Cet article est en pré-vente\"\n                    error={form.errors.is_pre_sale}\n                  />\n                </Form.Field>\n                {form.values.is_pre_sale && (\n                  <Form.Field text=\"Ajouter un text de pré-vente.(facultatif)\">\n                    <ProductForm.PresaleTextInput error={form.errors.is_pre_sale_text} />\n                  </Form.Field>\n                )}\n\n                <Form.Field label=\"Promotion\" text=\"\">\n                  <ProductForm.OnSaleCheckboxInput label=\"Cet article est en promo\" error={form.errors.is_on_sale} />\n                </Form.Field>\n                {form.values.is_on_sale && (\n                  <Form.Field label=\"Prix réduit\" text=\"\">\n                    <ProductForm.SalePriceInput error={form.errors.sale_price} />\n                  </Form.Field>\n                )}\n\n                <ProductForm.DescField\n                  label=\"Description\"\n                  text={LABELS.desc_field_text}\n                  error={form.errors.description}\n                  placeholder=\"\"\n                />\n              </Card>\n            </ProductForm>\n\n            <Card title=\"Seo\">\n              <ProductSEOForm {...props} />\n            </Card>\n          </div>\n          {\n            //#endregion\n          }\n\n          {\n            //#region SIDEBAR\n          }\n          <div className=\"bg-gray p-1\">\n            <div className=\"sticky\" style={{ top: 0 }}>\n              <div className=\"mb-2\">\n                <StaffProductPublishButton\n                  {...{ prodSlug, product }}\n                  className=\"w-100\"\n                  onPublishSuccess={(data) => {\n                    setProduct(data);\n                    return toast?.success({ message: SHOP_MSGS.product.publish_success });\n                  }}\n                  onUnpublishSuccess={(data) => {\n                    setProduct(data);\n                    return toast?.success({ message: SHOP_MSGS.product.unpublish_success });\n                  }}\n                  onError={(err) => {\n                    form.handleError(err);\n                    setError(err);\n                  }}\n                />\n              </div>\n\n              <div className=\"mb-2\">\n                <SupplierData product={product} />\n              </div>\n            </div>\n          </div>\n          {\n            //#endregion\n          }\n        </div>\n      );\n  }\n};\n//#endregion\n\n//#region MediaViewTab\nconst MediaViewTab = (props) => {\n  const { product, setProduct, toast } = props;\n  return (\n    <AdminView.Section\n      title=\"Images\"\n      actions={\n        <ProductImageUploadButton\n          product={product}\n          onCreateSuccess={(data) => {\n            setProduct({ ...product, ...data });\n          }}\n        />\n      }\n    >\n      <div className=\"d-grid grid-md-3 grid-lg-4\" style={{ gap: 4 }}>\n        <div className=\"\">\n          <StaffCoverUpdateForm\n            slug={product?.cover}\n            data={product.cover_data}\n            onCreate={(imgData) => {\n              productServices\n                .patch(product.slug, { cover: imgData.slug })\n                .then((data) => {\n                  setProduct?.({ ...product, ...data });\n                  toast?.success({ message: SHOP_MSGS.product.cover_create_success });\n                })\n                .catch((err) => {\n                  toast?.error({ message: SHOP_MSGS.product.cover_update_error });\n                });\n            }}\n            onUpdate={(cover_data) => {\n              toast?.success({ message: SHOP_MSGS.product.cover_update_success });\n              return setProduct?.({ ...product, cover_data });\n            }}\n            onDelete={() => {\n              toast?.success({ message: SHOP_MSGS.product.cover_delete_success });\n              return setProduct?.({ ...product, cover_data: null, cover: null });\n            }}\n            className=\"mb-1\"\n          />\n          <ProductImageAltTextInput image={product?.cover_data} />\n        </div>\n\n        {product.images_data.map((img) => {\n          return (\n            <Card\n              title={\n                <Button\n                  onClick={() =>\n                    productServices\n                      .swapCover(product.slug, img.slug)\n                      .then((data) => {\n                        setProduct(data);\n                      })\n                      .catch((err) => {})\n                  }\n                >\n                  Set as cover\n                </Button>\n              }\n              actions={\n                <ImgDeleteIconButton\n                  slug={img.slug}\n                  label=\"\"\n                  className=\"btn-danger-3 ms-1\"\n                  onSuccess={() => {\n                    setProduct({\n                      ...product,\n                      images_data: product.images_data.filter((i) => i.slug !== img.slug),\n                      images: product.images.filter((i) => i !== img.slug),\n                    });\n                  }}\n                />\n              }\n              footer={<ProductImageAltTextInput image={img} />}\n              className=\"mb-1\"\n              bodyClassName=\"p-0\"\n              key={img.slug}\n            >\n              <Img {...img} className=\"product-img\" />\n            </Card>\n          );\n        })}\n      </div>\n    </AdminView.Section>\n  );\n};\n//#endregion\n\n//#region InventoryTab\nconst InventoryViewTab = (props) => {\n  const [addAtr, setAddAtr] = useState(false);\n  const { product, setProduct } = props;\n\n  return (\n    <div className=\"d-grid grid-md-3 gap-1\">\n      <div className=\"span-md-2 p-1 bg-gray\">\n        <AdminView.Section title=\"Tailles\" text=\"Ajouter des tailles\"></AdminView.Section>\n        <AdminView.Section\n          title=\"Attributes\"\n          actions={\n            <Button onClick={() => setAddAtr(!addAtr)} className=\"btn-primary-3\">\n              Ajouter un attribut\n            </Button>\n          }\n        >\n          {addAtr && (\n            <div className=\"border-bottom mb-2 pb-3\">\n              <p className=\"text-center mb-3\">Ajouter un attribut au produit.</p>\n              <AttributeCreateForm\n                product={product}\n                onSuccess={(productData) => setProduct({ ...product, ...productData })}\n              />\n            </div>\n          )}\n\n          <div className=\"my-3\">\n            {product.attributes.map((attr) => (\n              <div className=\"mb-1\" key={attr.slug}>\n                <AttributeUpdateForm\n                  instance={attr}\n                  product={product}\n                  onSuccess={(pData) => setProduct({ ...product, ...pData })}\n                />\n              </div>\n            ))}\n          </div>\n        </AdminView.Section>\n      </div>\n\n      <div className=\"p-1\">\n        <div className=\"sticky\" style={{ top: 0 }}>\n          <div className=\"\">\n            <SupplierData product={product} />\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n//#endregion\n\n//#region SettingsTab\nconst SettingsViewTab = (props) => {\n  const { prodSlug, toast } = props;\n\n  return (\n    <div className=\"\">\n      <AdminView.Section title=\"Supprimer cet article\">\n        <StaffProductDeleteButton\n          {...{ prodSlug }}\n          onSuccess={() => {\n            toast?.success?.({ message: SHOP_MSGS.product.delete_success });\n            return props.history.push(SHOP_PATHS.productList());\n          }}\n          onError={() => toast?.error?.({ message: SHOP_MSGS.product.delete_error })}\n        />\n      </AdminView.Section>\n    </div>\n  );\n};\n//#endregion SettingTab\n\n//#endregion TABS\n\n//#region ProductSEOForm\nconst ProductSEOForm = ({ prodSlug, product, form, ...props }) => {\n  if (!form || !prodSlug) return null;\n\n  const { toast, setProduct } = props;\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    const fD = { title: form.values.title, slug_public: form.values.slug_public };\n\n    return productServices\n      .patchPage(prodSlug, fD, { title: product?.page?.title, slug_public: product?.page?.slug_public })\n      .then((data) => {\n        setProduct({ ...product, ...data });\n        toast.success({ message: SHOP_MSGS.product.page_update_success });\n      })\n      .catch((err) => {\n        form.handleError(err);\n        toast.error({ message: SHOP_MSGS.product.page_update_error });\n      });\n  };\n  return (\n    <Form context={form} onSubmit={handleSubmit}>\n      <Form.Field label=\"Meta title\" className=\"mb-1\">\n        <Form.TextInput\n          required\n          name=\"title\"\n          error={form.errors.title}\n          placeholder=\"Give a name to the item\"\n          maxLength={99}\n        />\n      </Form.Field>\n\n      <Form.Field label=\"Slug\" className=\"mb-1\">\n        <Form.TextInput\n          required\n          name=\"slug_public\"\n          error={form.errors.slug_public}\n          placeholder={'Write slug ...'}\n          maxLength={99}\n        />\n      </Form.Field>\n\n      <div className=\"my-2\">\n        <Form.Submit value=\"Update\" className=\"btn btn-primary-3\" />\n      </div>\n    </Form>\n  );\n};\n//#endregion ProductSEOForm\n\nconst QueryButton = ({ children, query, onClick, ...props }) => {\n  const { history, ...rest } = props;\n  const handleClick = (e) => {\n    onClick?.(query);\n    pushQuery();\n  };\n\n  function pushQuery() {\n    const path = new URL(window.location.href);\n    history?.push?.(`${path.pathname}?${query}`);\n  }\n\n  return (\n    <Button {...rest} onClick={handleClick}>\n      {children}\n    </Button>\n  );\n};\n\nexport const pFormInitial = {\n  name: '',\n  description: '',\n  category: '',\n  retail_price: 0.0,\n  is_pre_sale: false,\n  is_pre_sale_text: '',\n  sale_price: 0.0,\n  is_on_sale: false,\n  //\n  title: '',\n  slug_public: '',\n};\n\nconst mapProductDataToForm = (data) => ({\n  name: data.name || '',\n  description: data.description || '',\n  category: data.category || '',\n  retail_price: data?.retail_price || 0.0,\n  //\n  is_pre_sale: data.is_pre_sale || false,\n  is_pre_sale_text: data.is_pre_sale_text || '',\n  //\n  is_on_sale: data.is_on_sale || false,\n  sale_price: data?.sale_price || 0.0,\n  //\n  title: data.page.title || '',\n  slug_public: data?.page?.slug_public || '',\n});\n\nconst LABELS = {\n  viewTitle: 'Modifier cet article',\n  viewText: '',\n  viewCn: '',\n\n  name_field_text: `Ajoutez un nom qui décrit cet article. Les noms peuvent contenir jusqu’à 99 caractères.\\nNous recommandons 65 caractères au max.`,\n\n  desc_field_text: `Ajoutez les caractéristiques uniques qui décrivent cet article.`,\n  none: '',\n};\n\nconst CN = {\n  view: 'staff-product-update-view',\n};\n"],"sourceRoot":""}
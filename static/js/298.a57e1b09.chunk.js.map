{"version":3,"file":"static/js/298.a57e1b09.chunk.js","mappings":"qVAiBMA,EAAoBC,EAAAA,MAAW,kBAAM,gCACrCC,EAAyBD,EAAAA,MAAW,kBAAM,yDAEjC,SAASE,IAAyB,IAAD,EAC9C,GAAyBC,EAAAA,EAAAA,KAAjBC,EAAR,EAAQA,IAAQC,GAAhB,aACAC,EAAAA,EAAAA,GAAe,CAAEC,SAAUF,EAAKG,WAAYC,UAAWJ,EAAKK,aAE5D,IAAMC,EAAI,IAAIC,EAAAA,GAASR,GAEvB,OAAKO,EAAEE,WAGL,UAAC,KAAD,YACE,SAAC,KAAD,CAAOC,KAAK,aAAaC,SAAS,SAACC,EAAD,CAAkBC,SAAUN,OAC9D,SAAC,KAAD,CAAOG,KAAK,MAAMC,SAAS,SAAChB,EAAD,OAC3B,SAAC,KAAD,CACEmB,OAAK,EACLH,SACE,UAAC,UAAD,CACEI,MAAM,WACNC,KAAK,gBACLC,SACE,SAAC,UAAD,CAAYC,GAAG,OAAOC,cAAe,CAAC,qBAAsBC,UAAU,oBAAtE,yBAIFD,cAAe,CAAC,sBARlB,WAUE,SAAC,KAAD,CAAuBE,WAAU,UAAEd,EAAEe,YAAJ,aAAE,EAAQD,cAC3C,SAACE,EAAD,CAAmBV,SAAUN,YApBd,KA4B3B,IAAMK,EAAa,SAAC,GAA0C,IAAxCC,EAAuC,EAAvCA,SACpB,OACE,iBAAKO,UAAU,yBAAf,WACE,SAAC,QAAD,WACE,SAAC,KAAD,CAAiBI,MAAOX,EAASW,MAAOC,SAAS,WAGnD,gBAAKL,UAAU,YAAf,UACE,SAACvB,EAAD,CAAwBmB,KAAK,iCAM/BO,EAAsD,SAACG,GAC3D,IAAQb,EAAaa,EAAbb,SACR,GAAiBc,EAAAA,EAAAA,MAAVC,GAAP,eAEA,OAA8B,IAA1Bf,EAASW,MAAMK,QAEf,iBAAKT,UAAU,2CAAf,WACE,cAAGA,UAAU,mBAAb,uDACA,gBAAKA,UAAU,OAAf,UACE,SAAC,UAAD,CAAYF,GAAG,OAAOC,cAAe,CAAC,qBAAsBC,UAAU,yBAAtE,qCAQN,iBAAKA,UAAU,GAAf,WACE,SAAC,KAAD,CACEI,MAAOX,EAASW,MAChBM,QACE,iCACE,SAAC,QAAD,uBACA,SAAC,QAAD,KACA,SAAC,QAAD,qBACA,SAAC,QAAD,8BAGJV,UAAU,4BACVW,WAAY,SAACC,GAA0B,IAAD,EACpC,GAAI,OAACA,QAAD,IAACA,IAAAA,EAASC,KAAM,OAAO,KAE3B,IAAMC,GAAWC,EAAAA,EAAAA,GAAaH,GACxBd,EAAE,UAAMgB,EAASD,KAAf,YAAuB,UAAGL,GAAH,WAAkBA,GAAW,IAC5D,OACE,UAAC,QAAD,YACE,SAAC,QAAD,WACE,SAAC,YAAD,yBAAoBI,QAApB,IAAoBA,OAApB,EAAoBA,EAASI,YAA7B,IAAyChB,UAAU,gBAGrD,SAAC,QAAD,WACE,UAAC,UAAD,CAAYF,GAAIA,EAAhB,WACE,iBAAKE,UAAU,gBAAf,UACGY,EAAQK,MACT,SAAC,KAAD,CAAeC,KAAMN,EAAQO,eAAgB,QAE/C,gBAAKnB,UAAU,GAAf,mBAAmBY,EAAQQ,qBAA3B,aAAmB,EAAuBH,aAI9C,SAAC,QAAD,WACE,SAAC,MAAD,kBAAkBL,EAAQS,mBAA1B,IAA6CC,YAAaV,EAAQW,iBAEpE,SAAC,QAAD,UAAWX,EAAQY,QAAU,mBAlBhBZ,EAAQC,UAwB7B,SAAC,MAAD,kBAAgBpB,EAASS,MAAzB,IAA+BuB,UAAWC,EAAAA,GAAAA,KAAY5B,IAAE","sources":["../../../../shopy/shopy-storejs/src/Product/IndexView.tsx"],"sourcesContent":["import * as React from 'react';\nimport { Routes, Route, useSearchParams } from 'react-router-dom';\n\nimport Staff, { StaffImg } from '@miq/staffjs';\nimport { Response } from '@miq/utiljs';\nimport { Table, Pagination, Viewports } from '@miq/componentjs';\n\nimport './indexview.scss';\n\nimport { StaffProduct } from './models';\nimport { PriceDisplay, ProductPriceDisplay, PublishedIcon } from '../components';\nimport { ProductType } from '../types';\nimport { ProductCardList } from './components';\nimport { useCrudEmitter } from '../events';\nimport { ProductListFilterForm } from './forms';\nimport { useProductListRequest } from './utils';\n\nconst ProductCreateView = React.lazy(() => import('./CreateView'));\nconst ProductStaffUpdateView = React.lazy(() => import('./UpdateView'));\n\nexport default function ProductStaffIndexView() {\n  const { res, ...rest } = useProductListRequest();\n  useCrudEmitter({ onUpdate: rest.updateItem, onDestroy: rest.removeItem });\n\n  const r = new Response(res);\n\n  if (!r.isSuccess) return null;\n\n  return (\n    <Routes>\n      <Route path=\":prodSlug/\" element={<UpdateView {...{ response: r }} />} />\n      <Route path=\"new\" element={<ProductCreateView />} />\n      <Route\n        index\n        element={\n          <Staff.View\n            title=\"Products\"\n            back=\"/staff/store/\"\n            actions={\n              <Staff.Link to=\"new/\" requiredPerms={['store.add_product']} className=\"btn btn-primary-3\">\n                Add product\n              </Staff.Link>\n            }\n            requiredPerms={['store.view_product']}\n          >\n            <ProductListFilterForm categories={r.data?.categories} />\n            <ProductStaffTable response={r} />\n          </Staff.View>\n        }\n      />\n    </Routes>\n  );\n}\n\nconst UpdateView = ({ response }: { response: Response }) => {\n  return (\n    <div className=\"d-grid grid-xl-4 gap-1\">\n      <Viewports.XLUp>\n        <ProductCardList items={response.items} itempath=\"../\" />\n      </Viewports.XLUp>\n\n      <div className=\"span-xl-3\">\n        <ProductStaffUpdateView back=\"/staff/store/products/\" />\n      </div>\n    </div>\n  );\n};\n\nconst ProductStaffTable: React.FC<{ response: Response }> = (props) => {\n  const { response } = props;\n  const [params] = useSearchParams();\n\n  if (response.items.length === 0)\n    return (\n      <div className=\"text-center p-staff-list-empty py-3 my-3\">\n        <p className=\"fw-light text-md\">Add products to your shop to get started</p>\n        <div className=\"my-4\">\n          <Staff.Link to=\"new/\" requiredPerms={['store.add_product']} className=\"btn btn-primary btn-md\">\n            Add a new product\n          </Staff.Link>\n        </div>\n      </div>\n    );\n\n  return (\n    <div className=\"\">\n      <Table\n        items={response.items}\n        header={\n          <>\n            <Table.Th>Product</Table.Th>\n            <Table.Th />\n            <Table.Th>Price</Table.Th>\n            <Table.Th>Availability</Table.Th>\n          </>\n        }\n        className=\"product-staff-table w-100\"\n        renderItem={(product: ProductType) => {\n          if (!product?.slug) return null;\n\n          const instance = StaffProduct(product);\n          const to = `${instance.slug}/${`${params}` ? `?${params}` : ''}`;\n          return (\n            <Table.Tr key={product.slug}>\n              <Table.Th>\n                <StaffImg.Thumb {...product?.cover_data} className=\"rounded\" />\n              </Table.Th>\n\n              <Table.Td>\n                <Staff.Link to={to}>\n                  <div className=\"text-ellipsis\">\n                    {product.name}\n                    <PublishedIcon show={product.is_published || false} />\n                  </div>\n                  <div className=\"\">{product.category_data?.name}</div>\n                </Staff.Link>\n              </Table.Td>\n\n              <Table.Td>\n                <PriceDisplay {...product.retail_price_data} lineThrough={product.is_on_sale} />\n              </Table.Td>\n              <Table.Td>{product.is_oos && 'Out of stock'}</Table.Td>\n            </Table.Tr>\n          );\n        }}\n      />\n\n      <Pagination {...response.data} component={Staff.Link} to />\n    </div>\n  );\n};\n"],"names":["ProductCreateView","React","ProductStaffUpdateView","ProductStaffIndexView","useProductListRequest","res","rest","useCrudEmitter","onUpdate","updateItem","onDestroy","removeItem","r","Response","isSuccess","path","element","UpdateView","response","index","title","back","actions","to","requiredPerms","className","categories","data","ProductStaffTable","items","itempath","props","useSearchParams","params","length","header","renderItem","product","slug","instance","StaffProduct","cover_data","name","show","is_published","category_data","retail_price_data","lineThrough","is_on_sale","is_oos","component","Staff"],"sourceRoot":""}
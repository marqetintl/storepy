{"version":3,"sources":["shop/product/components.jsx","shop/product/Attribute.jsx","shop/product/UpdateView.jsx"],"names":["ProductUpdateForm","children","form","props","context","NameInput","onSuccess","onError","product","placeholder","rest","productSlug","slug","Label","value","className","TextInput","required","name","onSave","productServices","patch","then","data","catch","err","error","errors","maxLength","ProductImageUploadButton","multiple","onCreate","imgsArray","filter","img","images","map","onCreateSuccess","onCreateError","ProductImageAltTextInput","image","useForm","alt_text","imgSlug","setValues","useEffect","SupplierData","supplier_name","supplier_item_id","supplier_item_category","supplier_item_cost","supplier_item_cost_currency","href","supplier_item_url","target","rel","AttrNameInput","minLength","AttrValueInput","AttributeUpdateForm","instance","onSubmit","e","preventDefault","patchAttribute","values","handleError","style","alignItems","Icon","Icons","Trash","render","args","onClick","deleteAttribute","setOpen","toast","message","renderHeader","Submit","AttributeCreateForm","initValues","postAttribute","type","ViewTabs","tab","prodSlug","setProduct","useState","addAtr","setAddAtr","Section","title","text","actions","productData","attributes","attr","pData","gap","images_data","label","i","fD","slug_public","patchPage","page","success","delete","onDelete","TextAreaX","description","is_published","productFormDefaultValues","category","retail_price","is_pre_sale","is_pre_sale_text","sale_price","is_on_sale","ProductQuickUpdateForm","categories","pill","SelectInput","nullValue","items","cat","Option","key","id","min","step","CheckboxInput","cover","cover_data","imgData","onUpdate","ProductUpdateView","match","params","setTab","useContext","ToastCtx","detail","response","console","log","status","back","prev_slug","next_slug","getClassName","history","push","ERRMSG","ProductPublishButton","unpublish","publish"],"mappings":"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","file":"static/js/12.5a064edb.chunk.js","sourcesContent":["import React, { useEffect } from 'react'\nimport PropTypes from 'prop-types'\n\nimport Form, { useForm, FormProvider } from '@miq/form'\nimport { ImageAltTextInput } from '@miq/adminjs'\nimport { ImgUploadButton } from '@miq/components'\nimport { productServices } from './utils'\n\n//\n// ========================= FORM COMPONENTS ===================================================================\n//\n\nexport const ProductCategoryInput = ({ onSuccess, onError, ...props }) => {\n  const { placeholder = 'Give a name to the item', form } = props\n  if (!form) return null\n\n  return (\n    <>\n      <Form.Label value=\"Name\" className=\"mb-1\" />\n      <Form.TextInput {...props} name=\"name\" error={form.errors.name} placeholder={placeholder} maxLength={99} />\n    </>\n  )\n}\n\nexport const ProductNameInput = ({ onSuccess, onError, ...props }) => {\n  const { product, placeholder = 'Give a name to the item', form, ...rest } = props\n\n  const productSlug = product?.slug\n\n  // useEffect(() => {\n  //   return () => {};\n  // }, [productSlug]);\n\n  if (!form) return null\n\n  return (\n    <>\n      <Form.Label value=\"Name\" className=\"mb-1\" />\n      <Form.TextInput\n        {...rest}\n        required\n        name=\"name\"\n        onSave={({ value }) => {\n          if (!value || !product || !productSlug) return\n\n          return productServices\n            .patch(productSlug, { name: value }, { name: product.name })\n            .then((data) => {\n              if (onSuccess) return onSuccess(data)\n            })\n            .catch((err) => {\n              if (onError) return onError(err)\n            })\n        }}\n        error={form.errors.name}\n        placeholder={placeholder}\n        maxLength={99}\n      />\n    </>\n  )\n}\n\nexport const ProductUpdateForm = ({ children, form, ...props }) => {\n  if (!form) return null\n  return (\n    <Form {...props} context={form}>\n      {children}\n    </Form>\n  )\n}\n\nProductUpdateForm.NameInput = ProductNameInput\n\nexport const ProductImageUploadButton = ({ product, ...props }) => {\n  if (!product || !product.slug) return null\n\n  return (\n    <ImgUploadButton\n      multiple={true}\n      className=\"btn-primary-3\"\n      onCreate={(imgsArray) => {\n        imgsArray = imgsArray.filter((img) => img && img.slug)\n        return productServices\n          .patch(product.slug, { images: [...product.images, ...imgsArray.map((img) => img.slug)] })\n          .then((data) => {\n            if (props.onCreateSuccess) props.onCreateSuccess(data)\n          })\n          .catch((err) => {\n            if (props.onCreateError) props.onCreateError(err)\n          })\n      }}\n    />\n  )\n}\n\nexport const ProductImageAltTextInput = ({ image, ...props }) => {\n  const form = useForm({ alt_text: image?.alt_text || '' })\n\n  const imgSlug = image?.slug\n  const alt_text = image?.alt_text\n  const setValues = form.setValues\n\n  useEffect(() => {\n    setValues({ alt_text })\n  }, [imgSlug, setValues, alt_text])\n\n  if (!image || !image.slug) return null\n\n  return (\n    <FormProvider value={form} className={props.className}>\n      <ImageAltTextInput\n        required\n        image={image}\n        onSuccess={props.onSuccess}\n        onError={props.onError}\n        placeholder=\"Add an alternative text ...\"\n      />\n    </FormProvider>\n  )\n}\n\nProductImageAltTextInput.propTypes = {\n  image: PropTypes.shape({\n    slug: PropTypes.string.isRequired,\n  }),\n\n  onUpdate: PropTypes.func,\n  onError: PropTypes.func,\n}\n\nexport const ProductCoverUploadButton = ({ children, product, ...props }) => {\n  if (!product || !product.slug) return null\n\n  const handleCoverCreate = ({ slug }) => {\n    productServices\n      .patch(product.slug, { cover: slug })\n      .then((data) => {\n        if (props.onCreateSuccess) props.onCreateSuccess(data)\n      })\n      .catch((err) => {\n        if (props.onCreateError) props.onCreateError(err)\n      })\n  }\n  const handleCoverUpdate = (imgData) => {\n    if (props.onUpdateSuccess) props.onUpdateSuccess(imgData)\n  }\n\n  return (\n    <ImgUploadButton\n      slug={product.cover_data ? product.cover_data.slug : null}\n      onCreate={handleCoverCreate}\n      onUpdate={handleCoverUpdate}\n      className=\"product-cover-upload-button\"\n    >\n      {children}\n    </ImgUploadButton>\n  )\n}\n\nProductCoverUploadButton.propTypes = {\n  children: PropTypes.any.isRequired,\n  product: PropTypes.shape({ slug: PropTypes.string.isRequired }).isRequired,\n  onCreateSuccess: PropTypes.func,\n  onCreateError: PropTypes.func,\n  onUpdateSuccess: PropTypes.func,\n  onUpdateError: PropTypes.func,\n}\n\nexport const SupplierData = ({ product, ...props }) => {\n  if (!product) return null\n\n  return (\n    <div className=\"product-supplier-data\">\n      <ul>\n        <li>\n          <span className=\"\">Supplier</span>\n          <span className=\"\">{product.supplier_name}</span>\n        </li>\n        <li>\n          <span className=\"\">Item id</span>\n          <span className=\"\">{product.supplier_item_id}</span>\n        </li>\n        <li>\n          <span className=\"\">Category</span>\n          <span className=\"\">{product.supplier_item_category}</span>\n        </li>\n\n        <li>\n          <span className=\"\">Item cost</span>\n          <span className=\"\">\n            {product.supplier_item_cost} ({product.supplier_item_cost_currency})\n          </span>\n        </li>\n        <li>\n          <a href={product.supplier_item_url} className=\"text-underline\" target=\"_blank\" rel=\"noopener noreferrer\">\n            View supplier page\n          </a>\n        </li>\n      </ul>\n    </div>\n  )\n}\n","import { IBtnSave, ConfirmIconButton, Icons, Button } from '@miq/components'\n\nimport Form, { useForm } from '@miq/form'\nimport { productServices } from './utils'\n\nconst AttrNameInput = (props) => (\n  <Form.TextInput placeholder=\"Nom de l'attribut\" {...props} required name=\"name\" maxLength={30} minLength={3} />\n)\n\nconst AttrValueInput = (props) => (\n  <Form.TextInput placeholder=\"Valeur de l'attribut\" {...props} required name=\"value\" maxLength={99} minLength={3} />\n)\n\nexport const AttributeUpdateForm = ({ instance, product, ...props }) => {\n  const form = useForm({ name: instance?.name || '', value: instance?.value || '' })\n\n  if (!instance || !instance.slug || !product || !product.slug) return null\n\n  const handleSubmit = (e) => {\n    e.preventDefault()\n\n    return productServices\n      .patchAttribute(product.slug, instance.slug, form.values)\n      .then((data) => {\n        return props?.onSuccess(data)\n      })\n      .catch((err) => {\n        return form.handleError(err)\n      })\n  }\n\n  return (\n    <Form context={form} onSubmit={handleSubmit}>\n      <div className=\"d-flex flex-column flex-md-row\" style={{ alignItems: 'end' }}>\n        <div className=\"me-md-1\">\n          <AttrNameInput error={form.errors.name} />\n        </div>\n\n        <div className=\"w-100 me-md-1\">\n          <AttrValueInput error={form.errors.value} />\n        </div>\n\n        <div className=\"d-flex ms-md-1\">\n          <ConfirmIconButton\n            Icon={Icons.Trash}\n            render={(args) => (\n              <div className=\"p-3 w-100 d-flex justify-content-center\">\n                <div className=\"w-md-50 d-flex align-items-center justify-content-between\">\n                  <div>\n                    <Button\n                      onClick={() =>\n                        productServices\n                          .deleteAttribute(product.slug, instance.slug)\n                          .then((data) => {\n                            args?.setOpen(false)\n                            return props?.onSuccess(data)\n                          })\n                          .catch(() => {\n                            props?.toast?.error({ message: 'Could not delete attribute.' })\n                          })\n                      }\n                      className=\"btn-danger\"\n                    >\n                      Supprimer\n                    </Button>\n                  </div>\n                  <div>\n                    <Button onClick={() => args?.setOpen(false)}>Annuler</Button>\n                  </div>\n                </div>\n              </div>\n            )}\n            renderHeader={(args) => {\n              return (\n                <div className=\"p-3\">\n                  <div className=\"fw-bold\">Supprimer l'attribut \"{instance.name}\"</div>\n                </div>\n              )\n            }}\n            className=\"btn-danger-3 me-1\"\n          />\n          <Form.Submit value=\"Save\" className=\"btn btn-primary-2\" />\n        </div>\n      </div>\n    </Form>\n  )\n}\n\nexport function AttributeCreateForm({ product, ...props }) {\n  const initValues = { name: '', value: '' }\n  const form = useForm(initValues)\n\n  if (!product || !product.slug) return null\n\n  const handleSubmit = (e) => {\n    e.preventDefault()\n    // if (form.hasErrors()) return;\n\n    return productServices\n      .postAttribute(product.slug, form.values)\n      .then((data) => {\n        form.setValues(initValues)\n        return props?.onSuccess(data)\n      })\n      .catch((err) => {\n        return form.handleError(err)\n      })\n  }\n\n  // const invalidAttrNames = product?.attributes?.map((at) => at.name) || [];\n\n  return (\n    <Form context={form} onSubmit={handleSubmit}>\n      <div className=\"d-flex flex-column flex-md-row\" style={{ alignItems: 'end' }}>\n        <div className=\"me-md-1\">\n          <Form.Label value=\"Name\" />\n          <AttrNameInput error={form.errors.name} />\n        </div>\n\n        <div className=\"w-100 me-md-1\">\n          <Form.Label value=\"Value\" />\n          <AttrValueInput error={form.errors.value} />\n        </div>\n\n        <div className=\"ms-md-1\">\n          <IBtnSave type=\"submit\" className=\"btn-primary-3\" />\n        </div>\n      </div>\n    </Form>\n  )\n}\n","import { useContext, useEffect, useState } from 'react'\n\nimport { AdminView, StaffCoverUpdateForm, PublishedStatusSpan } from '@miq/adminjs'\nimport Form, { useForm } from '@miq/form'\nimport { getClassName } from '@miq/utils'\nimport { ToastCtx, Button, Img, ImgDeleteIconButton } from '@miq/components'\n\nimport { productServices } from './utils'\nimport { ProductImageAltTextInput, ProductUpdateForm, ProductImageUploadButton, SupplierData } from './components'\nimport { AttributeCreateForm, AttributeUpdateForm } from './Attribute'\n\nconst ViewTabs = ({ tab, ...props }) => {\n  const { prodSlug, product, setProduct, form, toast } = props\n  const [addAtr, setAddAtr] = useState(false)\n\n  if (!product.slug) return null\n\n  switch (tab) {\n    case 'inventory':\n      return (\n        <div className=\"d-flex flex-column flex-md-row\">\n          <div className=\"flex-1\">\n            <AdminView.Section title=\"Sizes\" text=\"Add sizes\"></AdminView.Section>\n            <AdminView.Section\n              title=\"Attributes\"\n              actions={\n                <Button onClick={() => setAddAtr(!addAtr)} className=\"btn-primary-3\">\n                  Ajouter attribut\n                </Button>\n              }\n            >\n              {addAtr && (\n                <div className=\"border-bottom mb-2 pb-3\">\n                  <p className=\"text-center mb-3\">Ajouter un attribut au produit.</p>\n                  <AttributeCreateForm\n                    product={product}\n                    onSuccess={(productData) => setProduct({ ...product, ...productData })}\n                  />\n                </div>\n              )}\n\n              <div className=\"my-3\">\n                {product.attributes.map((attr) => (\n                  <div className=\"mb-1\" key={attr.slug}>\n                    <AttributeUpdateForm\n                      instance={attr}\n                      product={product}\n                      onSuccess={(pData) => setProduct({ ...product, ...pData })}\n                    />\n                  </div>\n                ))}\n              </div>\n            </AdminView.Section>\n          </div>\n\n          <div className=\"w-md-35 ms-md-2\">\n            <SupplierData product={product} />\n          </div>\n        </div>\n      )\n\n    case 'imgs':\n      return (\n        <AdminView.Section\n          title=\"Images\"\n          text=\"Add images to your product\"\n          actions={\n            <ProductImageUploadButton\n              product={product}\n              onCreateSuccess={(data) => {\n                setProduct({ ...product, ...data })\n              }}\n            />\n          }\n        >\n          <div className=\"d-grid grid-md-3 grid-lg-4\" style={{ gap: 4 }}>\n            {product.images_data.map((img) => (\n              <div className=\"mb-1\" key={img.slug}>\n                <Img {...img} className=\"product-img\" />\n\n                <div className=\"d-flex\">\n                  <ProductImageAltTextInput image={img} />\n                  <ImgDeleteIconButton\n                    slug={img.slug}\n                    label=\"\"\n                    className=\"btn-danger-3 ms-1\"\n                    onSuccess={() => {\n                      setProduct({\n                        ...product,\n                        images_data: product.images_data.filter((i) => i.slug !== img.slug),\n                        images: product.images.filter((i) => i !== img.slug),\n                      })\n                    }}\n                  />\n                </div>\n              </div>\n            ))}\n          </div>\n        </AdminView.Section>\n      )\n\n    case 'setting':\n      return (\n        <Form\n          context={form}\n          onSubmit={(e) => {\n            e.preventDefault()\n            const fD = { title: form.values.title, slug_public: form.values.slug_public }\n\n            return productServices\n              .patchPage(prodSlug, fD, { title: product?.page?.title, slug_public: product?.page?.slug_public })\n              .then((data) => {\n                setProduct({ ...product, ...data })\n                toast.success({ message: 'Product page updated.' })\n              })\n              .catch((err) => {\n                form.handleError(err)\n                toast.error({ message: 'Could not update.' })\n              })\n          }}\n        >\n          <AdminView.Section title=\"Seo\">\n            <div className=\"mb-1\">\n              <Form.Label value=\"Meta title\" className=\"mb-1\" />\n              <Form.TextInput\n                required\n                name=\"title\"\n                error={form.errors.title}\n                placeholder=\"Give a name to the item\"\n                maxLength={99}\n              />\n            </div>\n            <div className=\"mb-1\">\n              <Form.Label value=\"Slug\" className=\"mb-1\" />\n              <Form.TextInput\n                required\n                name=\"slug_public\"\n                error={form.errors.slug_public}\n                placeholder={'Write slug ...'}\n                maxLength={99}\n              />\n            </div>\n\n            <div className=\"my-2\">\n              <Form.Submit value=\"Update\" className=\"btn btn-primary-3\" />\n            </div>\n          </AdminView.Section>\n\n          <AdminView.Section>\n            <Button\n              className=\"btn-danger\"\n              onClick={() => {\n                return productServices\n                  .delete(prodSlug || product.slug)\n                  .then((data) => {\n                    return props?.onDelete()\n                  })\n                  .catch((err) => {\n                    toast?.error({ message: 'Something went wrong' })\n                  })\n              }}\n            >\n              Delete product\n            </Button>\n          </AdminView.Section>\n        </Form>\n      )\n\n    default:\n      return (\n        <div className=\"d-grid grid-md-3 gap-3\">\n          <AdminView.Section title=\"Description\" className=\"span-md-2\">\n            <ProductUpdateForm form={form}>\n              <Form.TextAreaX\n                name=\"description\"\n                onSave={({ name, value }) =>\n                  productServices\n                    .patch(product.slug, { [name]: value }, { [name]: product[name] })\n                    .then((data) => {\n                      setProduct({ ...product, ...data })\n                      toast.success({ message: 'Product updated.' })\n                    })\n                    .catch((err) => {\n                      form.handleError(err)\n                      toast.error({ message: 'Could not update item.' })\n                    })\n                }\n                error={form.errors.description}\n                placeholder=\"Give a description to the item\"\n              />\n            </ProductUpdateForm>\n          </AdminView.Section>\n\n          <AdminView.Section\n            title=\"Status\"\n            text={\n              product.page.is_published\n                ? 'This item is published.'\n                : 'This item is not published. It does not show in your store.'\n            }\n            className=\"\"\n          >\n            <ProductPublishButton product={product} setProduct={setProduct} toast={toast} />\n          </AdminView.Section>\n        </div>\n      )\n  }\n}\n\nexport const productFormDefaultValues = {\n  name: '',\n  description: '',\n  title: '',\n  category: '',\n  slug_public: '',\n  retail_price: 0.0,\n  is_pre_sale: false,\n  is_pre_sale_text: '',\n  sale_price: 0.0,\n  is_on_sale: false,\n}\n\nexport const ProductQuickUpdateForm = ({ form, product, ...props }) => {\n  const { setProduct, toast, categories } = props\n  const productSlug = product?.slug\n\n  useEffect(() => {}, [productSlug])\n\n  const handleSubmit = (e) => {\n    e.preventDefault()\n    const fD = {\n      retail_price: form.values.retail_price,\n      is_on_sale: form.values.is_on_sale,\n    }\n\n    if (form.values.category) fD.category = form.values.category\n    if (form.values.is_on_sale) fD.sale_price = form.values.sale_price\n\n    if (form.values.is_pre_sale) {\n      fD.is_pre_sale = form.values.is_pre_sale\n      fD.is_pre_sale_text = form.values.is_pre_sale_text\n    }\n\n    return productServices\n      .patch(product.slug, fD)\n      .then((data) => {\n        setProduct?.({ ...product, ...data })\n        toast?.success({ message: 'Product updated.' })\n      })\n      .catch((err) => {\n        toast?.error({ message: 'Could not update product.' })\n        return form.handleError(err)\n      })\n  }\n\n  return (\n    <Form context={form} onSubmit={handleSubmit}>\n      <div className=\"d-grid grid-md-3 gap-3\">\n        <div className=\"span-md-2\">\n          <AdminView.Section\n            title=\"Details\"\n            actions={<PublishedStatusSpan is_published={product?.page?.is_published} pill />}\n          >\n            <div className=\"mb-1\">\n              <ProductUpdateForm.NameInput\n                product={product}\n                form={form}\n                onSuccess={(data) => {\n                  setProduct?.({ ...product, ...data })\n                  toast?.success({ message: 'Item updated.' })\n                }}\n                onError={(err) => {\n                  form.handleError(err)\n                  toast?.error({ message: 'Could not update item.' })\n                }}\n              />\n            </div>\n\n            {categories && (\n              <div className=\"mb-1\">\n                <Form.Label value=\"Category\" />\n                <Form.SelectInput required name=\"category\" nullValue={{ label: 'Select category' }}>\n                  {categories?.items?.map((cat) => {\n                    return <Form.SelectInput.Option {...cat} key={cat.value} />\n                  })}\n                </Form.SelectInput>\n              </div>\n            )}\n\n            <div className=\"mb-1\">\n              <div className=\"mb-1\">\n                <Form.Label value=\"Retail price\" id=\"retail_price_label\" />\n                <Form.TextInput\n                  required\n                  type=\"number\"\n                  name=\"retail_price\"\n                  error={form.errors.retail_price}\n                  aria-describedby=\"retail_price_label\"\n                  min=\"0\"\n                  step=\"0.01\"\n                />\n              </div>\n\n              {/* PRE SALE */}\n              <div className=\"mb-1\">\n                <div className=\"d-flex align-items-center mb-1\">\n                  <Form.CheckboxInput name=\"is_pre_sale\" error={form.errors.is_pre_sale} className=\"me-2\" />\n                  <Form.Label value=\"Pre-sale\" />\n                </div>\n\n                {form.values.is_pre_sale && (\n                  <div className=\"mb-2\">\n                    <Form.Label value=\"Pre sale text\" id=\"is_pre_sale_text_label\" className=\"miq-checkbox-label\" />\n                    <Form.TextAreaX\n                      name=\"is_pre_sale_text\"\n                      error={form.errors.is_pre_sale_text}\n                      aria-describedby=\"is_pre_sale_text_label\"\n                    />\n                  </div>\n                )}\n              </div>\n\n              {/* SALE  */}\n              <div className=\"d-flex align-items-center mb-1\">\n                <Form.CheckboxInput name=\"is_on_sale\" error={form.errors.is_on_sale} className=\"me-2\" />\n                <Form.Label value=\"On Sale\" />\n              </div>\n\n              {form.values.is_on_sale && (\n                <div className=\"mb-2\">\n                  <Form.Label value=\"Sale price\" id=\"sale_price_label\" className=\"miq-checkbox-label\" />\n                  <Form.TextInput\n                    required\n                    type=\"number\"\n                    name=\"sale_price\"\n                    error={form.errors.sale_price}\n                    aria-describedby=\"sale_price_label\"\n                    min=\"0\"\n                    step=\"0.01\"\n                  />\n                </div>\n              )}\n            </div>\n\n            <div className=\"my-3\">\n              <Form.Submit value=\"Update product\" className=\"btn btn-primary-3\" />\n            </div>\n          </AdminView.Section>\n        </div>\n\n        <div className=\"\">\n          <StaffCoverUpdateForm\n            slug={product?.cover}\n            data={product.cover_data}\n            onCreate={(imgData) => {\n              productServices\n                .patch(product.slug, { cover: imgData.slug })\n                .then((data) => {\n                  setProduct?.({ ...product, ...data })\n                  toast?.success({ message: 'Product cover updated.' })\n                })\n                .catch((err) => {\n                  toast?.error({ message: 'Could not upload cover image.' })\n                })\n            }}\n            onUpdate={(cover_data) => {\n              toast?.success({ message: 'Product cover updated.' })\n              return setProduct?.({ ...product, cover_data })\n            }}\n            onDelete={() => {\n              return setProduct?.({ ...product, cover_data: null, cover: null })\n            }}\n            className=\"mb-1\"\n          />\n          <ProductImageAltTextInput image={product?.cover_data} />\n        </div>\n      </div>\n    </Form>\n  )\n}\n\nexport default function ProductUpdateView(props) {\n  const { prodSlug } = props.match.params\n\n  const [product, setProduct] = useState(null)\n  const [tab, setTab] = useState('info')\n  const toast = useContext(ToastCtx)\n\n  const form = useForm(productFormDefaultValues)\n  const { setValues } = form\n\n  useEffect(() => {\n    productServices\n      .detail(prodSlug)\n      .then((data) => {\n        setProduct(data)\n        setValues({\n          name: data.name || '',\n          description: data.description || '',\n          category: data.category || '',\n          retail_price: data?.retail_price || 0.0,\n          // PRESALE\n          is_pre_sale: data.is_pre_sale || false,\n          is_pre_sale_text: data.is_pre_sale_text || '',\n          // SALE\n          is_on_sale: data.is_on_sale || false,\n          sale_price: data?.sale_price || 0.0,\n          // SEO\n          title: data.page.title || '',\n          slug_public: data?.page?.slug_public || '',\n        })\n      })\n      .catch((err) => {\n        if (err.response) {\n          // toast.error({ message: \"Something went wrong\" });\n          console.log(err.response)\n          if (err.response.status === 404) {\n            return\n          }\n        }\n      })\n  }, [prodSlug, setValues])\n\n  if (!product) return null\n\n  // console.log(product);\n\n  return (\n    <AdminView\n      back={props?.back}\n      actions={\n        <div>\n          {product?.prev_slug && (\n            <a href={`${props?.back}${product?.prev_slug}/`} className=\"btn me-1\" title=\"Voir le produit précédent\">\n              Previous\n            </a>\n          )}\n          {product?.next_slug && (\n            <a href={`${props?.back}${product?.next_slug}/`} className=\"btn\" title=\"Voir le produit suivant\">\n              Next\n            </a>\n          )}\n        </div>\n      }\n      className=\"product-update-view\"\n    >\n      <ProductQuickUpdateForm\n        form={form}\n        product={product}\n        categories={product?.categories}\n        setProduct={setProduct}\n        toast={toast}\n      />\n\n      <div className=\"my-2\">\n        <div className=\"d-flex justify-content-center mb-3\">\n          <div className=\"d-flex align-items-center\">\n            <Button\n              onClick={() => setTab('info')}\n              className={getClassName(['me-1', tab === 'info' && 'btn-primary-3'])}\n            >\n              Info\n            </Button>\n            <Button\n              onClick={() => setTab('inventory')}\n              className={getClassName(['me-1', tab === 'inventory' && 'btn-primary-3'])}\n            >\n              Inventory\n            </Button>\n            <Button\n              onClick={() => setTab('imgs')}\n              className={getClassName(['me-1', tab === 'imgs' && 'btn-primary-3'])}\n            >\n              Images\n            </Button>\n            <Button onClick={() => setTab('setting')} className={getClassName([tab === 'setting' && 'btn-primary-3'])}>\n              Settings\n            </Button>\n          </div>\n        </div>\n        <ViewTabs\n          tab={tab}\n          prodSlug={prodSlug}\n          product={product}\n          setProduct={setProduct}\n          form={form}\n          toast={toast}\n          onDelete={() => props?.history?.push(props.back)}\n        />\n      </div>\n    </AdminView>\n  )\n}\n\nconst ERRMSG = {\n  retail_price: 'You can not publish a product without price',\n  category: 'You can not publish a product without category',\n  page: 'You can not publish a product without page',\n  default: 'Something went awfully wrong!',\n}\n\nexport const ProductPublishButton = ({ product, setProduct, toast }) => {\n  if (!product?.page) return null\n\n  const { is_published } = product.page\n\n  const handlePublish = () => {\n    if (is_published)\n      return productServices\n        .unpublish(product.slug)\n        .then((data) => {\n          setProduct({ ...product, ...data })\n          return toast?.success({ message: 'Item unpublished' })\n        })\n        .catch((err) => {\n          return toast?.error({ message: ERRMSG.default })\n        })\n\n    return productServices\n      .publish(product.slug)\n      .then((data) => {\n        setProduct?.({ ...product, ...data })\n        return toast?.success({ message: 'Item published' })\n      })\n      .catch(({ response = {} }) => {\n        if (!response.data) {\n          return toast?.error({ message: ERRMSG.default })\n        }\n        const { retail_price, category, page } = response.data\n\n        if (retail_price) {\n          return toast?.error({ message: ERRMSG.retail_price })\n        }\n        if (category) {\n          return toast?.error({ message: ERRMSG.category })\n        }\n        if (page) {\n          return toast?.error({ message: ERRMSG.page })\n        }\n        // console.log(response.data);\n      })\n  }\n  return (\n    <Button onClick={handlePublish} className={is_published ? 'btn-danger' : 'btn-primary'}>\n      {is_published ? 'Unpublish' : 'Publish'} product\n    </Button>\n  )\n}\n"],"sourceRoot":""}
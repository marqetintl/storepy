{"version":3,"sources":["exports.jsx","shop/orders/components.jsx","shop/product/components.jsx","shop/product/forms.jsx","shop/product/Attribute.jsx","shop/product/UpdateView.jsx"],"names":["SupplierData","product","className","supplier_name","supplier_item_id","supplier_item_category","supplier_item_cost","supplier_item_cost_currency","href","supplier_item_url","target","rel","ProductImageAltTextInput","image","props","alt_text","form","useForm","imgSlug","slug","setValues","useEffect","value","required","onSuccess","onError","placeholder","StaffProductDeleteButton","prodSlug","label","id","onClick","productServices","delete","then","catch","err","StaffProductPublishButton","toast","page","is_published","onPublishSuccess","onUnpublishSuccess","unpublish","data","error","message","SHOP_MSGS","default","publish","response","retail_price","category","publish_error_retail_price","handleError","publish_error_category","publish_error_page","getClassName","ProductImageUploadButton","multiple","onCreate","imgsArray","filter","img","patch","images","map","onCreateSuccess","onCreateError","isRequired","ProductNameInput","showLabel","input","rest","Label","TextInput","name","maxLength","ProductCategoryInput","categories","SelectInput","nullValue","items","cat","Option","key","ProductRetailPriceInput","type","min","step","ProductPresaleCheckboxInput","CheckboxInput","ProductPresaleTextInput","TextAreaX","ProductOnSaleCheckboxInput","ProductSalePriceInput","ProductForm","children","context","fields","onWillSubmit","onSubmit","e","preventDefault","fD","forEach","field","values","NameInput","DescField","text","Field","CategoryInput","RetailPriceInput","PresaleCheckboxInput","PresaleTextInput","OnSaleCheckboxInput","SalePriceInput","StageSelect","stages","stage","AttributeUpdateForm","instance","patchAttribute","style","alignItems","AttrNameInput","errors","AttrValueInput","Icon","Icons","Trash","render","args","deleteAttribute","setOpen","renderHeader","Submit","AttributeCreateForm","initValues","postAttribute","minLength","productFormDefaultValues","description","is_pre_sale","is_pre_sale_text","sale_price","is_on_sale","title","slug_public","ProductUpdateStaffView","match","params","useState","setProduct","tab","setTab","detail","console","log","status","back"],"mappings":"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","file":"static/js/0.ff9d46fe.chunk.js","sourcesContent":["export { ImageAltTextInput, PublishedStatusSpan } from '@miq/adminjs';\n\nexport { Button, ImgUploadButton, ImgSquare, Loading, Card } from '@miq/components';\n\nexport { getClassName } from '@miq/utils';\n\nexport { default as Form } from '@miq/form';\nexport { useForm, FormProvider } from '@miq/form';\n","export const SupplierData = ({ product, ...props }) => {\n  if (!product) return null;\n\n  return (\n    <div className=\"product-supplier-data\">\n      <ul>\n        <li>\n          <span className=\"\">Supplier</span>\n          <span className=\"\">{product.supplier_name}</span>\n        </li>\n        <li>\n          <span className=\"\">Item id</span>\n          <span className=\"\">{product.supplier_item_id}</span>\n        </li>\n        <li>\n          <span className=\"\">Category</span>\n          <span className=\"\">{product.supplier_item_category}</span>\n        </li>\n\n        <li>\n          <span className=\"\">Item cost</span>\n          <span className=\"\">\n            {product.supplier_item_cost} ({product.supplier_item_cost_currency})\n          </span>\n        </li>\n        <li>\n          <a href={product.supplier_item_url} className=\"text-underline\" target=\"_blank\" rel=\"noopener noreferrer\">\n            View supplier page\n          </a>\n        </li>\n      </ul>\n    </div>\n  );\n};\n","import React, { useEffect } from 'react';\nimport PropTypes from 'prop-types';\n\nimport { productServices } from './utils';\nimport { useForm, FormProvider, ImgUploadButton, ImageAltTextInput, Button, getClassName } from 'src/exports';\n\n//#region ProductImageAltTextInput\n\nexport const ProductImageAltTextInput = ({ image, ...props }) => {\n  const alt_text = image?.alt_text || '';\n\n  const form = useForm({ alt_text });\n\n  const imgSlug = image?.slug;\n  const setValues = form.setValues;\n\n  useEffect(() => {\n    setValues({ alt_text });\n  }, [imgSlug, setValues, alt_text]);\n\n  if (!image || !image.slug) return null;\n\n  return (\n    <FormProvider value={form} className={props.className}>\n      <ImageAltTextInput\n        required\n        image={image}\n        onSuccess={props.onSuccess}\n        onError={props.onError}\n        placeholder=\"Add an alternative text ...\"\n      />\n    </FormProvider>\n  );\n};\n\nProductImageAltTextInput.propTypes = {\n  image: PropTypes.shape({\n    slug: PropTypes.string.isRequired,\n  }),\n\n  onUpdate: PropTypes.func,\n  onError: PropTypes.func,\n};\n\n//#endregion ProductImageAltTextInput\n\n//#region BUTTONS > >\n\n//#region StaffProductDeleteButton\n\n/**\n * Delete a product\n * Usage:\n * ```js\n * <StaffProductDeleteButton label=\"Delete me!\" prodSlug='123' onSuccess={()=>{}} onError={()=>{}} className=\"btn-danger-3\" />\n * ```\n *\n * @param {Object} props\n * @param {string} props.label\n * @param {string} props.prodSlug\n * @param {Function} props.onSuccess\n * @param {Function} props.onError\n * @param {string=} props.className\n * @param {string=} props.id\n * @augments {Component<Props, State>}\n */\nexport const StaffProductDeleteButton = ({ prodSlug, ...props }) => {\n  if (!prodSlug) return null;\n  const { className = 'btn-danger', label, onSuccess, onError } = props;\n  return (\n    <Button\n      id={props.id}\n      className={className}\n      onClick={() => {\n        return productServices\n          .delete(prodSlug)\n          .then(() => onSuccess?.({ prodSlug }))\n          .catch((err) => onError?.(err));\n      }}\n    >\n      {label || 'Supprimer cet article'}\n    </Button>\n  );\n};\n//#endregion StaffProductDeleteButton\n\n//#region StaffProductPublishButton\n\n/**\n * Button component for publishing a product\n * ```js\n * <StaffProductPublishButton\n *  product={product}\n *  prodSlug='slug'\n *  product={{slug: 'slug', page:{slug:'pageSlug'}}}\n *  onPublishSuccess={(data) => setProduct(data)}\n *  onUnpublishSuccess={(data) => setProduct(data)}\n *  onUnpublishSuccess={(err) => setError(err)}\n * />\n * ```\n * @param {Object} props\n * @param {string} props.prodSlug - slug of the product: required\n * @param {Object} props.product - product object\n * @param {Object} props.form - product form\n * @param {Function} props.onPublishSuccess publish success callback\n * @param {Function} props.onUnpublishSuccess unpublish success callback\n * @param {Function} props.onError\n * @param {Object} props.toast\n * @param {string} props.className\n * @param {string} props.id\n * @augments {Component<Props, State>}\n *\n */\n\nexport function StaffProductPublishButton(props) {\n  const { prodSlug, product, toast, ...rest } = props;\n  if (!prodSlug || !product?.page) return null;\n\n  const { is_published } = product.page;\n  const { form, onPublishSuccess, onUnpublishSuccess, onError } = props;\n\n  const handlePublish = () => {\n    if (is_published)\n      return productServices\n        .unpublish(prodSlug)\n        .then((data) => onUnpublishSuccess?.(data))\n        .catch((err) => {\n          return toast?.error({ message: SHOP_MSGS.default });\n        });\n\n    return productServices\n      .publish(prodSlug)\n      .then((data) => onPublishSuccess?.(data))\n      .catch((err) => {\n        const { response = {} } = err;\n\n        if (!response.data) {\n          toast?.error({ message: SHOP_MSGS.default });\n        }\n        const { retail_price, category, page } = response.data;\n\n        if (retail_price) {\n          toast?.error({ message: SHOP_MSGS.product.publish_error_retail_price });\n        }\n        if (category) {\n          if (form) form.handleError(err);\n          toast?.error({ message: SHOP_MSGS.product.publish_error_category });\n        }\n        if (page) {\n          toast?.error({ message: SHOP_MSGS.product.publish_error_page });\n        }\n        return onError?.(err);\n      });\n  };\n\n  return (\n    <Button\n      id={props.id}\n      onClick={handlePublish}\n      className={getClassName([\n        'staff-product-publish-button',\n        is_published ? 'btn-danger' : 'btn-primary',\n        props.className,\n      ])}\n    >\n      {is_published ? 'Unpublish' : 'Publish'} product\n    </Button>\n  );\n}\n\nStaffProductPublishButton.propTypes = {\n  /** product slug */\n  prodSlug: PropTypes.string.isRequired,\n  /** product data */\n  product: PropTypes.shape({ page: PropTypes.shape({ is_published: PropTypes.bool }).isRequired }).isRequired,\n  /** if props.form: calls form.handleError whenever applicable BEFORE calling props.onError */\n  form: PropTypes.object,\n  onPublishSuccess: PropTypes.func,\n  onUnpublishSuccess: PropTypes.func,\n  onError: PropTypes.func,\n};\n\n//#endregion\n\n//#region ProductImageUploadButton\n\n/**\n * Upload a product image\n * Usage:\n * ```js\n * <ProductImageUploadButton product={{prodData}} />\n * ```\n *\n * @param {Object} props\n * @param {Object} props.product\n * @param {bool} props.multiple\n * @param {Function} props.onCreate\n * @param {Function} props.onCreateSuccess\n * @param {Function} props.onCreateError\n * @augments {ImgUploadButton<Props, State>}\n */\n\nexport const ProductImageUploadButton = ({ product, ...props }) => {\n  if (!product || !product.slug) return null;\n\n  return (\n    <ImgUploadButton\n      multiple={true}\n      className=\"btn-primary-3\"\n      onCreate={(imgsArray) => {\n        imgsArray = imgsArray.filter((img) => img && img.slug);\n        return productServices\n          .patch(product.slug, { images: [...product.images, ...imgsArray.map((img) => img.slug)] })\n          .then((data) => {\n            if (props.onCreateSuccess) props.onCreateSuccess(data);\n          })\n          .catch((err) => {\n            if (props.onCreateError) props.onCreateError(err);\n          });\n      }}\n    />\n  );\n};\n//#endregion ProductImageButton\n\n//#region ProductCoverUploadButton\nexport const ProductCoverUploadButton = ({ children, product, ...props }) => {\n  if (!product || !product.slug) return null;\n\n  const handleCoverCreate = ({ slug }) => {\n    productServices\n      .patch(product.slug, { cover: slug })\n      .then((data) => {\n        if (props.onCreateSuccess) props.onCreateSuccess(data);\n      })\n      .catch((err) => {\n        if (props.onCreateError) props.onCreateError(err);\n      });\n  };\n  const handleCoverUpdate = (imgData) => {\n    if (props.onUpdateSuccess) props.onUpdateSuccess(imgData);\n  };\n\n  return (\n    <ImgUploadButton\n      slug={product.cover_data ? product.cover_data.slug : null}\n      onCreate={handleCoverCreate}\n      onUpdate={handleCoverUpdate}\n      className=\"product-cover-upload-button\"\n    >\n      {children}\n    </ImgUploadButton>\n  );\n};\nProductCoverUploadButton.propTypes = {\n  children: PropTypes.any.isRequired,\n  product: PropTypes.shape({ slug: PropTypes.string.isRequired }).isRequired,\n  onCreateSuccess: PropTypes.func,\n  onCreateError: PropTypes.func,\n  onUpdateSuccess: PropTypes.func,\n  onUpdateError: PropTypes.func,\n};\n//#endregion ProductCoverUploadButton\n\n//#endregion BUTTONS\n","import { useEffect } from 'react';\nimport { AdminView, PublishedStatusSpan } from '@miq/adminjs';\nimport Form from '@miq/form';\nimport { isRequired } from '@miq/utils';\nimport { productServices } from './utils';\nimport { SHOP_MSGS } from '../constants';\n\nconst isR = isRequired;\n\nexport function ProductQuickUpdateForm({ form, product, ...props }) {\n  const { setProduct, toast, categories } = props;\n  const productSlug = product?.slug;\n\n  useEffect(() => {}, [productSlug]);\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    const fD = {\n      name: form.values.name,\n      retail_price: form.values.retail_price,\n      is_on_sale: form.values.is_on_sale,\n      is_pre_sale: form.values.is_pre_sale,\n    };\n\n    if (form.values.category) fD.category = form.values.category;\n    if (form.values.is_on_sale) fD.sale_price = form.values.sale_price;\n\n    if (form.values.is_pre_sale) fD.is_pre_sale_text = form.values.is_pre_sale_text;\n\n    return productServices\n      .patch(product.slug, fD)\n      .then((data) => {\n        setProduct?.({ ...product, ...data });\n        toast?.success({ message: SHOP_MSGS.product.update_success });\n      })\n      .catch((err) => {\n        toast?.error({ message: SHOP_MSGS.product.update_error });\n        return form.handleError(err);\n      });\n  };\n\n  return (\n    <ProductForm context={form} onSubmit={handleSubmit} className=\"quick-product-update-form\">\n      <div className=\"d-grid grid-md-3 gap-3\">\n        <div className=\"span-md-2\">\n          <AdminView.Section\n            title=\"Details\"\n            actions={<PublishedStatusSpan is_published={product?.page?.is_published} pill />}\n          >\n            <div className=\"mb-1\">\n              <ProductNameInput error={form.errors.name} />\n            </div>\n\n            {categories && (\n              <div className=\"mb-1\">\n                <ProductCategoryInput categories={categories} error={form?.errors?.category} />\n              </div>\n            )}\n\n            <div className=\"mb-1\">\n              <div className=\"mb-1\">\n                <ProductRetailPriceInput error={form?.errors?.retail_price} />\n              </div>\n\n              {/* PRE SALE */}\n              <div className=\"mb-1\">\n                <div className=\"d-flex align-items-center mb-1\">\n                  <ProductPresaleCheckboxInput error={form?.errors?.is_pre_sale} />\n                </div>\n\n                {form.values.is_pre_sale && (\n                  <div className=\"mb-2\">\n                    <ProductPresaleTextInput error={form?.errors?.is_pre_sale_text} />\n                  </div>\n                )}\n              </div>\n\n              {/* SALE  */}\n              <div className=\"d-flex align-items-center mb-1\">\n                <ProductOnSaleCheckboxInput error={form?.errors?.is_on_sale} />\n              </div>\n\n              {form.values.is_on_sale && (\n                <div className=\"mb-2\">\n                  <ProductSalePriceInput error={form?.errors?.sale_price} />\n                </div>\n              )}\n            </div>\n\n            <div className=\"my-3\">\n              <Form.Submit value=\"Update product\" className=\"btn btn-primary-3\" />\n            </div>\n          </AdminView.Section>\n        </div>\n      </div>\n    </ProductForm>\n  );\n}\n\n//#region INPUTS\n\nexport const ProductNameInput = (props) => {\n  const { showLabel = false, label = 'Name', ...input } = props;\n  const { placeholder = 'Give a name to the item', ...rest } = input;\n  return (\n    <>\n      {showLabel && <Form.Label value={label} className=\"mb-1\" />}\n      <Form.TextInput {...rest} required name=\"name\" placeholder={placeholder} maxLength={99} />\n    </>\n  );\n};\n\nexport const ProductDescriptionField = (props) => {\n  const { label, text, ...input } = props;\n  const { placeholder = 'Give a description to the item', ...rest } = input;\n  return (\n    <Form.Field {...{ label, text }}>\n      <Form.TextAreaX\n        {...rest}\n        name=\"description\"\n        // error={form.errors.description}\n        placeholder={placeholder}\n      />\n    </Form.Field>\n  );\n};\n\nexport const ProductCategoryInput = (props) => {\n  const { showLabel = false, label = 'Category', ...input } = props;\n  const { categories, ...rest } = input;\n\n  return (\n    <>\n      {showLabel && <Form.Label value={label} />}\n      <Form.SelectInput {...rest} required name=\"category\" nullValue={{ label: 'Sélectionnez une catégorie' }}>\n        {categories?.items?.map((cat) => {\n          return <Form.SelectInput.Option {...cat} key={cat.value} />;\n        })}\n      </Form.SelectInput>\n    </>\n  );\n};\n\nexport const ProductRetailPriceInput = (props) => {\n  const { showLabel = false, label = 'Retail price', ...rest } = props;\n\n  return (\n    <>\n      {showLabel && <Form.Label value={label} id=\"retail_price_label\" />}\n      <Form.TextInput\n        {...rest}\n        required\n        type=\"number\"\n        name=\"retail_price\"\n        aria-describedby=\"retail_price_label\"\n        min=\"0\"\n        step=\"0.01\"\n      />\n    </>\n  );\n};\n\nexport const ProductPresaleCheckboxInput = (props) => {\n  const { showLabel = false, label = 'Pre-sale', ...rest } = props;\n\n  return (\n    <div className=\"d-flex align-items-center\">\n      <Form.CheckboxInput {...rest} name=\"is_pre_sale\" className=\"me-2\" />\n      <Form.Label value={label} />\n    </div>\n  );\n};\n\nexport const ProductPresaleTextInput = (props) => {\n  return (\n    <>\n      <Form.Label value=\"Pre sale text\" id=\"is_pre_sale_text_label\" className=\"miq-checkbox-label\" />\n      <Form.TextAreaX name=\"is_pre_sale_text\" aria-describedby=\"is_pre_sale_text_label\" />\n    </>\n  );\n};\n\nexport const ProductOnSaleCheckboxInput = (props) => {\n  const { showLabel = false, label = 'On Sale', ...rest } = props;\n\n  return (\n    <div className=\"d-flex align-items-center\">\n      <Form.CheckboxInput {...rest} name=\"is_on_sale\" className=\"me-2\" />\n      <Form.Label value={label} />\n    </div>\n  );\n};\n\nexport const ProductSalePriceInput = (props) => {\n  const { showLabel = false, label = 'Sale price', ...rest } = props;\n  return (\n    <>\n      {showLabel && <Form.Label value={label} id=\"sale_price_label\" className=\"miq-checkbox-label\" />}\n      <Form.TextInput\n        {...rest}\n        required\n        type=\"number\"\n        name=\"sale_price\"\n        aria-describedby=\"sale_price_label\"\n        min=\"0\"\n        step=\"0.01\"\n      />\n    </>\n  );\n};\n\nexport const ProductStageSelect = (props) => {\n  const { showLabel = false, label = 'Stage', ...input } = props;\n  const { stages, name, ...rest } = input;\n\n  return (\n    <>\n      {showLabel && <Form.Label value={label} />}\n      <Form.SelectInput {...rest} required name={name || 'stage'} nullValue={{ label: 'Select stage' }}>\n        {stages?.map?.((stage) => {\n          return <Form.SelectInput.Option {...stage} key={stage.value} />;\n        })}\n      </Form.SelectInput>\n    </>\n  );\n};\n\n//#endregion INPUTS\n\n//#region FORMS\n\nexport const ProductForm = ({ children, context, fields = [], prodSlug, ...props }) => {\n  const { onWillSubmit, onSuccess, onError, ...rest } = props;\n\n  const handleSubmit = (e) => {\n    if (!context || !fields) return;\n\n    onWillSubmit?.();\n\n    e.preventDefault();\n    const fD = {\n      // name: context.values.name,\n      // retail_price: form.values.retail_price,\n      // is_on_sale: form.values.is_on_sale,\n      // is_pre_sale: form.values.is_pre_sale,\n    };\n\n    fields.forEach((field) => {\n      const value = context.values[field];\n      if (value == null) return;\n      fD[field] = value;\n    });\n\n    // if (form.values.category) fD.category = form.values.category;\n    // if (form.values.is_on_sale) fD.sale_price = form.values.sale_price;\n\n    // if (form.values.is_pre_sale) fD.is_pre_sale_text = form.values.is_pre_sale_text;\n    if (!prodSlug) return;\n\n    return productServices\n      .patch(prodSlug, fD)\n      .then((data) => {\n        props?.onSuccess?.(data);\n      })\n      .catch((err) => {\n        if (props.onError) return props.onError(err);\n        return context.handleError(err);\n      });\n  };\n  return (\n    <Form {...rest} context={context} onSubmit={props.onSubmit || handleSubmit}>\n      {children}\n    </Form>\n  );\n};\n\nProductForm.NameInput = ProductNameInput;\nProductForm.DescField = ProductDescriptionField;\nProductForm.CategoryInput = ProductCategoryInput;\nProductForm.RetailPriceInput = ProductRetailPriceInput;\nProductForm.PresaleCheckboxInput = ProductPresaleCheckboxInput;\nProductForm.PresaleTextInput = ProductPresaleTextInput;\nProductForm.OnSaleCheckboxInput = ProductOnSaleCheckboxInput;\nProductForm.SalePriceInput = ProductSalePriceInput;\nProductForm.StageSelect = ProductStageSelect;\n\n//#endregion\n","import { IBtnSave, ConfirmIconButton, Icons, Button } from '@miq/components';\n\nimport Form, { useForm } from '@miq/form';\nimport { productServices } from './utils';\n\n//#region FORMS\n\nexport const AttributeUpdateForm = ({ instance, product, ...props }) => {\n  const form = useForm({ name: instance?.name || '', value: instance?.value || '' });\n\n  if (!instance || !instance.slug || !product || !product.slug) return null;\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n\n    return productServices\n      .patchAttribute(product.slug, instance.slug, form.values)\n      .then((data) => {\n        return props?.onSuccess(data);\n      })\n      .catch((err) => {\n        return form.handleError(err);\n      });\n  };\n\n  return (\n    <Form context={form} onSubmit={handleSubmit}>\n      <div className=\"d-flex flex-column flex-md-row\" style={{ alignItems: 'end' }}>\n        <div className=\"me-md-1\">\n          <AttrNameInput error={form.errors.name} />\n        </div>\n\n        <div className=\"w-100 me-md-1\">\n          <AttrValueInput error={form.errors.value} />\n        </div>\n\n        <div className=\"d-flex ms-md-1\">\n          <ConfirmIconButton\n            Icon={Icons.Trash}\n            render={(args) => (\n              <div className=\"p-3 w-100 d-flex justify-content-center\">\n                <div className=\"w-md-50 d-flex align-items-center justify-content-between\">\n                  <div>\n                    <Button\n                      onClick={() =>\n                        productServices\n                          .deleteAttribute(product.slug, instance.slug)\n                          .then((data) => {\n                            args?.setOpen(false);\n                            return props?.onSuccess(data);\n                          })\n                          .catch(() => {\n                            props?.toast?.error({ message: 'Could not delete attribute.' });\n                          })\n                      }\n                      className=\"btn-danger\"\n                    >\n                      Supprimer\n                    </Button>\n                  </div>\n                  <div>\n                    <Button onClick={() => args?.setOpen(false)}>Annuler</Button>\n                  </div>\n                </div>\n              </div>\n            )}\n            renderHeader={(args) => {\n              return (\n                <div className=\"p-3\">\n                  <div className=\"fw-bold\">Supprimer l'attribut \"{instance.name}\"</div>\n                </div>\n              );\n            }}\n            className=\"btn-danger-3 me-1\"\n          />\n          <Form.Submit value=\"Save\" className=\"btn btn-primary-2\" />\n        </div>\n      </div>\n    </Form>\n  );\n};\n\nexport function AttributeCreateForm({ product, ...props }) {\n  const initValues = { name: '', value: '' };\n  const form = useForm(initValues);\n\n  if (!product || !product.slug) return null;\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    // if (form.hasErrors()) return;\n\n    return productServices\n      .postAttribute(product.slug, form.values)\n      .then((data) => {\n        form.setValues(initValues);\n        return props?.onSuccess(data);\n      })\n      .catch((err) => {\n        return form.handleError(err);\n      });\n  };\n\n  // const invalidAttrNames = product?.attributes?.map((at) => at.name) || [];\n\n  return (\n    <Form context={form} onSubmit={handleSubmit}>\n      <div className=\"d-flex flex-column flex-md-row\" style={{ alignItems: 'end' }}>\n        <div className=\"me-md-1\">\n          <Form.Label value=\"Name\" />\n          <AttrNameInput error={form.errors.name} />\n        </div>\n\n        <div className=\"w-100 me-md-1\">\n          <Form.Label value=\"Value\" />\n          <AttrValueInput error={form.errors.value} />\n        </div>\n\n        <div className=\"ms-md-1\">\n          <IBtnSave type=\"submit\" className=\"btn-primary-3\" />\n        </div>\n      </div>\n    </Form>\n  );\n}\n\n//#endregion FORMS\n\n//#region INPUTS\n\nconst AttrNameInput = (props) => (\n  <Form.TextInput placeholder=\"Nom de l'attribut\" {...props} required name=\"name\" maxLength={30} minLength={2} />\n);\n\nconst AttrValueInput = (props) => (\n  <Form.TextInput placeholder=\"Valeur de l'attribut\" {...props} required name=\"value\" maxLength={99} minLength={2} />\n);\n\n//#endregion INPUTS\n","import { useContext, useEffect, useState } from 'react';\n\nimport { AdminView } from '@miq/adminjs';\nimport Form, { useForm } from '@miq/form';\nimport { getClassName } from '@miq/utils';\nimport { ToastCtx, Button, Img, ImgDeleteIconButton } from '@miq/components';\n\nimport { SupplierData } from '../orders/components';\n\nimport { productServices } from './utils';\nimport { ProductImageAltTextInput, ProductImageUploadButton } from './components';\nimport { AttributeCreateForm, AttributeUpdateForm } from './Attribute';\nimport { ProductQuickUpdateForm, ProductForm } from './forms';\nimport { SHOP_MSGS, SHOP_PATHS } from '../constants';\n\nexport const productFormDefaultValues = {\n  name: '',\n  description: '',\n  category: '',\n  retail_price: 0.0,\n  is_pre_sale: false,\n  is_pre_sale_text: '',\n  sale_price: 0.0,\n  is_on_sale: false,\n  //\n  title: '',\n  slug_public: '',\n};\n\nexport default function ProductUpdateStaffView(props) {\n  const { prodSlug } = props.match.params;\n\n  const [product, setProduct] = useState({});\n  const [tab, setTab] = useState('info');\n\n  const form = useForm(productFormDefaultValues);\n  const { setValues } = form;\n\n  useEffect(() => {\n    productServices\n      .detail(prodSlug)\n      .then((data) => {\n        setProduct(data);\n        setValues({\n          name: data.name || '',\n          description: data.description || '',\n          category: data.category || '',\n          retail_price: data?.retail_price || 0.0,\n          // PRESALE\n          is_pre_sale: data.is_pre_sale || false,\n          is_pre_sale_text: data.is_pre_sale_text || '',\n          // SALE\n          is_on_sale: data.is_on_sale || false,\n          sale_price: data?.sale_price || 0.0,\n          // SEO\n          title: data.page.title || '',\n          slug_public: data?.page?.slug_public || '',\n        });\n      })\n      .catch((err) => {\n        if (err.response) {\n          // toast.error({ message: \"Something went wrong\" });\n          console.log(err.response);\n          if (err.response.status === 404) {\n            return;\n          }\n        }\n      });\n  }, [prodSlug, setValues]);\n\n  if (!product) return null;\n\n  return (\n    <AdminView back={props?.back} className=\"miq-container-1024 product-update-view\">\n      <div className=\"my-2\">\n        <div className=\"d-flex justify-content-center mb-3\">\n          <div className=\"d-flex align-items-center\">\n            <Button\n              onClick={() => setTab('info')}\n              className={getClassName(['me-1', tab === 'info' && 'btn-primary-3'])}\n            >\n              Info\n            </Button>\n            <Button\n              onClick={() => setTab('inventory')}\n              className={getClassName(['me-1', tab === 'inventory' && 'btn-primary-3'])}\n            >\n              Inventory\n            </Button>\n            <Button\n              onClick={() => setTab('imgs')}\n              className={getClassName(['me-1', tab === 'imgs' && 'btn-primary-3'])}\n            >\n              Images\n            </Button>\n            <Button onClick={() => setTab('setting')} className={getClassName([tab === 'setting' && 'btn-primary-3'])}>\n              Settings\n            </Button>\n          </div>\n        </div>\n      </div>\n    </AdminView>\n  );\n}\n"],"sourceRoot":""}
{"version":3,"sources":["shop/orders/utils.jsx","shop/orders/index.jsx"],"names":["supOrderServices","orderSlug","values","this","postPath","path","timeout","StaffService","SupplierOrderStaffUpdateView","lazy","SupplierOrderStaffIndexView","props","useState","data","setData","perms","useContext","SharedDataCtx","useEffect","list","then","catch","err","canAdd","hasPerms","title","count","back","actions","onClick","post","history","push","addForwardSlash","match","url","slug","disabled","className","results","Section","items","renderItem","order","Tr","Td","to","SHOP_PATHS","orderUpdate","pagination","next","previous","SupplierOrderStaffRoutes","render","args","requiredPerms"],"mappings":"gMAQaA,EAAmB,I,yKAL9B,SAAoBC,EAAWC,GAC7B,OAAOC,KAAKC,SAAL,UAAiBD,KAAKE,MAAtB,OAA6BJ,EAA7B,WAAiDC,EAAQ,CAAEI,QAAS,U,QAFvCC,GAMR,CAA8B,Y,wLCIxDC,EAA+BC,gBAAK,kBAAM,iCAE1CC,EAA8B,SAACC,GACnC,MAAwBC,mBAAS,IAAjC,mBAAOC,EAAP,KAAaC,EAAb,KACA,EAA8BF,oBAAS,GAAvC,mBACQG,GADR,UACkBC,qBAAWC,KAArBF,OAERG,qBAAU,WACRlB,IACGmB,OACAC,MAAK,SAACP,GACLC,EAAQD,MAETQ,OAAM,SAACC,SAGT,IAEH,IAAMC,EAASC,YAAST,EAAMA,MAAO,CAAC,2BAEtC,OACE,cAAC,IAAD,CACEU,MAAK,2BAAsBZ,EAAKa,MAA3B,KACLC,KAAMhB,EAAMgB,KACZC,QACE,cAAC,IAAD,CACEC,QAAS,WACP7B,IACG8B,KAAK,IACLV,MAAK,SAACP,GACL,OAAOF,EAAMoB,QAAQC,KAAd,UAAsBC,YAAgBtB,EAAMuB,MAAMC,MAAlD,OAAyDtB,EAAKuB,KAA9D,SAERf,OAAM,SAACC,QAIZe,UAAWd,EACXe,UAAU,gBACVb,MAAOF,EAAS,kBAAoB,iCAbtC,uBAJJ,UAuBO,OAAJV,QAAI,IAAJA,OAAA,EAAAA,EAAM0B,UACL,cAAC,IAAUC,QAAX,CAAmBF,UAAU,sBAA7B,SACE,cAAC,IAAD,CACEA,UAAU,QACVG,MAAO5B,EAAK0B,QACZG,WAAY,SAACC,GACX,OACE,eAAC,IAAMC,GAAP,CAAUN,UAAU,gBAApB,UACE,cAAC,IAAMO,GAAP,CAAUP,UAAU,GAApB,SACE,cAAC,IAAD,CAAMQ,GAAIC,IAAWC,YAAYL,EAAMP,MAAvC,SAA+CO,EAAMP,SAEvD,cAAC,IAAMS,GAAP,CAAUP,UAAU,6CAApB,iBAJuCK,EAAMP,OAQnDa,WAAY,CACVvB,MAAOb,EAAKa,MACZwB,KAAMrC,EAAKqC,KACXC,SAAUtC,EAAKsC,iBAWd,SAASC,EAAyBzC,GAC/C,MAAsBA,EAAMuB,MAApB7B,EAAR,EAAQA,KAAM8B,EAAd,EAAcA,IAEd,OACE,eAAC,IAAD,WACE,cAAC,IAAD,CACE9B,KAAI,UAAKA,EAAL,gBACJgD,OAAQ,SAACC,GAAD,OAAU,cAAC9C,EAAD,2BAAkC8C,GAAlC,IAAwC3B,KAAMM,YAAgBE,OAChFoB,cAAe,CAAC,+BAElB,cAAC,IAAD,CACEA,cAAe,CAAC,2BAChBF,OAAQ,SAACC,GAAD,OAAU,cAAC5C,EAAD,2BAAiC4C,GAAjC,IAAuC3B,KAAMhB,EAAMgB,gB","file":"static/js/7.3f9d5914.chunk.js","sourcesContent":["import { StaffService } from '@miq/utils';\n\nclass SupplierOrderStaffService extends StaffService {\n  getSheinProductData(orderSlug, values) {\n    return this.postPath(`${this.path}${orderSlug}/shein/`, values, { timeout: 10000 });\n  }\n}\n\nexport const supOrderServices = new SupplierOrderStaffService('orders/');\n","import React, { lazy, useContext, useEffect, useState } from 'react';\nimport { Switch, Link } from 'react-router-dom';\n\nimport { SharedDataCtx } from '@miq/contexts';\nimport { AdminRoute, AdminView, hasPerms } from '@miq/adminjs';\nimport { Table, ItemTable, Button } from '@miq/components';\nimport { supOrderServices } from './utils';\nimport { addForwardSlash } from '@miq/utils';\nimport { SHOP_PATHS } from '../constants';\n\nimport './orders.scss';\n\nconst SupplierOrderStaffUpdateView = lazy(() => import('./UpdateView'));\n\nconst SupplierOrderStaffIndexView = (props) => {\n  const [data, setData] = useState({});\n  const [isAdding, setAdding] = useState(false);\n  const { perms } = useContext(SharedDataCtx);\n\n  useEffect(() => {\n    supOrderServices\n      .list()\n      .then((data) => {\n        setData(data);\n      })\n      .catch((err) => {\n        // console.log(err);\n      });\n  }, []);\n\n  const canAdd = hasPerms(perms.perms, ['shop.add_supplierorder']);\n\n  return (\n    <AdminView\n      title={`Supplier Orders (${data.count})`}\n      back={props.back}\n      actions={\n        <Button\n          onClick={() => {\n            supOrderServices\n              .post({})\n              .then((data) => {\n                return props.history.push(`${addForwardSlash(props.match.url)}${data.slug}/`);\n              })\n              .catch((err) => {\n                // console.log(err);\n              });\n          }}\n          disabled={!canAdd}\n          className=\"btn-primary-3\"\n          title={canAdd ? 'Add a new order' : 'You cannot perform this action'}\n        >\n          Add order\n        </Button>\n      }\n    >\n      {data?.results && (\n        <AdminView.Section className=\"category-table mb-3\">\n          <ItemTable\n            className=\"w-100\"\n            items={data.results}\n            renderItem={(order) => {\n              return (\n                <Table.Tr className=\"border-bottom\" key={order.slug}>\n                  <Table.Td className=\"\">\n                    <Link to={SHOP_PATHS.orderUpdate(order.slug)}>{order.slug}</Link>\n                  </Table.Td>\n                  <Table.Td className=\"d-none d-md-table-cell text-sm text-center\">2</Table.Td>\n                </Table.Tr>\n              );\n            }}\n            pagination={{\n              count: data.count,\n              next: data.next,\n              previous: data.previous,\n              // onPreviousClick: handlePreviousClick,\n              // onNextClick: handleNextClick,\n            }}\n          />\n        </AdminView.Section>\n      )}\n    </AdminView>\n  );\n};\n\nexport default function SupplierOrderStaffRoutes(props) {\n  const { path, url } = props.match;\n\n  return (\n    <Switch>\n      <AdminRoute\n        path={`${path}:sOrderSlug/`}\n        render={(args) => <SupplierOrderStaffUpdateView {...args} back={addForwardSlash(url)} />}\n        requiredPerms={['shop.change_supplierorder']}\n      />\n      <AdminRoute\n        requiredPerms={['shop.view_supplierorder']}\n        render={(args) => <SupplierOrderStaffIndexView {...args} back={props.back} />}\n      />\n    </Switch>\n  );\n}\n"],"sourceRoot":""}
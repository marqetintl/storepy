{"version":3,"file":"static/js/465.aa5f85fb.chunk.js","mappings":"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","sources":["../../../../shopy/shopy-storejs/src/Category/UpdateView.tsx","../../../../shopy/shopy-storejs/src/Category/forms.tsx","../../../../shopy/shopy-storejs/src/Category/models.tsx","../../../../shopy/shopy-storejs/src/Product/components.tsx","../../../../shopy/shopy-storejs/src/Product/models.tsx","../../../../shopy/shopy-storejs/src/components.tsx","../../../../shopy/shopy-storejs/src/events/index.tsx"],"sourcesContent":["// import * as React from 'react';\nimport { useParams } from 'react-router-dom';\n\nimport Staff from '@miq/staffjs';\nimport Form, { useForm, MetaTitleField, MetaSlugField, MetaDescriptionField } from '@miq/formjs';\nimport { Response } from '@miq/utiljs';\nimport { useRequest } from '@miq/hookjs';\nimport { Icons } from '@miq/componentjs';\n\nimport { PublishButton, UnPublishButton } from '../components';\nimport { getImageComponent } from '../Product/UpdateViewTabs';\nimport { StaffImgUpdateButton, StaffImgAddButton, StaffImgViewSelect, StaffImgDeleteButton } from '@miq/staffjs/';\nimport { StaffCategory } from './models';\nimport { CategoryForm, CategoryUpdateForm } from './forms';\nimport { CategoryType } from '../types';\n\nconst mapData2Values = (data: CategoryType = {}): CategoryType => {\n  return {\n    name: data.name || '',\n    description: data.description || '',\n    is_published: data.is_published || false,\n\n    meta_title: data.meta_title || '',\n    meta_slug: data?.meta_slug || '',\n    meta_description: data?.meta_description || '',\n  };\n};\n\nexport default function CategoryStaffUpdateView() {\n  const { catSlug } = useParams();\n  const form = useForm<CategoryType>(mapData2Values());\n\n  const { res, updateData } = useRequest(() => StaffCategory({ slug: catSlug }).retrieve(), {\n    refreshDeps: [catSlug],\n    onSuccess: ({ data }) => form.setValues(mapData2Values(data)),\n    onError: ({ response }) => {},\n  });\n\n  const r = new Response(res);\n  if (!r.isSuccess) return null;\n\n  let instance = StaffCategory(r.data);\n\n  const handleSuccess = ({ data }: any) => updateData(data);\n\n  const { errors } = form;\n\n  return (\n    <Staff.View\n      title=\"Modifier cette catégorie\"\n      back=\"../\"\n      requiredPerms={['store.change_category']}\n      className=\"cat-staff-update-view\"\n    >\n      <div className=\"d-grid grid-md-4\">\n        <div className=\"p-md-1\">\n          <div className=\"p-1\">\n            <CoverCard {...{ instance, updateData }} />\n          </div>\n        </div>\n\n        <div className=\"span-md-3 span-lg-2\">\n          <Staff.Section title=\"Details\">\n            <CategoryUpdateForm\n              context={form}\n              instance={instance}\n              fields={['name', 'description']}\n              onSuccess={handleSuccess}\n            >\n              <CategoryForm.NameField\n                label=\"Nom de la catégorie\"\n                error={errors.name}\n                text={`Ajoutez un nom qui décrit cette catégorie.\\nNous recommandons 65 caractères au max.`}\n              />\n              <CategoryForm.DescriptionField\n                label=\"Description\"\n                error={errors.description}\n                text={`Décrivez cet catégorie.`}\n              />\n              <div className=\"d-flex justify-content-center\">\n                <Form.Submit value=\"Sauvegarder\" className=\"btn-primary-3 min-w-25\" />\n              </div>\n            </CategoryUpdateForm>\n          </Staff.Section>\n\n          <Staff.Section title=\"SEO\">\n            <CategoryUpdateForm\n              context={form}\n              instance={instance}\n              fields={['meta_title', 'meta_description', 'meta_slug']}\n              onSuccess={handleSuccess}\n            >\n              <MetaTitleField error={errors.meta_title} />\n              <MetaSlugField error={errors.meta_slug} />\n              <MetaDescriptionField error={errors.meta_description} />\n\n              <div className=\"d-flex justify-content-center\">\n                <Form.Submit value=\"Sauvegarder\" className=\"btn-primary-3 min-w-25\" />\n              </div>\n            </CategoryUpdateForm>\n          </Staff.Section>\n        </div>\n\n        <div className=\"span-lg-1\">\n          <div style={{ top: 0, position: 'sticky' }}>\n            {instance.is_published ? (\n              <UnPublishButton instance={instance} onSuccess={({ data }: any) => updateData(data)}>\n                Dépublier cette catégorie\n              </UnPublishButton>\n            ) : (\n              <PublishButton\n                instance={instance}\n                onSuccess={({ data }: any) => updateData(data)}\n                onError={(err: any) => form.handleError(err)}\n              >\n                Publier cette catégorie\n              </PublishButton>\n            )}\n          </div>\n        </div>\n      </div>\n    </Staff.View>\n  );\n}\n\nconst CoverCard = (props: { instance: ReturnType<typeof StaffCategory>; updateData: (r: any) => void }) => {\n  const { updateData, instance } = props;\n  const form = useForm({ view: 'src' });\n\n  const img = Staff.Img(instance?.cover_data || {});\n\n  if (!img?.slug)\n    return (\n      <div className=\"d-flex align-items-center justify-content-center flex-column text-center border-1 rounded p-3\">\n        <StaffImgAddButton\n          onSuccess={({ data }: any) => {\n            instance\n              .update({ cover: data.slug })\n              .then(({ data }: any) => updateData(data))\n              .catch((err: any) => {});\n          }}\n          label=\"Ajouter une image\"\n          className=\"btn-primary-3 btn-md\"\n        />\n      </div>\n    );\n\n  const Image = getImageComponent(form.values.view);\n  return (\n    <Form context={form} className=\"p-cover-update-form\">\n      <Staff.Section\n        border\n        title={\n          <StaffImgDeleteButton\n            onSuccess={() => updateData({ cover_data: null, cover: null })}\n            instance={img}\n            className=\"btn-danger-3\"\n          >\n            <Icons.Trash />\n          </StaffImgDeleteButton>\n        }\n        actions={<StaffImgViewSelect required name=\"view\" />}\n        className=\"p-image-card\"\n      >\n        <StaffImgUpdateButton\n          instance={img}\n          field={form.values.view}\n          onSuccess={({ data }: any) => updateData({ cover: data.slug, cover_data: data })}\n        >\n          <Image {...img} />\n        </StaffImgUpdateButton>\n      </Staff.Section>\n    </Form>\n  );\n};\n","import Form, { DescriptionField, NameField, TextFieldProps, useForm } from '@miq/formjs';\nimport { FormProps, IFormCallbackProps, IFormUpdateProps } from '@miq/formjs/src/Form';\nimport { isRequired as isR } from '@miq/utiljs';\nimport React from 'react';\nimport { StaffCategory } from './models';\n\nexport const CategoryCreateForm: React.FC<IFormCallbackProps> = (props) => {\n  const form = useForm({ name: '' });\n\n  const handleSubmit = (e: React.FormEvent) => {\n    e.preventDefault();\n\n    return StaffCategory()\n      .create(form.values)\n      .then((res: any) => props?.onSuccess?.(res))\n      .catch((err: any) => {\n        form.handleError(err);\n        props?.onError?.(err);\n      });\n  };\n  return (\n    <CategoryForm context={form} onSubmit={handleSubmit}>\n      <div className=\"\">\n        <CategoryForm.NameField error={form.errors.name} />\n      </div>\n\n      <div className=\"my-3\">\n        <Form.Submit value={'Save category'} className=\"btn btn-primary\" />\n      </div>\n    </CategoryForm>\n  );\n};\n\ninterface ICategoryUpdateFormProps extends IFormUpdateProps {\n  instance: ReturnType<typeof StaffCategory>;\n  onWillSubmit?: () => void;\n  fields: string[];\n}\n\nexport const CategoryUpdateForm: React.FC<ICategoryUpdateFormProps> = ({\n  instance = isR('Category instance'),\n  fields,\n  ...props\n}) => {\n  const { onSuccess, onError, onWillSubmit, ...rest } = props;\n  const { context } = rest;\n\n  const handleSubmit = (e: React.FormEvent) => {\n    e.preventDefault();\n    onWillSubmit?.();\n\n    const fd: any = {};\n    fields.forEach((field) => {\n      const value = context.values[field];\n      if (value == null) return;\n      fd[field] = value;\n    });\n\n    return instance\n      .update(fd)\n      .then((res: any) => onSuccess?.(res))\n      .catch((err: any) => {\n        if (onError) return onError(err);\n        return context?.handleError?.(err);\n      });\n  };\n  return <CategoryForm {...rest} onSubmit={handleSubmit} />;\n};\n\nexport const CategoryForm = (props: FormProps) => <Form {...props} />;\n\nCategoryForm.NameField = (props: TextFieldProps) => (\n  <NameField placeholder=\"Entrez le nom de la catégorie ...\" {...props} required />\n);\n\nCategoryForm.DescriptionField = (props: TextFieldProps) => <DescriptionField {...props} />;\n","import { StaffModel, StaffService } from '@miq/staffjs';\nimport { CategoryType } from '../types';\n\n\nclass StaffCategoryService extends StaffService<CategoryType> {\n  publish() {\n    return this.update({ is_published: true });\n  }\n\n  unpublish() {\n    return this.update({ is_published: true });\n  }\n}\n\nexport const StaffCategory = (data: CategoryType = {}) => {\n  let { dt_published } = data;\n  if (dt_published) dt_published = new Date(dt_published);\n\n  return StaffModel<CategoryType, StaffCategoryService>(\n    { ...data, dt_published },\n    'categories',\n    StaffCategoryService\n  );\n};\n","import { NavLink, useSearchParams } from 'react-router-dom';\n\nimport { ImgAddButtonProps, StaffImg, StaffImgAddButton } from '@miq/staffjs';\nimport { IFormUpdateProps } from '@miq/formjs';\nimport { getCN } from '@miq/utiljs';\nimport { Button, ConfirmButton, Icons, ImgType } from '@miq/componentjs';\n\nimport { emitter } from '../events';\nimport { ProductType } from '../types';\nimport { ProductPriceDisplay, PublishedIcon } from '../components';\n\nimport { StaffProduct, TStaffProductInstance } from './models';\n\n//#region ============================== BUTTONS\n\nexport type ProductImagesAddButtonProps = Omit<ImgAddButtonProps, 'onSuccessMulti' | 'onErrorMulti'> & {\n  productInstance: TStaffProductInstance;\n};\n\n/**\n * Button component for adding images to a product\n * ```js\n * <ProductImagesAddButton productInstance={instance} onSuccess={(res: any) => onUpdate?.(res.data)} />\n * ```\n */\n\nexport const ProductImagesAddButton = (props: ProductImagesAddButtonProps) => {\n  const { productInstance, onSuccess, onError, ...rest } = props;\n  return (\n    <StaffImgAddButton\n      className=\"btn-primary-3\"\n      {...rest}\n      multiple={true}\n      onSuccessMulti={(resArray) => {\n        const imgsArray = resArray\n          .map(({ data }: any) => data?.slug)\n          .filter((slug) => !productInstance.images?.includes(slug));\n        return productInstance\n          .update({ images: [...productInstance.images!, ...imgsArray] })\n          .then((res) => onSuccess?.(res))\n          .catch((err) => onError?.(err));\n      }}\n    />\n  );\n};\n\nexport const ProductDeleteButton: React.FC<\n  Omit<IFormUpdateProps<TStaffProductInstance>, 'context'> & { label?: string }\n> = (props) => {\n  const { instance, onSuccess, onError, label } = props;\n\n  const handleDelete = (setOpen: any) => {\n    instance\n      .destroy()\n      .then((res: any) => {\n        setOpen?.(false);\n        onSuccess?.(res);\n        emitter.destroy({ slug: instance.slug });\n      })\n      .catch((err: any) => onError?.(err));\n  };\n  return (\n    <ConfirmButton\n      renderHeader={() => <div>Supprimer '{instance.name}'</div>}\n      renderFooter={({ setOpen }) => (\n        <div className=\"d-flex justify-content-between align-items-center\">\n          <Button onClick={() => setOpen(false)}>Annuler</Button>\n\n          <Button onClick={() => handleDelete(setOpen)} className=\"btn-danger\">\n            Supprimer\n          </Button>\n        </div>\n      )}\n      render={() => <div className=\"p-3\">Are you sure you want to delete this</div>}\n      className={getCN(['product-delete-button btn-danger-3', props.className])}\n    >\n      <Icons.Trash />\n      {label && <span className=\"label\">{label}</span>}\n    </ConfirmButton>\n  );\n};\n\n//#endregion ============================== BUTTONS\n\nexport const ProductCardItem = ({ data, ...props }: { data: ProductType }) => {\n  const instance = StaffProduct(data);\n\n  return (\n    <div className=\"p-card-list-item p-1 mb-1\">\n      <div className=\"d-flex align-items-center\">\n        <div className=\"p-name text-ellipsis\">{instance.name_truncated}</div>\n        <div className=\"ms-1\">\n          <PublishedIcon show={instance.is_published} />\n        </div>\n      </div>\n\n      <div className=\"d-flex\">\n        <StaffImg.Square {...instance?.cover_data} />\n        <div className=\"p-info ps-1\">\n          <ProductPriceDisplay {...instance.export()} className=\"d-flex flex-wrap\" />\n          <div className=\"p-category\">{instance.category_data?.name}</div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport type ProductCardListProps = {\n  items: ProductType[];\n  itempath: string;\n};\nexport const ProductCardList = ({ items, itempath }: ProductCardListProps) => {\n  const [params] = useSearchParams();\n  return (\n    <div className=\"p-card-list-items\">\n      {items.map((item: ProductType) => {\n        // let to = `${itempath}${item.slug}/?${params}`;\n        let to = `${itempath}${item.slug}/?${params}`;\n        return (\n          <NavLink to={to} key={item.slug}>\n            <ProductCardItem data={item} />\n          </NavLink>\n        );\n      })}\n    </div>\n  );\n};\n","import { StaffModel, StaffService } from '@miq/staffjs';\nimport { ProductType } from '../types';\n\nclass StaffProductService extends StaffService<ProductType> {\n  publish() {\n    return this.patch(`${this._path}publish/`, { is_published: true });\n  }\n\n  unpublish() {\n    return this.patch(`${this._path}publish/`, { is_published: false });\n  }\n\n  postSize(values: any) {\n    return this.post(`${this._path}size/new/`, values);\n  }\n  patchSize(sizeSlug: string, values: any) {\n    return this.patch(`${this._path}size/${sizeSlug}/`, values);\n  }\n  deleteSize(sizeSlug: string) {\n    return this.delete(`${this._path}size/${sizeSlug}/`);\n  }\n  postAttribute(values: any) {\n    return this.post(`${this._path}attribute/new/`, values);\n  }\n  patchAttribute(attrSlug: string, values: any) {\n    return this.patch(`${this._path}attribute/${attrSlug}/`, values);\n  }\n  deleteAttribute(attrSlug: string) {\n    return this.delete(`${this._path}attribute/${attrSlug}/`);\n  }\n  swapCover(slug: string) {\n    return this.patch(`${this._path}swap-cover/`, { slug });\n  }\n}\n\nexport const StaffProduct = (data: ProductType = {}) => {\n  let { dt_published } = data;\n  if (dt_published) dt_published = new Date(dt_published);\n\n  return StaffModel<ProductType, StaffProductService>({ ...data, dt_published }, 'products', StaffProductService);\n};\n\nexport type TStaffProductInstance = ReturnType<typeof StaffProduct>;\n","import React from 'react';\nimport { Button, ButtonProps, Icons, ToastEmitter } from '@miq/componentjs';\n\n// https://www.bennadel.com/blog/3961-having-fun-with-the-horizontal-usage-of-position-sticky-in-angular-11-0-5.htm\n\nimport './component.scss';\n\nimport { StaffCategory } from './Category';\nimport { StaffProduct } from './Product';\nimport { PriceDataType, ProductType } from './types';\nimport { getCN } from '@miq/utiljs';\n\ntype InstanceType = ReturnType<typeof StaffProduct> | ReturnType<typeof StaffCategory>;\n\ninterface UpdateButtonProps extends ButtonProps {\n  instance: InstanceType;\n  onSuccess: (r: any) => void;\n}\n\nexport const PublishButton: React.FC<UpdateButtonProps> = (props) => {\n  const { instance, onClick, onSuccess, onError, ...rest } = props;\n\n  const handleClick = () => {\n    if (instance.is_published) return null;\n    return instance\n      .publish()\n      .then((res: any) => onSuccess?.(res))\n      .catch((err: any) => onError?.(err));\n  };\n\n  return <Button onClick={handleClick} className=\"btn-primary btn-md\" {...rest} disabled={instance.is_published} />;\n};\n\nexport const UnPublishButton: React.FC<UpdateButtonProps> = (props) => {\n  const { instance, onClick, onSuccess, onError, ...rest } = props;\n\n  const handleClick = () => {\n    if (!instance.is_published) return null;\n    return instance\n      .unpublish()\n      .then((res: any) => onSuccess?.(res))\n      .catch((err: any) => onError?.(err));\n  };\n\n  return <Button className=\"btn-danger btn-md\" onClick={handleClick} {...rest} disabled={!instance.is_published} />;\n};\n\n//#region ================================== COMPONENTS =============================================================\n\nexport type PriceDisplayProps = PriceDataType & {\n  className?: string;\n  sale?: string | boolean;\n  lineThrough?: string | boolean;\n};\n\nexport const PriceDisplay = ({ amountWithSymbol, className, sale, lineThrough }: PriceDisplayProps) => (\n  <div className={getCN(['miq-price-display', sale && 'text-danger', lineThrough && 'text-line-through', className])}>\n    {amountWithSymbol}\n  </div>\n);\n\nexport const ProductPriceDisplay = ({\n  retail_price_data,\n  is_on_sale,\n  sale_price_data,\n  ...props\n}: ProductType & { className?: string; style?: any }) => {\n  if (!retail_price_data) return null;\n\n  const isSale = is_on_sale && sale_price_data?.amountWithSymbol != null;\n\n  return (\n    <div className={getCN(['miq-product-price-display', props.className])} style={props.style}>\n      {isSale && <PriceDisplay sale {...sale_price_data} className=\"miq-sale-price me-1\" />}\n      <PriceDisplay {...retail_price_data} lineThrough={isSale} className=\"miq-retail-price\" />\n    </div>\n  );\n};\n\nexport const ProductSupplierData = (props: { instance: InstanceType }) => {\n  // const { instance } = props;\n\n  return (\n    <div className=\"supplier-data\">\n      <div className=\"item\">\n        <span className=\"title\">Supplier</span>\n        {/* <span className=\"value\">{instance.supplier_name}</span> */}\n      </div>\n      <div className=\"item\">\n        <span className=\"title\">Item ID</span>\n        {/* <span className=\"value\">{instance.supplier_item_id}</span> */}\n      </div>\n      <div className=\"item\">\n        <span className=\"title\">Category</span>\n        {/* <span className=\"value\">{instance.supplier_item_category}</span> */}\n      </div>\n      <div className=\"item\">\n        <span className=\"title\"> Item cost</span>\n        <span className=\"value\">{/* {instance.supplier_item_cost} ({instance.supplier_item_cost_currency}) */}</span>\n      </div>\n    </div>\n  );\n};\n\nexport const PublishedIcon = ({ show, ...props }: React.ComponentPropsWithoutRef<'svg'> & { show?: boolean }) =>\n  show ? <Icons.CheckCircle {...props} className=\"published-icon\" /> : null;\n\n//#endregion ===============================================================================================\n\nexport const toast = new ToastEmitter();\n\n{\n  /* <Toaster instance={t}></Toaster> */\n}\n// <button\n//   onClick={() => {\n//     t.info({ message: 'Hello', autoClose: true });\n//   }}\n// >\n//   Click me\n// </button>\n","import * as React from 'react';\nimport EventEmitter from 'events';\n\ninterface IEventStateSyncProps {\n  children?: React.ReactNode;\n}\n\nclass CrudEmitter extends EventEmitter {\n  prefix?: string;\n\n  constructor(...args: any) {\n    const { prefix = '', ...rest } = args;\n    super(rest);\n\n    this.prefix = prefix;\n  }\n\n  create(payload: any) {\n    this.emit(`${this.prefix}-create`, payload);\n  }\n  retrieve(payload: any) {\n    this.emit(`${this.prefix}-retrieve`, payload);\n  }\n  list(payload: any) {\n    this.emit(`${this.prefix}-list`, payload);\n  }\n  update(payload: any) {\n    this.emit(`${this.prefix}-update`, payload);\n  }\n  destroy(payload: any) {\n    this.emit(`${this.prefix}-destroy`, payload);\n  }\n}\n\nexport const emitter = new CrudEmitter();\n\ntype FN<T> = T & { [key: string]: any; slug: string };\n\ntype CallBacksType<T = void> = {\n  onList?: () => void;\n  onRetrieve?: () => void;\n  onCreate?: (payload: FN<T>) => void;\n  onUpdate?: (payload: FN<T>) => void;\n  onDestroy?: (payload: FN<T>) => void;\n};\n\nexport function useCrudEmitter(callbacks: CallBacksType, match?: (p: any) => boolean) {\n  React.useEffect(() => {\n    emitter.on('-create', (payload: any) => {\n      if (match && !match(payload)) return;\n\n      callbacks.onCreate?.(payload);\n    });\n\n    emitter.on('-update', (payload: any) => {\n      if (match && !match(payload)) return;\n\n      callbacks.onUpdate?.(payload);\n    });\n\n    emitter.on('-destroy', (payload: any) => {\n      if (match && !match(payload)) return;\n\n      callbacks.onDestroy?.(payload);\n    });\n  }, []);\n}\n"],"names":["mapData2Values","data","name","description","is_published","meta_title","meta_slug","meta_description","CategoryStaffUpdateView","catSlug","useParams","form","useForm","useRequest","StaffCategory","slug","retrieve","refreshDeps","onSuccess","setValues","onError","response","res","updateData","r","Response","isSuccess","instance","handleSuccess","errors","title","back","requiredPerms","className","CoverCard","context","fields","label","error","text","value","style","top","position","err","handleError","props","view","img","Staff","cover_data","update","cover","then","catch","Image","getImageComponent","values","border","actions","required","field","CategoryCreateForm","CategoryForm","onSubmit","e","preventDefault","create","NameField","CategoryUpdateForm","isR","onWillSubmit","rest","fd","forEach","placeholder","DescriptionField","StaffCategoryService","this","StaffService","dt_published","Date","StaffModel","ProductImagesAddButton","productInstance","multiple","onSuccessMulti","resArray","imgsArray","map","filter","images","includes","ProductDeleteButton","renderHeader","renderFooter","setOpen","onClick","destroy","emitter","handleDelete","render","getCN","ProductCardItem","StaffProduct","name_truncated","show","export","category_data","ProductCardList","items","itempath","useSearchParams","params","item","to","StaffProductService","patch","_path","post","sizeSlug","delete","attrSlug","PublishButton","publish","disabled","UnPublishButton","unpublish","PriceDisplay","amountWithSymbol","sale","lineThrough","ProductPriceDisplay","retail_price_data","is_on_sale","sale_price_data","isSale","PublishedIcon","ToastEmitter","CrudEmitter","args","prefix","payload","emit","EventEmitter","useCrudEmitter","callbacks","match","React","on","onCreate","call","onUpdate","onDestroy"],"sourceRoot":""}
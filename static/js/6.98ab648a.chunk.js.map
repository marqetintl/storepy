{"version":3,"sources":["shop/product/utils.jsx","shop/orders/components.jsx","shop/product/components.jsx","shop/product/forms.jsx","shop/orders/forms.jsx","shop/orders/UpdateView.jsx"],"names":["productServices","prodSlug","this","patchPath","path","unpublish","values","postPath","attrSlug","oldValues","deletePath","StaffService","SupplierData","product","className","supplier_name","supplier_item_id","supplier_item_category","supplier_item_cost","supplier_item_cost_currency","href","supplier_item_url","target","rel","ProductImageUploadButton","props","slug","multiple","onCreate","imgsArray","filter","img","patch","images","map","then","data","onCreateSuccess","catch","err","onCreateError","ProductImageAltTextInput","image","form","useForm","alt_text","imgSlug","setValues","useEffect","value","required","onSuccess","onError","placeholder","ProductQuickUpdateForm","setProduct","toast","categories","productSlug","ProductForm","context","onSubmit","e","preventDefault","fD","retail_price","is_on_sale","is_pre_sale","category","sale_price","is_pre_sale_text","success","message","error","handleError","Section","title","actions","is_published","page","pill","ProductNameInput","errors","name","ProductCategoryInput","ProductRetailPriceInput","ProductPresaleCheckboxInput","ProductPresaleTextInput","ProductOnSaleCheckboxInput","ProductSalePriceInput","Submit","cover","cover_data","imgData","onUpdate","onDelete","showLabel","label","input","rest","Label","TextInput","maxLength","SelectInput","nullValue","items","cat","Option","key","id","type","min","step","CheckboxInput","TextAreaX","children","fields","forEach","field","NameInput","CategoryInput","RetailPriceInput","PresaleCheckboxInput","PresaleTextInput","OnSaleCheckboxInput","SalePriceInput","StageSelect","stages","stage","SupplierProductAddForm","order_slug","useState","isLoading","setLoading","url","includes","supOrderServices","getSheinProductData","setValue","setErrors","disabled","formDefault","order_id","items_stage","currency","is_paid","total_cost","SupplierOrderStaffUpdateView","sOrderSlug","match","params","order","setOrder","selected","setSelected","useContext","ToastCtx","detail","response","status","console","log","handleSubmit","Array","isArray","val","back","newOrder","item","isSelected","checked","onChange","i","style","position","top","text","OrderItem","isEdit","setEdit","short","category_data","add_to_cart_count","onClick","SHOP_PATHS","productUpdate"],"mappings":"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","file":"static/js/6.98ab648a.chunk.js","sourcesContent":["import { StaffService } from '@miq/utils';\n\nclass StaffProductService extends StaffService {\n  publish(prodSlug) {\n    return this.patchPath(`${this.path}${prodSlug}/publish/`, {});\n  }\n\n  unpublish(prodSlug) {\n    return this.patchPath(`${this.path}${prodSlug}/publish/`, { unpublish: true });\n  }\n\n  // ATTR\n\n  postAttribute(prodSlug, values) {\n    return this.postPath(`${this.path}${prodSlug}/attribute/new/`, values);\n  }\n\n  patchAttribute(prodSlug, attrSlug, values, oldValues) {\n    return this.patchPath(`${this.path}${prodSlug}/attribute/${attrSlug}/`, values, oldValues);\n  }\n\n  deleteAttribute(prodSlug, attrSlug) {\n    return this.deletePath(`${this.path}${prodSlug}/attribute/${attrSlug}/`);\n  }\n\n  // PAGE\n\n  patchPage(prodSlug, values, oldValues) {\n    return this.patchPath(`${this.path}${prodSlug}/page/`, values, oldValues);\n  }\n}\n\nexport const productServices = new StaffProductService('products/');\n","export const SupplierData = ({ product, ...props }) => {\n  if (!product) return null;\n\n  return (\n    <div className=\"product-supplier-data\">\n      <ul>\n        <li>\n          <span className=\"\">Supplier</span>\n          <span className=\"\">{product.supplier_name}</span>\n        </li>\n        <li>\n          <span className=\"\">Item id</span>\n          <span className=\"\">{product.supplier_item_id}</span>\n        </li>\n        <li>\n          <span className=\"\">Category</span>\n          <span className=\"\">{product.supplier_item_category}</span>\n        </li>\n\n        <li>\n          <span className=\"\">Item cost</span>\n          <span className=\"\">\n            {product.supplier_item_cost} ({product.supplier_item_cost_currency})\n          </span>\n        </li>\n        <li>\n          <a href={product.supplier_item_url} className=\"text-underline\" target=\"_blank\" rel=\"noopener noreferrer\">\n            View supplier page\n          </a>\n        </li>\n      </ul>\n    </div>\n  );\n};\n","import React, { useEffect } from 'react';\nimport PropTypes from 'prop-types';\n\nimport Form, { useForm, FormProvider } from '@miq/form';\nimport { ImageAltTextInput } from '@miq/adminjs';\nimport { ImgUploadButton } from '@miq/components';\nimport { productServices } from './utils';\n\n//\n// ========================= FORM COMPONENTS ===================================================================\n//\n\nexport const ProductImageUploadButton = ({ product, ...props }) => {\n  if (!product || !product.slug) return null;\n\n  return (\n    <ImgUploadButton\n      multiple={true}\n      className=\"btn-primary-3\"\n      onCreate={(imgsArray) => {\n        imgsArray = imgsArray.filter((img) => img && img.slug);\n        return productServices\n          .patch(product.slug, { images: [...product.images, ...imgsArray.map((img) => img.slug)] })\n          .then((data) => {\n            if (props.onCreateSuccess) props.onCreateSuccess(data);\n          })\n          .catch((err) => {\n            if (props.onCreateError) props.onCreateError(err);\n          });\n      }}\n    />\n  );\n};\n\nexport const ProductImageAltTextInput = ({ image, ...props }) => {\n  const form = useForm({ alt_text: image?.alt_text || '' });\n\n  const imgSlug = image?.slug;\n  const alt_text = image?.alt_text;\n  const setValues = form.setValues;\n\n  useEffect(() => {\n    setValues({ alt_text });\n  }, [imgSlug, setValues, alt_text]);\n\n  if (!image || !image.slug) return null;\n\n  return (\n    <FormProvider value={form} className={props.className}>\n      <ImageAltTextInput\n        required\n        image={image}\n        onSuccess={props.onSuccess}\n        onError={props.onError}\n        placeholder=\"Add an alternative text ...\"\n      />\n    </FormProvider>\n  );\n};\n\nProductImageAltTextInput.propTypes = {\n  image: PropTypes.shape({\n    slug: PropTypes.string.isRequired,\n  }),\n\n  onUpdate: PropTypes.func,\n  onError: PropTypes.func,\n};\n\nexport const ProductCoverUploadButton = ({ children, product, ...props }) => {\n  if (!product || !product.slug) return null;\n\n  const handleCoverCreate = ({ slug }) => {\n    productServices\n      .patch(product.slug, { cover: slug })\n      .then((data) => {\n        if (props.onCreateSuccess) props.onCreateSuccess(data);\n      })\n      .catch((err) => {\n        if (props.onCreateError) props.onCreateError(err);\n      });\n  };\n  const handleCoverUpdate = (imgData) => {\n    if (props.onUpdateSuccess) props.onUpdateSuccess(imgData);\n  };\n\n  return (\n    <ImgUploadButton\n      slug={product.cover_data ? product.cover_data.slug : null}\n      onCreate={handleCoverCreate}\n      onUpdate={handleCoverUpdate}\n      className=\"product-cover-upload-button\"\n    >\n      {children}\n    </ImgUploadButton>\n  );\n};\n\nProductCoverUploadButton.propTypes = {\n  children: PropTypes.any.isRequired,\n  product: PropTypes.shape({ slug: PropTypes.string.isRequired }).isRequired,\n  onCreateSuccess: PropTypes.func,\n  onCreateError: PropTypes.func,\n  onUpdateSuccess: PropTypes.func,\n  onUpdateError: PropTypes.func,\n};\n","import { useEffect } from 'react';\nimport { AdminView, StaffCoverUpdateForm, PublishedStatusSpan } from '@miq/adminjs';\nimport Form from '@miq/form';\nimport { productServices } from './utils';\nimport { ProductImageAltTextInput } from './components';\n\nexport function ProductQuickUpdateForm({ form, product, ...props }) {\n  const { setProduct, toast, categories } = props;\n  const productSlug = product?.slug;\n\n  useEffect(() => {}, [productSlug]);\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    const fD = {\n      retail_price: form.values.retail_price,\n      is_on_sale: form.values.is_on_sale,\n      is_pre_sale: form.values.is_pre_sale,\n    };\n\n    if (form.values.category) fD.category = form.values.category;\n    if (form.values.is_on_sale) fD.sale_price = form.values.sale_price;\n\n    if (form.values.is_pre_sale) fD.is_pre_sale_text = form.values.is_pre_sale_text;\n\n    return productServices\n      .patch(product.slug, fD)\n      .then((data) => {\n        setProduct?.({ ...product, ...data });\n        toast?.success({ message: 'Product updated.' });\n      })\n      .catch((err) => {\n        toast?.error({ message: 'Could not update product.' });\n        return form.handleError(err);\n      });\n  };\n\n  return (\n    <ProductForm context={form} onSubmit={handleSubmit}>\n      <div className=\"d-grid grid-md-3 gap-3\">\n        <div className=\"span-md-2\">\n          <AdminView.Section\n            title=\"Details\"\n            actions={<PublishedStatusSpan is_published={product?.page?.is_published} pill />}\n          >\n            <div className=\"mb-1\">\n              <ProductNameInput error={form.errors.name} />\n            </div>\n\n            {categories && (\n              <div className=\"mb-1\">\n                <ProductCategoryInput categories={categories} error={form?.errors?.category} />\n              </div>\n            )}\n\n            <div className=\"mb-1\">\n              <div className=\"mb-1\">\n                <ProductRetailPriceInput error={form?.errors?.retail_price} />\n              </div>\n\n              {/* PRE SALE */}\n              <div className=\"mb-1\">\n                <div className=\"d-flex align-items-center mb-1\">\n                  <ProductPresaleCheckboxInput error={form?.errors?.is_pre_sale} />\n                </div>\n\n                {form.values.is_pre_sale && (\n                  <div className=\"mb-2\">\n                    <ProductPresaleTextInput error={form?.errors?.is_pre_sale_text} />\n                  </div>\n                )}\n              </div>\n\n              {/* SALE  */}\n              <div className=\"d-flex align-items-center mb-1\">\n                <ProductOnSaleCheckboxInput error={form?.errors?.is_on_sale} />\n              </div>\n\n              {form.values.is_on_sale && (\n                <div className=\"mb-2\">\n                  <ProductSalePriceInput error={form?.errors?.sale_price} />\n                </div>\n              )}\n            </div>\n\n            <div className=\"my-3\">\n              <Form.Submit value=\"Update product\" className=\"btn btn-primary-3\" />\n            </div>\n          </AdminView.Section>\n        </div>\n\n        <div className=\"\">\n          <StaffCoverUpdateForm\n            slug={product?.cover}\n            data={product.cover_data}\n            onCreate={(imgData) => {\n              productServices\n                .patch(product.slug, { cover: imgData.slug })\n                .then((data) => {\n                  setProduct?.({ ...product, ...data });\n                  toast?.success({ message: 'Product cover updated.' });\n                })\n                .catch((err) => {\n                  toast?.error({ message: 'Could not upload cover image.' });\n                });\n            }}\n            onUpdate={(cover_data) => {\n              toast?.success({ message: 'Product cover updated.' });\n              return setProduct?.({ ...product, cover_data });\n            }}\n            onDelete={() => {\n              return setProduct?.({ ...product, cover_data: null, cover: null });\n            }}\n            className=\"mb-1\"\n          />\n          <ProductImageAltTextInput image={product?.cover_data} />\n        </div>\n      </div>\n    </ProductForm>\n  );\n}\n\n// INPUTS\n\nexport const ProductNameInput = (props) => {\n  const { showLabel = true, label = 'Name', ...input } = props;\n  const { placeholder = 'Give a name to the item', ...rest } = input;\n  return (\n    <>\n      {showLabel && <Form.Label value={label} className=\"mb-1\" />}\n      <Form.TextInput {...rest} required name=\"name\" placeholder={placeholder} maxLength={99} />\n    </>\n  );\n};\n\nexport const ProductCategoryInput = (props) => {\n  const { showLabel = true, label = 'Category', ...input } = props;\n  const { categories, ...rest } = input;\n\n  return (\n    <>\n      {showLabel && <Form.Label value={label} />}\n      <Form.SelectInput {...rest} required name=\"category\" nullValue={{ label: 'Select category' }}>\n        {categories?.items?.map((cat) => {\n          return <Form.SelectInput.Option {...cat} key={cat.value} />;\n        })}\n      </Form.SelectInput>\n    </>\n  );\n};\n\nexport const ProductRetailPriceInput = (props) => {\n  const { showLabel = true, label = 'Retail price', ...rest } = props;\n\n  return (\n    <>\n      {showLabel && <Form.Label value={label} id=\"retail_price_label\" />}\n      <Form.TextInput\n        {...rest}\n        required\n        type=\"number\"\n        name=\"retail_price\"\n        aria-describedby=\"retail_price_label\"\n        min=\"0\"\n        step=\"0.01\"\n      />\n    </>\n  );\n};\n\nexport const ProductPresaleCheckboxInput = (props) => {\n  const { showLabel = true, label = 'Pre-sale', ...rest } = props;\n\n  return (\n    <div className=\"d-flex\">\n      <Form.CheckboxInput {...rest} name=\"is_pre_sale\" className=\"me-2\" />\n      <Form.Label value={label} />\n    </div>\n  );\n};\n\nexport const ProductPresaleTextInput = (props) => {\n  return (\n    <>\n      <Form.Label value=\"Pre sale text\" id=\"is_pre_sale_text_label\" className=\"miq-checkbox-label\" />\n      <Form.TextAreaX name=\"is_pre_sale_text\" aria-describedby=\"is_pre_sale_text_label\" />\n    </>\n  );\n};\n\nexport const ProductOnSaleCheckboxInput = (props) => {\n  const { showLabel = true, label = 'On Sale', ...rest } = props;\n\n  return (\n    <div className=\"d-flex\">\n      <Form.CheckboxInput {...rest} name=\"is_on_sale\" className=\"me-2\" />\n      <Form.Label value={label} />\n    </div>\n  );\n};\n\nexport const ProductSalePriceInput = (props) => {\n  const { showLabel = true, label = 'Sale price', ...rest } = props;\n  return (\n    <>\n      {showLabel && <Form.Label value={label} id=\"sale_price_label\" className=\"miq-checkbox-label\" />}\n      <Form.TextInput\n        {...rest}\n        required\n        type=\"number\"\n        name=\"sale_price\"\n        aria-describedby=\"sale_price_label\"\n        min=\"0\"\n        step=\"0.01\"\n      />\n    </>\n  );\n};\n\nexport const ProductStageSelect = (props) => {\n  const { showLabel = true, label = 'Stage', ...input } = props;\n  const { stages, name, ...rest } = input;\n\n  return (\n    <>\n      {showLabel && <Form.Label value={label} />}\n      <Form.SelectInput {...rest} required name={name || 'stage'} nullValue={{ label: 'Select stage' }}>\n        {stages?.map?.((stage) => {\n          return <Form.SelectInput.Option {...stage} key={stage.value} />;\n        })}\n      </Form.SelectInput>\n    </>\n  );\n};\n\nexport const ProductForm = ({ children, context, fields = [], prodSlug, ...props }) => {\n  const { onSuccess, onError, ...rest } = props;\n\n  const handleSubmit = (e) => {\n    if (!context || !fields) return;\n\n    e.preventDefault();\n    const fD = {\n      // name: context.values.name,\n      // retail_price: form.values.retail_price,\n      // is_on_sale: form.values.is_on_sale,\n      // is_pre_sale: form.values.is_pre_sale,\n    };\n\n    fields.forEach((field) => {\n      const value = context.values[field];\n      if (value == null) return;\n      fD[field] = value;\n    });\n\n    // if (form.values.category) fD.category = form.values.category;\n    // if (form.values.is_on_sale) fD.sale_price = form.values.sale_price;\n\n    // if (form.values.is_pre_sale) fD.is_pre_sale_text = form.values.is_pre_sale_text;\n    if (!prodSlug) return;\n\n    return productServices\n      .patch(prodSlug, fD)\n      .then((data) => {\n        props?.onSuccess?.(data);\n      })\n      .catch((err) => {\n        if (props.onError) return props?.onError?.(err);\n\n        return context?.handleError?.(err);\n      });\n  };\n  return (\n    <Form {...rest} context={context} onSubmit={props.onSubmit || handleSubmit}>\n      {children}\n    </Form>\n  );\n};\n\nProductForm.NameInput = ProductNameInput;\nProductForm.CategoryInput = ProductCategoryInput;\nProductForm.RetailPriceInput = ProductRetailPriceInput;\nProductForm.PresaleCheckboxInput = ProductPresaleCheckboxInput;\nProductForm.PresaleTextInput = ProductPresaleTextInput;\nProductForm.OnSaleCheckboxInput = ProductOnSaleCheckboxInput;\nProductForm.SalePriceInput = ProductSalePriceInput;\nProductForm.StageSelect = ProductStageSelect;\n","import { useState } from 'react';\n\nimport { AdminView } from '@miq/adminjs';\nimport Form, { useForm } from '@miq/form';\nimport { supOrderServices } from './utils';\n\nexport const SupplierProductAddForm = ({ order_slug, ...props }) => {\n  const [isLoading, setLoading] = useState(false);\n\n  const form = useForm({\n    supplier_name: 'shein',\n    url: 'https://us.shein.com/Floral-Lace-Underwire-Garter-Lingerie-Set-p-1925944-cat-1862.html',\n  });\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n\n    setLoading(true);\n\n    const { url } = form.values;\n\n    switch (form.values.supplier_name) {\n      case 'zara':\n        return null;\n\n      default:\n        if (!url.includes('shein')) return null;\n        return supOrderServices\n          .getSheinProductData(order_slug, { url })\n          .then((data) => {\n            setLoading(false);\n            form.setValue('url', '');\n            return props?.onSuccess(data);\n          })\n          .catch((err) => {\n            form.setErrors({ ...form.errors, url: 'Something went wrong.' });\n            setLoading(false);\n            return props?.onError(data);\n          });\n    }\n  };\n\n  return (\n    <AdminView.Section title={props?.title || 'Ajouter un produit'} className=\"supplier-product-add-section mt-3\">\n      <Form context={form} onSubmit={handleSubmit} className=\"supplier-product-add-form\">\n        {isLoading && <div className=\"my-3\">Getting product data. Please wait ...</div>}\n\n        <div className=\"d-flex flex-column flex-md-row\">\n          <Form.TextInput\n            required\n            name=\"url\"\n            type=\"url\"\n            error={form.errors.url}\n            placeholder=\"Add product source url ...\"\n            className=\"me-1\"\n            disabled={isLoading}\n          />\n\n          <Form.Submit value=\"Get data\" className=\"btn btn-primary-3\" disabled={isLoading} />\n        </div>\n      </Form>\n    </AdminView.Section>\n  );\n};\n\n// props.productForm.setValues({\n//   name: data.name || '',\n//   description: data.description || '',\n//   category: data.category || '',\n//   retail_price: data?.retail_price || 0.0,\n//   is_pre_sale: data.is_pre_sale || false,\n//   is_pre_sale_text: data.is_pre_sale_text || '',\n//   is_on_sale: data.is_on_sale || false,\n//   sale_price: data?.sale_price || 0.0,\n// });\n// props.setProduct(data);\n","import { useContext, useEffect, useState } from 'react';\nimport { Link } from 'react-router-dom';\n\nimport { AdminView, PublishedStatusSpan } from '@miq/adminjs';\nimport Form, { useForm } from '@miq/form';\nimport { ToastCtx } from '@miq/components';\nimport { addForwardSlash } from '@miq/utils';\nimport { Table, ItemTable, ImgSquare, Loading, Button } from '@miq/components';\n\nimport { supOrderServices } from './utils';\nimport { SupplierProductAddForm } from './forms';\nimport { ProductForm } from '../product/forms';\nimport { SupplierData } from './components';\nimport { SHOP_PATHS } from '../constants';\n\nconst formDefault = {\n  order_id: '',\n  items_stage: '',\n  currency: '',\n  is_paid: false,\n  // is_paid_dt: '',\n  // is_fulfilled_dt: '',\n  total_cost: '',\n};\n\nexport default function SupplierOrderStaffUpdateView(props) {\n  const { sOrderSlug } = props.match.params;\n\n  const [order, setOrder] = useState(null);\n  const [selected, setSelected] = useState([]);\n  const toast = useContext(ToastCtx);\n\n  const form = useForm(formDefault);\n  const { setValues } = form;\n\n  useEffect(() => {\n    supOrderServices\n      .detail(sOrderSlug)\n      .then((data) => {\n        setOrder(data);\n\n        setValues({\n          order_id: data.order_id || '',\n          items_stage: data.items_stage || '',\n          currency: data.currency || '',\n          is_paid: data.is_paid || false,\n          // is_paid_dt: data.is_paid_dt || '',\n          // is_fulfilled_dt: data.is_fulfilled_dt || '',\n          total_cost: data.total_cost || '',\n        });\n      })\n      .catch((err) => {\n        if (err.response) {\n          if (err.response.status === 404) {\n            return;\n          }\n        }\n      });\n  }, [sOrderSlug, setValues]);\n\n  if (!order) return null;\n\n  console.log(order.stages);\n\n  const handleSubmit = (e, fields) => {\n    e.preventDefault();\n\n    let fD = {};\n    if (Array.isArray(fields)) {\n      fields.forEach((field) => {\n        const val = form.values[field];\n        if (val == null) return;\n        fD[field] = val;\n      });\n    } else fD = { ...form.values };\n\n    supOrderServices\n      .patch(sOrderSlug, fD)\n      .then((data) => {})\n      .catch((err) => {\n        form.handleError(err);\n      });\n  };\n\n  return (\n    <AdminView\n      back={props?.back}\n      title=\"Modifier une commande\"\n      actions={<div></div>}\n      className=\"supplier-order-update-view\"\n    >\n      <div className=\"d-grid grid-md-3 gap-3\">\n        <div className=\"span-md-2\">\n          <SupplierProductAddForm\n            order_slug={sOrderSlug}\n            onSuccess={(newOrder) => {\n              return setOrder(newOrder);\n            }}\n          />\n\n          <AdminView.Section className=\"order-items mb-3\">\n            {order.items.map((item) => {\n              const isSelected = selected.includes(item.slug);\n              return (\n                <div className=\"\" key={item.slug}>\n                  <div className=\"\">\n                    <input\n                      type={'checkbox'}\n                      checked={isSelected}\n                      onChange={() => {\n                        if (isSelected) setSelected(selected.filter((i) => i !== item.slug));\n                        else setSelected([...selected, item.slug]);\n                      }}\n                    />\n                  </div>\n\n                  <OrderItem\n                    item={item}\n                    categories={order.categories}\n                    onUpdate={(data) => {\n                      setOrder({\n                        ...order,\n                        items: order.items.map((i) => {\n                          if (i.slug === data.slug) return data;\n                          return i;\n                        }),\n                      });\n                    }}\n                  />\n                </div>\n              );\n            })}\n          </AdminView.Section>\n        </div>\n\n        <div className=\"\">\n          <div className=\"\" style={{ position: 'sticky', top: 0 }}>\n            <Form context={form} onSubmit={handleSubmit} className=\"order-update-form\">\n              <AdminView.Section title=\"Order details\">\n                <div className=\"mb-1\">\n                  <Form.Label value=\"Order Id\" className=\"mb-1\" />\n                  <Form.TextInput\n                    required\n                    name=\"order_id\"\n                    error={form.errors.order_id}\n                    placeholder=\"Order iD\"\n                    maxLength={99}\n                  />\n                </div>\n                <div className=\"d-flex align-items-center mb-1\">\n                  <Form.CheckboxInput name=\"is_paid\" error={form.errors.is_paid} className=\"me-2\" />\n                  <Form.Label value=\"Paid\" />\n                </div>\n                {form.values.is_paid && (\n                  <div className=\"mb-1\">\n                    <Form.Label value=\"Total cost\" id=\"total_cost_label\" />\n                    <Form.TextInput\n                      required\n                      type=\"number\"\n                      name=\"retailtotal_cost_price\"\n                      error={form.errors.total_cost}\n                      aria-describedby=\"total_cost_label\"\n                      min=\"0\"\n                      step=\"0.01\"\n                    />\n                  </div>\n                )}\n                <div className=\"\">\n                  <Form.Submit value=\"Save\" className=\"btn btn-primary-3\" />\n                </div>\n              </AdminView.Section>\n            </Form>\n\n            <Form context={form} onSubmit={(e) => handleSubmit(e, ['items_stage'])} className=\"order-update-form\">\n              <AdminView.Section title=\"Stage\" text=\"This will update the stage of all products in this order.\">\n                <ProductForm.StageSelect\n                  name=\"items_stage\"\n                  stages={order?.stages}\n                  error={form.errors.items_stage}\n                  showLabel={false}\n                  className=\"mb-1\"\n                />\n\n                <div className=\"\">\n                  <Form.Submit value=\"Save\" className=\"btn btn-primary-2\" />\n                </div>\n              </AdminView.Section>\n            </Form>\n          </div>\n        </div>\n      </div>\n    </AdminView>\n  );\n}\n\nconst OrderItem = ({ item, ...props }) => {\n  const [isEdit, setEdit] = useState(props.isEdit || false);\n  const form = useForm({\n    name: item.name || '',\n    category: item.category || '',\n    retail_price: item?.retail_price || 0.0,\n    supplier_item_cost: item?.supplier_item_cost || 0.0,\n    is_pre_sale: item.is_pre_sale || false,\n    is_pre_sale_text: item.is_pre_sale_text || '',\n  });\n  if (!item?.slug) return null;\n\n  const { values, errors } = form;\n  return (\n    <div className=\"order-item mb-2 border-1 rounded \">\n      <div className=\"d-flex p-1\">\n        <div className=\"me-1\">\n          <ImgSquare {...item.cover_data} className=\"rounded\" />\n        </div>\n\n        <div className=\"flex-1 detail\">\n          <div className=\"fw-bold\" title={item.name}>\n            <span className=\"me-2\">{item.name}</span>\n            {item?.page?.is_published && <PublishedStatusSpan is_published={item?.page?.is_published} pill short />}\n          </div>\n          <div className=\"\">\n            {item.is_on_sale ? (\n              <span className=\"text-danger\">{item.sale_price}</span>\n            ) : (\n              <span className=\"\">{item.retail_price}</span>\n            )}\n          </div>\n\n          <div className=\"mb-1 text-sm\">\n            {item.category_data && <span className=\"\">{item.category_data.name}</span>}\n            {item.is_pre_sale && <span className=\"\">Pre sale</span>}/ {item.add_to_cart_count}\n          </div>\n\n          <div className=\"actions d-flex justify-content-between align-items-center\">\n            <div>\n              <Button onClick={() => setEdit(!isEdit)} className=\"quick-update-btn btn-secondary-3\">\n                {`Quick update`}\n              </Button>\n            </div>\n\n            <a href={SHOP_PATHS.productUpdate(item.slug)} target=\"_blank\" className=\"update-btn btn btn-primary-2\">\n              {`Update »`}\n            </a>\n          </div>\n        </div>\n      </div>\n\n      {isEdit && (\n        <ProductForm\n          context={form}\n          prodSlug={item.slug}\n          fields={['name', 'category', 'retail_price', 'is_pre_sale', 'is_pre_sale_text', 'supplier_item_cost']}\n          className=\"order-item-form mb-2\"\n          onSuccess={props.onUpdate}\n        >\n          <div className=\"d-grid grid-md-5 gap-2\">\n            <div className=\"span-md-3 mb-2\">\n              <ProductForm.NameInput error={errors.name} className=\"mb-1\" />\n              <ProductForm.CategoryInput categories={props?.categories} error={errors.category} className=\"mb-1\" />\n              <ProductForm.RetailPriceInput error={errors.retail_price} className=\"mb-1\" />\n\n              <Form.Label value={`Supplier item cost (${item.supplier_item_cost_currency})`} />\n              <Form.TextInput name=\"supplier_item_cost\" className=\"\" />\n            </div>\n\n            <div className=\"span-md-2\">\n              <div className=\"mb-3\">\n                <div className=\"mb-1\">\n                  <ProductForm.PresaleCheckboxInput error={errors.is_pre_sale} className=\"mb-1\" />\n                </div>\n\n                {form.values.is_pre_sale && (\n                  <div className=\"mb-1\">\n                    <ProductForm.PresaleTextInput error={errors.is_pre_sale_text} />\n                  </div>\n                )}\n\n                <Form.Submit value=\"Update\" className=\"btn btn-primary-3 w-100\" />\n              </div>\n              <SupplierData product={item} />\n            </div>\n          </div>\n        </ProductForm>\n      )}\n    </div>\n  );\n};\n"],"sourceRoot":""}
{"version":3,"sources":["shop/public/components.jsx","exports.jsx","shop/orders/components.jsx","shop/product/components.jsx","shop/product/forms.jsx","shop/product/Attribute.jsx","shop/product/UpdateView/ProductList.jsx","shop/product/UpdateView/index.jsx"],"names":["ProductPriceDisplay","product","retail_price","sale_price","is_on_sale","className","amountWithSymbol","ProductAttributeList","attributes","map","attr","name","value","CategoryLinks","props","ctx","useContext","SharedDataCtx","isLoaded","categories","cat","href","url","title","showCover","cover","src_mobile","thumb_sq","name_truncated","slug","SearchForm","search","location","push","useRef","debounce","history","query","URLSearchParams","action","required","initialValue","get","onChange","e","target","length","delete","set","current","path","URL","window","pathname","placeholder","minLength","maxLength","BreadCrumbs","breadcrumbs","role","item","label","SupplierData","supplier_name","supplier_item_id","supplier_item_category","supplier_item_cost","supplier_item_cost_currency","supplier_item_url","rel","ProductImageAltTextInput","image","alt_text","form","useForm","imgSlug","setValues","useEffect","onSuccess","onError","StaffProductDeleteButton","prodSlug","id","onClick","productServices","then","catch","err","StaffProductPublishButton","toast","page","is_published","onPublishSuccess","onUnpublishSuccess","unpublish","data","error","message","SHOP_MSGS","default","publish","response","category","publish_error_retail_price","handleError","publish_error_category","publish_error_page","getClassName","ProductImageUploadButton","multiple","onCreate","imgsArray","filter","img","patch","images","onCreateSuccess","onCreateError","isRequired","ProductNameInput","showLabel","input","rest","Label","TextInput","ProductCategoryInput","SelectInput","nullValue","items","Option","key","ProductRetailPriceInput","type","min","step","ProductPresaleCheckboxInput","CheckboxInput","ProductPresaleTextInput","TextAreaX","ProductOnSaleCheckboxInput","ProductSalePriceInput","ProductForm","children","context","fields","onWillSubmit","onSubmit","preventDefault","fD","forEach","field","values","NameInput","DescField","text","Field","CategoryInput","RetailPriceInput","PresaleCheckboxInput","PresaleTextInput","OnSaleCheckboxInput","SalePriceInput","StageSelect","stages","stage","AttributeUpdateForm","instance","patchAttribute","style","alignItems","AttrNameInput","errors","AttrValueInput","Icon","Icons","Trash","render","args","deleteAttribute","setOpen","renderHeader","Submit","AttributeCreateForm","initValues","postAttribute","ProductListItemCard","cover_data","pill","short","retail_price_data","sale_price_data","ProductListCard","state","loading","results","prod","ProductUpdateStaffView","useState","setState","match","params","pFormInitial","console","log","detail","mapProductDataToForm","ToastCtx","tab","sharedProps","setProduct","setError","prev_slug","next_slug","LABELS","viewTitle","viewText","actions","to","SHOP_PATHS","productUpdate","CN","view","back","QState","setQState","ViewTabs","success","update_success","footer","bottom","name_field_text","none","is_pre_sale","is_pre_sale_text","desc_field_text","description","top","publish_success","unpublish_success","MediaViewTab","Section","gap","imgData","cover_create_success","cover_update_error","onUpdate","cover_update_success","onDelete","cover_delete_success","images_data","swapCover","i","bodyClassName","InventoryViewTab","addAtr","setAddAtr","Attribute","productData","pData","SettingsViewTab","delete_success","productList","delete_error","ProductSEOForm","slug_public","patchPage","page_update_success","page_update_error","QueryButton","pushQuery","viewCn"],"mappings":"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","file":"static/js/4.6090b430.chunk.js","sourcesContent":["import ReactDOM from 'react-dom';\nimport { useContext, useEffect, useRef, useState } from 'react';\n\nimport { SharedDataCtx } from '@miq/contexts';\n// import Form, { useForm } from \"@miq/form\";\nimport { Img, Picture, SearchTextInput } from '@miq/components';\nimport { IS_DEV } from '@miq/utils';\nimport debounce from 'lodash.debounce';\n\n/**\n * PRODUCT\n */\n\nexport const ProductPriceDisplay = ({ product }) => {\n  if (!product || !product.retail_price) return null;\n\n  const { retail_price, sale_price } = product;\n\n  if (product.is_on_sale && sale_price != null) {\n    return (\n      <div className=\"product-price-display d-flex align-items-center\">\n        <div className=\"text-danger fw-bold me-2\">{sale_price.amountWithSymbol}</div>\n        <div className=\"text-line-through\">{retail_price.amountWithSymbol}</div>\n      </div>\n    );\n  }\n  return (\n    <div className=\"product-price-display d-flex align-items-center\">\n      <div className=\"fw-bold\">{retail_price.amountWithSymbol}</div>\n    </div>\n  );\n};\n\nexport const ProductAttributeList = ({ product }) => {\n  const { attributes = [] } = product || {};\n\n  if (!attributes) return null;\n\n  return (\n    <ul className=\"product-attr-list\">\n      {attributes?.map((attr) => {\n        return (\n          <li className=\"attr\" key={attr.name}>\n            <span className=\"attr-label\">{attr.name} : </span>\n            <span className=\"attr-value\">{attr.value}</span>\n          </li>\n        );\n      })}\n    </ul>\n  );\n};\n\n/**\n * CATEGORY\n */\n\nexport const CategoryLinks = (props) => {\n  const ctx = useContext(SharedDataCtx);\n\n  if (!ctx.isLoaded || !ctx.categories) return null;\n\n  // console.log(ctx.categories);\n\n  return (\n    <div className=\"category-links pb-2\">\n      {ctx.categories?.map((cat) => {\n        return (\n          <div className=\"item w-25 w-md-15\" key={cat.slug}>\n            <a href={cat.url} className=\"\" title={cat.name}>\n              {props.showCover && cat?.cover && (\n                <Picture {...cat.cover} src_mobile={cat?.cover?.thumb_sq || cat?.cover?.src_mobile} />\n              )}\n              <div className=\"info\">{cat.name_truncated}</div>\n            </a>\n          </div>\n        );\n      })}\n    </div>\n  );\n};\n\nexport function SearchForm(props) {\n  const { search } = props.location;\n\n  const push = useRef(debounce((url) => props?.history?.push(url), 300));\n\n  const query = new URLSearchParams(search);\n  const handleSearch = ({ e }) => {\n    const { value } = e.target;\n\n    if (!value || value.length < 3) {\n      query.delete('q');\n    } else {\n      query.set('q', e.target.value);\n    }\n\n    if (!push.current) return;\n\n    const path = new URL(window.location.href);\n    push.current(`${path.pathname}?${query}`);\n  };\n\n  return (\n    <form action=\"/shop/\" className=\"product-search-form\">\n      <SearchTextInput\n        required\n        initialValue={query.get('q')}\n        onChange={handleSearch}\n        className=\"search-input\"\n        placeholder={'Cherchez un produit ...'}\n        minLength={3}\n        maxLength={99}\n      />\n    </form>\n  );\n}\n\nexport const BreadCrumbs = (props) => {\n  const { isLoaded, breadcrumbs } = useContext(SharedDataCtx);\n\n  if (!isLoaded || !breadcrumbs) {\n    return null;\n  }\n\n  return (\n    <section className=\"miq-breadcrumbs\" role={'navigation'} aria-label=\"breadcrumbs\">\n      {breadcrumbs.map((item) => {\n        return (\n          <a href={item.path} className=\"item\" key={item.label} title={item.title} aria-label={item.title}>\n            {item.label}\n          </a>\n        );\n      })}\n    </section>\n  );\n};\n\n//\n// NOT USED\nexport const ProductDetailImages = ({ product, ...props }) => {\n  const { images = [], cover } = product;\n  const [active, setActive] = useState(cover);\n\n  const [root, setRoot] = useState(null);\n\n  useEffect(() => {\n    if (IS_DEV) return;\n\n    const el = document.getElementById('product-detail-images');\n    if (el) setRoot(el);\n  }, [setRoot]);\n\n  if (!product) return null;\n\n  const render = (\n    <div className=\"product-images d-flex flex-column-reverse flex-sm-row\">\n      <div className=\"thumbnails d-flex flex-row flex-sm-column me-1\">\n        <Img src={cover.thumb} className=\"mb-1\" onClick={() => setActive(cover)} />\n\n        {images.map((img) => (\n          <Img src={img.thumb} onClick={() => setActive(img)} className=\"mb-1\" key={img.src} />\n        ))}\n      </div>\n\n      <div className=\"\">\n        <Img src={active.src} />\n      </div>\n    </div>\n  );\n\n  return IS_DEV ? render : root ? ReactDOM.createPortal(render, root) : null;\n};\n","export { ImageAltTextInput, PublishedStatusSpan } from '@miq/adminjs';\n\nexport { Button, ImgUploadButton, ImgSquare, Loading, Card } from '@miq/components';\n\nexport { getClassName } from '@miq/utils';\n\nexport { default as Form } from '@miq/form';\nexport { useForm, FormProvider } from '@miq/form';\n","export const SupplierData = ({ product, ...props }) => {\n  if (!product) return null;\n\n  return (\n    <div className=\"product-supplier-data\">\n      <ul>\n        <li>\n          <span className=\"\">Supplier</span>\n          <span className=\"\">{product.supplier_name}</span>\n        </li>\n        <li>\n          <span className=\"\">Item id</span>\n          <span className=\"\">{product.supplier_item_id}</span>\n        </li>\n        <li>\n          <span className=\"\">Category</span>\n          <span className=\"\">{product.supplier_item_category}</span>\n        </li>\n\n        <li>\n          <span className=\"\">Item cost</span>\n          <span className=\"\">\n            {product.supplier_item_cost} ({product.supplier_item_cost_currency})\n          </span>\n        </li>\n        <li>\n          <a href={product.supplier_item_url} className=\"text-underline\" target=\"_blank\" rel=\"noopener noreferrer\">\n            View supplier page\n          </a>\n        </li>\n      </ul>\n    </div>\n  );\n};\n","import React, { useEffect } from 'react';\nimport PropTypes from 'prop-types';\n\nimport { productServices } from './utils';\nimport { useForm, FormProvider, ImgUploadButton, ImageAltTextInput, Button, getClassName } from 'src/exports';\n\n//#region ProductImageAltTextInput\n\nexport const ProductImageAltTextInput = ({ image, ...props }) => {\n  const alt_text = image?.alt_text || '';\n\n  const form = useForm({ alt_text });\n\n  const imgSlug = image?.slug;\n  const setValues = form.setValues;\n\n  useEffect(() => {\n    setValues({ alt_text });\n  }, [imgSlug, setValues, alt_text]);\n\n  if (!image || !image.slug) return null;\n\n  return (\n    <FormProvider value={form} className={props.className}>\n      <ImageAltTextInput\n        required\n        image={image}\n        onSuccess={props.onSuccess}\n        onError={props.onError}\n        placeholder=\"Add an alternative text ...\"\n      />\n    </FormProvider>\n  );\n};\n\nProductImageAltTextInput.propTypes = {\n  image: PropTypes.shape({\n    slug: PropTypes.string.isRequired,\n  }),\n\n  onUpdate: PropTypes.func,\n  onError: PropTypes.func,\n};\n\n//#endregion ProductImageAltTextInput\n\n//#region BUTTONS > >\n\n//#region StaffProductDeleteButton\n\n/**\n * Delete a product\n * Usage:\n * ```js\n * <StaffProductDeleteButton label=\"Delete me!\" prodSlug='123' onSuccess={()=>{}} onError={()=>{}} className=\"btn-danger-3\" />\n * ```\n *\n * @param {Object} props\n * @param {string} props.label\n * @param {string} props.prodSlug\n * @param {Function} props.onSuccess\n * @param {Function} props.onError\n * @param {string=} props.className\n * @param {string=} props.id\n * @augments {Component<Props, State>}\n */\nexport const StaffProductDeleteButton = ({ prodSlug, ...props }) => {\n  if (!prodSlug) return null;\n  const { className = 'btn-danger', label, onSuccess, onError } = props;\n  return (\n    <Button\n      id={props.id}\n      className={className}\n      onClick={() => {\n        return productServices\n          .delete(prodSlug)\n          .then(() => onSuccess?.({ prodSlug }))\n          .catch((err) => onError?.(err));\n      }}\n    >\n      {label || 'Supprimer cet article'}\n    </Button>\n  );\n};\n//#endregion StaffProductDeleteButton\n\n//#region StaffProductPublishButton\n\n/**\n * Button component for publishing a product\n * ```js\n * <StaffProductPublishButton\n *  product={product}\n *  prodSlug='slug'\n *  product={{slug: 'slug', page:{slug:'pageSlug'}}}\n *  onPublishSuccess={(data) => setProduct(data)}\n *  onUnpublishSuccess={(data) => setProduct(data)}\n *  onUnpublishSuccess={(err) => setError(err)}\n * />\n * ```\n * @param {Object} props\n * @param {string} props.prodSlug - slug of the product: required\n * @param {Object} props.product - product object\n * @param {Object} props.form - product form\n * @param {Function} props.onPublishSuccess publish success callback\n * @param {Function} props.onUnpublishSuccess unpublish success callback\n * @param {Function} props.onError\n * @param {Object} props.toast\n * @param {string} props.className\n * @param {string} props.id\n * @augments {Component<Props, State>}\n *\n */\n\nexport function StaffProductPublishButton(props) {\n  const { prodSlug, product, toast, ...rest } = props;\n  if (!prodSlug || !product?.page) return null;\n\n  const { is_published } = product.page;\n  const { form, onPublishSuccess, onUnpublishSuccess, onError } = props;\n\n  const handlePublish = () => {\n    if (is_published)\n      return productServices\n        .unpublish(prodSlug)\n        .then((data) => onUnpublishSuccess?.(data))\n        .catch((err) => {\n          return toast?.error({ message: SHOP_MSGS.default });\n        });\n\n    return productServices\n      .publish(prodSlug)\n      .then((data) => onPublishSuccess?.(data))\n      .catch((err) => {\n        const { response = {} } = err;\n\n        if (!response.data) {\n          toast?.error({ message: SHOP_MSGS.default });\n        }\n        const { retail_price, category, page } = response.data;\n\n        if (retail_price) {\n          toast?.error({ message: SHOP_MSGS.product.publish_error_retail_price });\n        }\n        if (category) {\n          if (form) form.handleError(err);\n          toast?.error({ message: SHOP_MSGS.product.publish_error_category });\n        }\n        if (page) {\n          toast?.error({ message: SHOP_MSGS.product.publish_error_page });\n        }\n        return onError?.(err);\n      });\n  };\n\n  return (\n    <Button\n      id={props.id}\n      onClick={handlePublish}\n      className={getClassName([\n        'staff-product-publish-button',\n        is_published ? 'btn-danger' : 'btn-primary',\n        props.className,\n      ])}\n    >\n      {is_published ? 'Unpublish' : 'Publish'} product\n    </Button>\n  );\n}\n\nStaffProductPublishButton.propTypes = {\n  /** product slug */\n  prodSlug: PropTypes.string.isRequired,\n  /** product data */\n  product: PropTypes.shape({ page: PropTypes.shape({ is_published: PropTypes.bool }).isRequired }).isRequired,\n  /** if props.form: calls form.handleError whenever applicable BEFORE calling props.onError */\n  form: PropTypes.object,\n  onPublishSuccess: PropTypes.func,\n  onUnpublishSuccess: PropTypes.func,\n  onError: PropTypes.func,\n};\n\n//#endregion\n\n//#region ProductImageUploadButton\n\n/**\n * Upload a product image\n * Usage:\n * ```js\n * <ProductImageUploadButton product={{prodData}} />\n * ```\n *\n * @param {Object} props\n * @param {Object} props.product\n * @param {bool} props.multiple\n * @param {Function} props.onCreate\n * @param {Function} props.onCreateSuccess\n * @param {Function} props.onCreateError\n * @augments {ImgUploadButton<Props, State>}\n */\n\nexport const ProductImageUploadButton = ({ product, ...props }) => {\n  if (!product || !product.slug) return null;\n\n  return (\n    <ImgUploadButton\n      multiple={true}\n      className=\"btn-primary-3\"\n      onCreate={(imgsArray) => {\n        imgsArray = imgsArray.filter((img) => img && img.slug);\n        return productServices\n          .patch(product.slug, { images: [...product.images, ...imgsArray.map((img) => img.slug)] })\n          .then((data) => {\n            if (props.onCreateSuccess) props.onCreateSuccess(data);\n          })\n          .catch((err) => {\n            if (props.onCreateError) props.onCreateError(err);\n          });\n      }}\n    />\n  );\n};\n//#endregion ProductImageButton\n\n//#region ProductCoverUploadButton\nexport const ProductCoverUploadButton = ({ children, product, ...props }) => {\n  if (!product || !product.slug) return null;\n\n  const handleCoverCreate = ({ slug }) => {\n    productServices\n      .patch(product.slug, { cover: slug })\n      .then((data) => {\n        if (props.onCreateSuccess) props.onCreateSuccess(data);\n      })\n      .catch((err) => {\n        if (props.onCreateError) props.onCreateError(err);\n      });\n  };\n  const handleCoverUpdate = (imgData) => {\n    if (props.onUpdateSuccess) props.onUpdateSuccess(imgData);\n  };\n\n  return (\n    <ImgUploadButton\n      slug={product.cover_data ? product.cover_data.slug : null}\n      onCreate={handleCoverCreate}\n      onUpdate={handleCoverUpdate}\n      className=\"product-cover-upload-button\"\n    >\n      {children}\n    </ImgUploadButton>\n  );\n};\nProductCoverUploadButton.propTypes = {\n  children: PropTypes.any.isRequired,\n  product: PropTypes.shape({ slug: PropTypes.string.isRequired }).isRequired,\n  onCreateSuccess: PropTypes.func,\n  onCreateError: PropTypes.func,\n  onUpdateSuccess: PropTypes.func,\n  onUpdateError: PropTypes.func,\n};\n//#endregion ProductCoverUploadButton\n\n//#endregion BUTTONS\n","import { useEffect } from 'react';\nimport { AdminView, PublishedStatusSpan } from '@miq/adminjs';\nimport Form from '@miq/form';\nimport { isRequired } from '@miq/utils';\nimport { productServices } from './utils';\nimport { SHOP_MSGS } from '../constants';\n\nconst isR = isRequired;\n\nexport function ProductQuickUpdateForm({ form, product, ...props }) {\n  const { setProduct, toast, categories } = props;\n  const productSlug = product?.slug;\n\n  useEffect(() => {}, [productSlug]);\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    const fD = {\n      name: form.values.name,\n      retail_price: form.values.retail_price,\n      is_on_sale: form.values.is_on_sale,\n      is_pre_sale: form.values.is_pre_sale,\n    };\n\n    if (form.values.category) fD.category = form.values.category;\n    if (form.values.is_on_sale) fD.sale_price = form.values.sale_price;\n\n    if (form.values.is_pre_sale) fD.is_pre_sale_text = form.values.is_pre_sale_text;\n\n    return productServices\n      .patch(product.slug, fD)\n      .then((data) => {\n        setProduct?.({ ...product, ...data });\n        toast?.success({ message: SHOP_MSGS.product.update_success });\n      })\n      .catch((err) => {\n        toast?.error({ message: SHOP_MSGS.product.update_error });\n        return form.handleError(err);\n      });\n  };\n\n  return (\n    <ProductForm context={form} onSubmit={handleSubmit} className=\"quick-product-update-form\">\n      <div className=\"d-grid grid-md-3 gap-3\">\n        <div className=\"span-md-2\">\n          <AdminView.Section\n            title=\"Details\"\n            actions={<PublishedStatusSpan is_published={product?.page?.is_published} pill />}\n          >\n            <div className=\"mb-1\">\n              <ProductNameInput error={form.errors.name} />\n            </div>\n\n            {categories && (\n              <div className=\"mb-1\">\n                <ProductCategoryInput categories={categories} error={form?.errors?.category} />\n              </div>\n            )}\n\n            <div className=\"mb-1\">\n              <div className=\"mb-1\">\n                <ProductRetailPriceInput error={form?.errors?.retail_price} />\n              </div>\n\n              {/* PRE SALE */}\n              <div className=\"mb-1\">\n                <div className=\"d-flex align-items-center mb-1\">\n                  <ProductPresaleCheckboxInput error={form?.errors?.is_pre_sale} />\n                </div>\n\n                {form.values.is_pre_sale && (\n                  <div className=\"mb-2\">\n                    <ProductPresaleTextInput error={form?.errors?.is_pre_sale_text} />\n                  </div>\n                )}\n              </div>\n\n              {/* SALE  */}\n              <div className=\"d-flex align-items-center mb-1\">\n                <ProductOnSaleCheckboxInput error={form?.errors?.is_on_sale} />\n              </div>\n\n              {form.values.is_on_sale && (\n                <div className=\"mb-2\">\n                  <ProductSalePriceInput error={form?.errors?.sale_price} />\n                </div>\n              )}\n            </div>\n\n            <div className=\"my-3\">\n              <Form.Submit value=\"Update product\" className=\"btn btn-primary-3\" />\n            </div>\n          </AdminView.Section>\n        </div>\n      </div>\n    </ProductForm>\n  );\n}\n\n//#region INPUTS\n\nexport const ProductNameInput = (props) => {\n  const { showLabel = false, label = 'Name', ...input } = props;\n  const { placeholder = 'Give a name to the item', ...rest } = input;\n  return (\n    <>\n      {showLabel && <Form.Label value={label} className=\"mb-1\" />}\n      <Form.TextInput {...rest} required name=\"name\" placeholder={placeholder} maxLength={99} />\n    </>\n  );\n};\n\nexport const ProductDescriptionField = (props) => {\n  const { label, text, ...input } = props;\n  const { placeholder = 'Give a description to the item', ...rest } = input;\n  return (\n    <Form.Field {...{ label, text }}>\n      <Form.TextAreaX\n        {...rest}\n        name=\"description\"\n        // error={form.errors.description}\n        placeholder={placeholder}\n      />\n    </Form.Field>\n  );\n};\n\nexport const ProductCategoryInput = (props) => {\n  const { showLabel = false, label = 'Category', ...input } = props;\n  const { categories, ...rest } = input;\n\n  return (\n    <>\n      {showLabel && <Form.Label value={label} />}\n      <Form.SelectInput {...rest} required name=\"category\" nullValue={{ label: 'Sélectionnez une catégorie' }}>\n        {categories?.items?.map((cat) => {\n          return <Form.SelectInput.Option {...cat} key={cat.value} />;\n        })}\n      </Form.SelectInput>\n    </>\n  );\n};\n\nexport const ProductRetailPriceInput = (props) => {\n  const { showLabel = false, label = 'Retail price', ...rest } = props;\n\n  return (\n    <>\n      {showLabel && <Form.Label value={label} id=\"retail_price_label\" />}\n      <Form.TextInput\n        {...rest}\n        required\n        type=\"number\"\n        name=\"retail_price\"\n        aria-describedby=\"retail_price_label\"\n        min=\"0\"\n        step=\"0.01\"\n      />\n    </>\n  );\n};\n\nexport const ProductPresaleCheckboxInput = (props) => {\n  const { showLabel = false, label = 'Pre-sale', ...rest } = props;\n\n  return (\n    <div className=\"d-flex align-items-center\">\n      <Form.CheckboxInput {...rest} name=\"is_pre_sale\" className=\"me-2\" />\n      <Form.Label value={label} />\n    </div>\n  );\n};\n\nexport const ProductPresaleTextInput = (props) => {\n  return (\n    <>\n      <Form.Label value=\"Pre sale text\" id=\"is_pre_sale_text_label\" className=\"miq-checkbox-label\" />\n      <Form.TextAreaX name=\"is_pre_sale_text\" aria-describedby=\"is_pre_sale_text_label\" />\n    </>\n  );\n};\n\nexport const ProductOnSaleCheckboxInput = (props) => {\n  const { showLabel = false, label = 'On Sale', ...rest } = props;\n\n  return (\n    <div className=\"d-flex align-items-center\">\n      <Form.CheckboxInput {...rest} name=\"is_on_sale\" className=\"me-2\" />\n      <Form.Label value={label} />\n    </div>\n  );\n};\n\nexport const ProductSalePriceInput = (props) => {\n  const { showLabel = false, label = 'Sale price', ...rest } = props;\n  return (\n    <>\n      {showLabel && <Form.Label value={label} id=\"sale_price_label\" className=\"miq-checkbox-label\" />}\n      <Form.TextInput\n        {...rest}\n        required\n        type=\"number\"\n        name=\"sale_price\"\n        aria-describedby=\"sale_price_label\"\n        min=\"0\"\n        step=\"0.01\"\n      />\n    </>\n  );\n};\n\nexport const ProductStageSelect = (props) => {\n  const { showLabel = false, label = 'Stage', ...input } = props;\n  const { stages, name, ...rest } = input;\n\n  return (\n    <>\n      {showLabel && <Form.Label value={label} />}\n      <Form.SelectInput {...rest} required name={name || 'stage'} nullValue={{ label: 'Select stage' }}>\n        {stages?.map?.((stage) => {\n          return <Form.SelectInput.Option {...stage} key={stage.value} />;\n        })}\n      </Form.SelectInput>\n    </>\n  );\n};\n\n//#endregion INPUTS\n\n//#region FORMS\n\nexport const ProductForm = ({ children, context, fields = [], prodSlug, ...props }) => {\n  const { onWillSubmit, onSuccess, onError, ...rest } = props;\n\n  const handleSubmit = (e) => {\n    if (!context || !fields) return;\n\n    onWillSubmit?.();\n\n    e.preventDefault();\n    const fD = {\n      // name: context.values.name,\n      // retail_price: form.values.retail_price,\n      // is_on_sale: form.values.is_on_sale,\n      // is_pre_sale: form.values.is_pre_sale,\n    };\n\n    fields.forEach((field) => {\n      const value = context.values[field];\n      if (value == null) return;\n      fD[field] = value;\n    });\n\n    // if (form.values.category) fD.category = form.values.category;\n    // if (form.values.is_on_sale) fD.sale_price = form.values.sale_price;\n\n    // if (form.values.is_pre_sale) fD.is_pre_sale_text = form.values.is_pre_sale_text;\n    if (!prodSlug) return;\n\n    return productServices\n      .patch(prodSlug, fD)\n      .then((data) => {\n        props?.onSuccess?.(data);\n      })\n      .catch((err) => {\n        if (props.onError) return props.onError(err);\n        return context.handleError(err);\n      });\n  };\n  return (\n    <Form {...rest} context={context} onSubmit={props.onSubmit || handleSubmit}>\n      {children}\n    </Form>\n  );\n};\n\nProductForm.NameInput = ProductNameInput;\nProductForm.DescField = ProductDescriptionField;\nProductForm.CategoryInput = ProductCategoryInput;\nProductForm.RetailPriceInput = ProductRetailPriceInput;\nProductForm.PresaleCheckboxInput = ProductPresaleCheckboxInput;\nProductForm.PresaleTextInput = ProductPresaleTextInput;\nProductForm.OnSaleCheckboxInput = ProductOnSaleCheckboxInput;\nProductForm.SalePriceInput = ProductSalePriceInput;\nProductForm.StageSelect = ProductStageSelect;\n\n//#endregion\n","import { IBtnSave, ConfirmIconButton, Icons, Button } from '@miq/components';\n\nimport Form, { useForm } from '@miq/form';\nimport { productServices } from './utils';\n\n//#region FORMS\n\nexport const AttributeUpdateForm = ({ instance, product, ...props }) => {\n  const form = useForm({ name: instance?.name || '', value: instance?.value || '' });\n\n  if (!instance || !instance.slug || !product || !product.slug) return null;\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n\n    return productServices\n      .patchAttribute(product.slug, instance.slug, form.values)\n      .then((data) => {\n        return props?.onSuccess(data);\n      })\n      .catch((err) => {\n        return form.handleError(err);\n      });\n  };\n\n  return (\n    <Form context={form} onSubmit={handleSubmit}>\n      <div className=\"d-flex flex-column flex-md-row\" style={{ alignItems: 'end' }}>\n        <div className=\"me-md-1\">\n          <AttrNameInput error={form.errors.name} />\n        </div>\n\n        <div className=\"w-100 me-md-1\">\n          <AttrValueInput error={form.errors.value} />\n        </div>\n\n        <div className=\"d-flex ms-md-1\">\n          <ConfirmIconButton\n            Icon={Icons.Trash}\n            render={(args) => (\n              <div className=\"p-3 w-100 d-flex justify-content-center\">\n                <div className=\"w-md-50 d-flex align-items-center justify-content-between\">\n                  <div>\n                    <Button\n                      onClick={() =>\n                        productServices\n                          .deleteAttribute(product.slug, instance.slug)\n                          .then((data) => {\n                            args?.setOpen(false);\n                            return props?.onSuccess(data);\n                          })\n                          .catch(() => {\n                            props?.toast?.error({ message: 'Could not delete attribute.' });\n                          })\n                      }\n                      className=\"btn-danger\"\n                    >\n                      Supprimer\n                    </Button>\n                  </div>\n                  <div>\n                    <Button onClick={() => args?.setOpen(false)}>Annuler</Button>\n                  </div>\n                </div>\n              </div>\n            )}\n            renderHeader={(args) => {\n              return (\n                <div className=\"p-3\">\n                  <div className=\"fw-bold\">Supprimer l'attribut \"{instance.name}\"</div>\n                </div>\n              );\n            }}\n            className=\"btn-danger-3 me-1\"\n          />\n          <Form.Submit value=\"Save\" className=\"btn btn-primary-2\" />\n        </div>\n      </div>\n    </Form>\n  );\n};\n\nexport function AttributeCreateForm({ product, ...props }) {\n  const initValues = { name: '', value: '' };\n  const form = useForm(initValues);\n\n  if (!product || !product.slug) return null;\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    // if (form.hasErrors()) return;\n\n    return productServices\n      .postAttribute(product.slug, form.values)\n      .then((data) => {\n        form.setValues(initValues);\n        return props?.onSuccess(data);\n      })\n      .catch((err) => {\n        return form.handleError(err);\n      });\n  };\n\n  // const invalidAttrNames = product?.attributes?.map((at) => at.name) || [];\n\n  return (\n    <Form context={form} onSubmit={handleSubmit}>\n      <div className=\"d-flex flex-column flex-md-row\" style={{ alignItems: 'end' }}>\n        <div className=\"me-md-1\">\n          <Form.Label value=\"Name\" />\n          <AttrNameInput error={form.errors.name} />\n        </div>\n\n        <div className=\"w-100 me-md-1\">\n          <Form.Label value=\"Value\" />\n          <AttrValueInput error={form.errors.value} />\n        </div>\n\n        <div className=\"ms-md-1\">\n          <IBtnSave type=\"submit\" className=\"btn-primary-3\" />\n        </div>\n      </div>\n    </Form>\n  );\n}\n\n//#endregion FORMS\n\n//#region INPUTS\n\nconst AttrNameInput = (props) => (\n  <Form.TextInput placeholder=\"Nom de l'attribut\" {...props} required name=\"name\" maxLength={30} minLength={2} />\n);\n\nconst AttrValueInput = (props) => (\n  <Form.TextInput placeholder=\"Valeur de l'attribut\" {...props} required name=\"value\" maxLength={99} minLength={2} />\n);\n\n//#endregion INPUTS\n","import React from 'react';\n\nimport { ProductPriceDisplay } from 'src/shop/public/components';\nimport { ImgSquare, Loading, PublishedStatusSpan } from 'src/exports';\n\nexport const ProductListItemCard = ({ product = {}, ...props }) => {\n  return (\n    <div className=\"product-list-item-card d-flex\">\n      <div className=\"me-1\">\n        <ImgSquare {...product?.cover_data} className=\"rounded\" />\n      </div>\n\n      <div className=\"flex-1\">\n        <div className=\"d-flex align-items-center\">\n          <span className=\"product-title me-2\">{product.name}</span>\n          <PublishedStatusSpan is_published={product?.page?.is_published} pill short />\n        </div>\n        <ProductPriceDisplay\n          product={{ ...product, retail_price: product.retail_price_data, sale_price: product.sale_price_data }}\n        />\n      </div>\n    </div>\n  );\n};\n\nexport function ProductListCard(props) {\n  const { state = {} } = props;\n\n  if (!state) return null;\n  if (state.loading) return <Loading />;\n  if (!state.data) return null;\n\n  return state?.data?.results.map((prod) => {\n    return (\n      <div className=\"d-flex mb-1\" key={prod.slug}>\n        <ProductListItemCard product={prod} />\n      </div>\n    );\n  });\n}\n","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport { useContext, useEffect, useState } from 'react';\n\nimport { AdminView, StaffCoverUpdateForm } from '@miq/adminjs';\nimport Form, { useForm } from '@miq/form';\nimport { Card, ToastCtx, Button, Img, ImgDeleteIconButton, Loading } from '@miq/components';\n\nimport './update-view.scss';\n\nimport { SupplierData } from 'src/shop/orders/components';\n\nimport { productServices } from 'src/shop/product/utils';\nimport {\n  ProductImageAltTextInput,\n  ProductImageUploadButton,\n  StaffProductDeleteButton,\n  StaffProductPublishButton,\n} from 'src/shop/product/components';\nimport { AttributeCreateForm, AttributeUpdateForm } from 'src/shop/product/Attribute';\nimport { ProductForm } from 'src/shop/product/forms';\nimport { SHOP_MSGS, SHOP_PATHS } from 'src/shop/constants';\n\nimport { ProductListCard, ProductListItemCard } from './ProductList';\n\nexport default function ProductUpdateStaffView(props) {\n  const { search } = props.location;\n\n  const query = new URLSearchParams(search);\n\n  const [state, setState] = useState({ loading: true, data: null, error: null });\n\n  const { prodSlug } = props.match.params;\n  const form = useForm(pFormInitial);\n  const { setValues } = form;\n  useEffect(() => {\n    if (!prodSlug) return null;\n\n    console.log('reqst detail');\n\n    setState({ loading: true, data: null, error: null });\n    productServices\n      .detail(prodSlug)\n      .then((data) => {\n        setState({ loading: false, data, error: null });\n        setValues(mapProductDataToForm(data));\n      })\n      .catch((error) => {\n        setState({ loading: false, data: null, error });\n      });\n  }, [prodSlug, setValues]);\n\n  const toast = useContext(ToastCtx);\n\n  if (state.loading) return <Loading />;\n\n  const product = state?.data;\n  if (!product) return null;\n\n  const tab = query.get('tab') || 'info';\n\n  const setProduct = (data) => setState({ ...state, data: { ...state.data, ...data } });\n  const setError = (error) => setState({ ...state, error });\n\n  const { history } = props;\n  const sharedProps = { ...props, tab, prodSlug, product, setProduct, state, setState, setError, form, toast };\n  const { prev_slug, next_slug } = product;\n\n  return (\n    <AdminView\n      title={LABELS.viewTitle}\n      text={LABELS.viewText}\n      actions={\n        <div>\n          {prev_slug && (\n            <Link\n              to={SHOP_PATHS.productUpdate(prev_slug, query)}\n              className=\"btn me-1\"\n              title=\"Voir le produit précédent\"\n            >\n              Previous\n            </Link>\n          )}\n          {next_slug && (\n            <Link to={SHOP_PATHS.productUpdate(next_slug, query)} className=\"btn\" title=\"Voir le produit suivant\">\n              Next\n            </Link>\n          )}\n        </div>\n      }\n      className={CN.view}\n      back={props?.back}\n    >\n      <div className=\"me-1 w-25 d-none d-lg-block\">\n        <ProductListCard {...props} state={props?.QState} setState={props?.setQState} />\n      </div>\n\n      <div className=\"flex-1\">\n        <div className=\"d-flex flex-column-reverse flex-md-row align-items-center justify-content-between\">\n          {\n            //#region QueryButtons\n          }\n          <div className=\"mb-1\">\n            <QueryButton {...{ history, query }} onClick={(query) => query.set('tab', 'info')}>\n              Info\n            </QueryButton>\n            <QueryButton {...{ history, query }} onClick={(query) => query.set('tab', 'media')}>\n              Media\n            </QueryButton>\n            <QueryButton {...{ history, query }} onClick={(query) => query.set('tab', 'inventory')}>\n              Inventory\n            </QueryButton>\n            <QueryButton {...{ history, query }} onClick={(query) => query.set('tab', 'settings')}>\n              Settings\n            </QueryButton>\n          </div>\n          {\n            //#endregion\n          }\n\n          <div className=\"mb-2 min-w-35\">\n            <ProductListItemCard product={state?.data} />\n          </div>\n        </div>\n\n        <ViewTabs {...sharedProps} />\n      </div>\n    </AdminView>\n  );\n}\n\n//#region TABS\n\n//#region ViewTab\nconst ViewTabs = ({ tab, ...props }) => {\n  const { prodSlug, form, product, state, setProduct, toast } = props;\n\n  if (state?.loading) return <Loading />;\n\n  switch (tab) {\n    case 'media':\n      return <MediaViewTab {...props} />;\n    case 'inventory':\n      return <InventoryViewTab {...props} />;\n    case 'settings':\n      return <SettingsViewTab {...props} />;\n\n    default:\n      const { setError } = props;\n      const { categories } = product;\n      const fields = [\n        'name',\n        'category',\n        'description',\n        'retail_price',\n        'is_pre_sale',\n        'is_pre_sale_text',\n        'is_on_sale',\n        'sale_price',\n      ];\n\n      return (\n        <div className=\"d-grid grid-md-3 gap-1\">\n          {\n            //#region MAIN\n          }\n          <div className=\"span-md-2\">\n            <ProductForm\n              context={form}\n              prodSlug={prodSlug}\n              product={product}\n              fields={fields}\n              onSuccess={(data) => {\n                setProduct(data);\n                toast.success({ message: SHOP_MSGS.product.update_success });\n              }}\n              onError={(err) => {\n                form.handleError(err);\n              }}\n              toast={toast}\n            >\n              <Card\n                title=\"Details\"\n                text=\"Modifier les informations de cet article.\"\n                footer={\n                  <div className=\"sticky\" style={{ bottom: 0 }}>\n                    <div className=\"d-flex justify-content-center\">\n                      <Form.Submit value=\"Sauvegarder\" className=\"submit-btn btn btn-primary min-w-25\" />\n                    </div>\n                  </div>\n                }\n                className=\"mb-1\"\n              >\n                <Form.Field label=\"Nom\" text={LABELS.name_field_text}>\n                  <ProductForm.NameInput error={form.errors.name} />\n                </Form.Field>\n                <Form.Field label=\"Catégorie\" text={LABELS.none}>\n                  <ProductForm.CategoryInput {...{ categories }} error={form.errors.category} className=\"d-block\" />\n                </Form.Field>\n                <Form.Field label=\"Prix\">\n                  <ProductForm.RetailPriceInput error={form.errors.retail_price} />\n                </Form.Field>\n\n                <Form.Field label=\"Pré-vente\">\n                  <ProductForm.PresaleCheckboxInput\n                    label=\"Cet article est en pré-vente\"\n                    error={form.errors.is_pre_sale}\n                  />\n                </Form.Field>\n                {form.values.is_pre_sale && (\n                  <Form.Field text=\"Ajouter un text de pré-vente.(facultatif)\">\n                    <ProductForm.PresaleTextInput error={form.errors.is_pre_sale_text} />\n                  </Form.Field>\n                )}\n\n                <Form.Field label=\"Promotion\" text=\"\">\n                  <ProductForm.OnSaleCheckboxInput label=\"Cet article est en promo\" error={form.errors.is_on_sale} />\n                </Form.Field>\n                {form.values.is_on_sale && (\n                  <Form.Field label=\"Prix réduit\" text=\"\">\n                    <ProductForm.SalePriceInput error={form.errors.sale_price} />\n                  </Form.Field>\n                )}\n\n                <ProductForm.DescField\n                  label=\"Description\"\n                  text={LABELS.desc_field_text}\n                  error={form.errors.description}\n                  placeholder=\"\"\n                />\n              </Card>\n\n              <Card title=\"Seo\">\n                <ProductSEOForm {...props} />\n              </Card>\n            </ProductForm>\n          </div>\n          {\n            //#endregion\n          }\n\n          {\n            //#region SIDEBAR\n          }\n          <div className=\"bg-gray p-1\">\n            <div className=\"sticky\" style={{ top: 0 }}>\n              <div className=\"mb-2\">\n                <StaffProductPublishButton\n                  {...{ prodSlug, product }}\n                  className=\"w-100\"\n                  onPublishSuccess={(data) => {\n                    setProduct(data);\n                    return toast?.success({ message: SHOP_MSGS.product.publish_success });\n                  }}\n                  onUnpublishSuccess={(data) => {\n                    setProduct(data);\n                    return toast?.success({ message: SHOP_MSGS.product.unpublish_success });\n                  }}\n                  onError={(err) => {\n                    form.handleError(err);\n                    setError(err);\n                  }}\n                />\n              </div>\n\n              <div className=\"mb-2\">\n                <SupplierData product={product} />\n              </div>\n            </div>\n          </div>\n          {\n            //#endregion\n          }\n        </div>\n      );\n  }\n};\n//#endregion\n\n//#region MediaViewTab\nconst MediaViewTab = (props) => {\n  const { product, setProduct, toast } = props;\n  return (\n    <AdminView.Section\n      title=\"Images\"\n      actions={\n        <ProductImageUploadButton\n          product={product}\n          onCreateSuccess={(data) => {\n            setProduct({ ...product, ...data });\n          }}\n        />\n      }\n    >\n      <div className=\"d-grid grid-md-3 grid-lg-4\" style={{ gap: 4 }}>\n        <div className=\"\">\n          <StaffCoverUpdateForm\n            slug={product?.cover}\n            data={product.cover_data}\n            onCreate={(imgData) => {\n              productServices\n                .patch(product.slug, { cover: imgData.slug })\n                .then((data) => {\n                  setProduct?.({ ...product, ...data });\n                  toast?.success({ message: SHOP_MSGS.product.cover_create_success });\n                })\n                .catch((err) => {\n                  toast?.error({ message: SHOP_MSGS.product.cover_update_error });\n                });\n            }}\n            onUpdate={(cover_data) => {\n              toast?.success({ message: SHOP_MSGS.product.cover_update_success });\n              return setProduct?.({ ...product, cover_data });\n            }}\n            onDelete={() => {\n              toast?.success({ message: SHOP_MSGS.product.cover_delete_success });\n              return setProduct?.({ ...product, cover_data: null, cover: null });\n            }}\n            className=\"mb-1\"\n          />\n          <ProductImageAltTextInput image={product?.cover_data} />\n        </div>\n\n        {product.images_data.map((img) => {\n          return (\n            <Card\n              title={\n                <Button\n                  onClick={() =>\n                    productServices\n                      .swapCover(product.slug, img.slug)\n                      .then((data) => {\n                        setProduct(data);\n                      })\n                      .catch((err) => {})\n                  }\n                >\n                  Set as cover\n                </Button>\n              }\n              actions={\n                <ImgDeleteIconButton\n                  slug={img.slug}\n                  label=\"\"\n                  className=\"btn-danger-3 ms-1\"\n                  onSuccess={() => {\n                    setProduct({\n                      ...product,\n                      images_data: product.images_data.filter((i) => i.slug !== img.slug),\n                      images: product.images.filter((i) => i !== img.slug),\n                    });\n                  }}\n                />\n              }\n              footer={<ProductImageAltTextInput image={img} />}\n              className=\"mb-1\"\n              bodyClassName=\"p-0\"\n              key={img.slug}\n            >\n              <Img {...img} className=\"product-img\" />\n            </Card>\n          );\n        })}\n      </div>\n    </AdminView.Section>\n  );\n};\n//#endregion\n\n//#region InventoryTab\nconst InventoryViewTab = (props) => {\n  const [addAtr, setAddAtr] = useState(false);\n  const { product, setProduct } = props;\n\n  return (\n    <div className=\"d-grid grid-md-3 gap-1\">\n      <div className=\"span-md-2 p-1 bg-gray\">\n        <AdminView.Section title=\"Tailles\" text=\"Ajouter des tailles\"></AdminView.Section>\n        <AdminView.Section\n          title=\"Attributes\"\n          actions={\n            <Button onClick={() => setAddAtr(!addAtr)} className=\"btn-primary-3\">\n              Ajouter un attribut\n            </Button>\n          }\n        >\n          {addAtr && (\n            <div className=\"border-bottom mb-2 pb-3\">\n              <p className=\"text-center mb-3\">Ajouter un attribut au produit.</p>\n              <AttributeCreateForm\n                product={product}\n                onSuccess={(productData) => setProduct({ ...product, ...productData })}\n              />\n            </div>\n          )}\n\n          <div className=\"my-3\">\n            {product.attributes.map((attr) => (\n              <div className=\"mb-1\" key={attr.slug}>\n                <AttributeUpdateForm\n                  instance={attr}\n                  product={product}\n                  onSuccess={(pData) => setProduct({ ...product, ...pData })}\n                />\n              </div>\n            ))}\n          </div>\n        </AdminView.Section>\n      </div>\n\n      <div className=\"p-1\">\n        <div className=\"sticky\" style={{ top: 0 }}>\n          <div className=\"\">\n            <SupplierData product={product} />\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n//#endregion\n\n//#region SettingsTab\nconst SettingsViewTab = (props) => {\n  const { prodSlug, toast } = props;\n\n  return (\n    <div className=\"\">\n      <AdminView.Section title=\"Supprimer cet article\">\n        <StaffProductDeleteButton\n          {...{ prodSlug }}\n          onSuccess={() => {\n            toast?.success?.({ message: SHOP_MSGS.product.delete_success });\n            return props.history.push(SHOP_PATHS.productList());\n          }}\n          onError={() => toast?.error?.({ message: SHOP_MSGS.product.delete_error })}\n        />\n      </AdminView.Section>\n    </div>\n  );\n};\n//#endregion SettingTab\n\n//#endregion TABS\n\n//#region ProductSEOForm\nconst ProductSEOForm = ({ prodSlug, product, form, ...props }) => {\n  if (!form || !prodSlug) return null;\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    const fD = { title: form.values.title, slug_public: form.values.slug_public };\n\n    return productServices\n      .patchPage(prodSlug, fD, { title: product?.page?.title, slug_public: product?.page?.slug_public })\n      .then((data) => {\n        setProduct({ ...product, ...data });\n        toast.success({ message: SHOP_MSGS.product.page_update_success });\n      })\n      .catch((err) => {\n        form.handleError(err);\n        toast.error({ message: SHOP_MSGS.product.page_update_error });\n      });\n  };\n  return (\n    <Form context={form} onSubmit={handleSubmit}>\n      <Form.Field label=\"Meta title\" className=\"mb-1\">\n        <Form.TextInput\n          required\n          name=\"title\"\n          error={form.errors.title}\n          placeholder=\"Give a name to the item\"\n          maxLength={99}\n        />\n      </Form.Field>\n\n      <Form.Field label=\"Slug\" className=\"mb-1\">\n        <Form.TextInput\n          required\n          name=\"slug_public\"\n          error={form.errors.slug_public}\n          placeholder={'Write slug ...'}\n          maxLength={99}\n        />\n      </Form.Field>\n\n      <div className=\"my-2\">\n        <Form.Submit value=\"Update\" className=\"btn btn-primary-3\" />\n      </div>\n    </Form>\n  );\n};\n//#endregion ProductSEOForm\n\nconst QueryButton = ({ children, query, onClick, ...props }) => {\n  const { history, ...rest } = props;\n  const handleClick = (e) => {\n    onClick?.(query);\n    pushQuery();\n  };\n\n  function pushQuery() {\n    const path = new URL(window.location.href);\n    history?.push?.(`${path.pathname}?${query}`);\n  }\n\n  return (\n    <Button {...rest} onClick={handleClick}>\n      {children}\n    </Button>\n  );\n};\n\nexport const pFormInitial = {\n  name: '',\n  description: '',\n  category: '',\n  retail_price: 0.0,\n  is_pre_sale: false,\n  is_pre_sale_text: '',\n  sale_price: 0.0,\n  is_on_sale: false,\n  //\n  title: '',\n  slug_public: '',\n};\n\nconst mapProductDataToForm = (data) => ({\n  name: data.name || '',\n  description: data.description || '',\n  category: data.category || '',\n  retail_price: data?.retail_price || 0.0,\n  //\n  is_pre_sale: data.is_pre_sale || false,\n  is_pre_sale_text: data.is_pre_sale_text || '',\n  //\n  is_on_sale: data.is_on_sale || false,\n  sale_price: data?.sale_price || 0.0,\n  //\n  title: data.page.title || '',\n  slug_public: data?.page?.slug_public || '',\n});\n\nconst LABELS = {\n  viewTitle: 'Modifier cet article',\n  viewText: '',\n  viewCn: '',\n\n  name_field_text: `Ajoutez un nom qui décrit cet article. Les noms peuvent contenir jusqu’à 99 caractères.\\nNous recommandons 65 caractères au max.`,\n\n  desc_field_text: `Ajoutez les caractéristiques uniques qui décrivent cet article.`,\n  none: '',\n};\n\nconst CN = {\n  view: 'staff-product-update-view',\n};\n"],"sourceRoot":""}
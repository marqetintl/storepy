{"version":3,"sources":["../../../../packages/miq-adminjs/src/settings/utils.jsx","../../../../packages/miq-adminjs/src/settings/components.jsx","../../../../packages/miq-adminjs/src/settings/GeneralSettingsUpdateView.jsx"],"names":["siteServices","path","settingSlug","values","oldValues","this","patchPath","StaffService","SiteNameField","props","Field","label","text","TextInput","maxLength","placeholder","required","name","minLength","SiteDomainField","type","StaffSettingUpdateView","toast","useContext","ToastCtx","ctx","SharedDataCtx","useState","setting","setSetting","site","form","useForm","domain","settingDataToFormValues","settings","siteName","siteDomain","setValues","useEffect","detail","then","data","slug","catch","err","getHtml","component","componentToHtml","sharedProps","liveText","is_live","logo","title","back","className","Section","actions","onSuccess","logo_data","onError","error","message","rounded","onCreate","imgData","patch","success","onUpdate","fields","contactFields","Submit","value","whaFields","analyticsFields","SitePublishButton","onClick","isUpdated","CloseTemplateForm","ct_title","ct_text","context","onSubmit","e","preventDefault","ct_html","res","handleError","errors","TextAreaX","CloseTemplateCoverUpdateForm","ct_image","ct_image_data","onDelete","CloseTemplateRender","hasText","getClassName","StaffSiteForm","patchSite","updateSite","disabled","Boolean","StaffSettingForm","children","settingFields","Array","isArray","forEach","field","ContactFields","contact_number","contact_number_display","contact_number_title","contact_email","WhatsappFields","whatsapp_link","whatsapp_link_title","AnalyticsFields","ga_tracking","fb_pixel"],"mappings":"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","file":"static/js/21.0627d0ff.chunk.js","sourcesContent":["import { StaffService } from '@miq/utils';\n\nclass SiteSettingsStaffService extends StaffService {\n  constructor(path) {\n    super(path);\n  }\n\n  patchSite(settingSlug, values, oldValues) {\n    return this.patchPath(`${this.path}${settingSlug}/site/`, values, oldValues);\n  }\n}\n\nexport const siteServices = new SiteSettingsStaffService('settings/');\n","import React from 'react';\nimport { Form } from '../exports';\nimport { siteServices } from './utils';\n\n//#region FIELDS & INPUTS\n\nexport const SiteNameField = (props) => {\n  return (\n    <Form.Field label=\"Site name\" text=\"Give a name to your site. Keep it short and clean.\">\n      <Form.TextInput maxLength={65} placeholder={'example'} {...props} required name=\"name\" minLength={2} />\n    </Form.Field>\n  );\n};\n\nexport const SiteDomainField = (props) => {\n  return (\n    <Form.Field label=\"Site domain\" text=\"Enter your domain name url. Include the http(s) part.\">\n      <Form.TextInput\n        maxLength={99}\n        placeholder={'example.com'}\n        {...props}\n        type=\"url\"\n        required\n        name=\"domain\"\n        minLength={3}\n      />\n    </Form.Field>\n  );\n};\n\n//#endregion FIELDS & INPUTS\n","import React, { useContext, useEffect, useState } from 'react';\n\nimport {\n  ImgUploadButton,\n  Img,\n  ToastCtx,\n  SharedDataCtx,\n  Form,\n  useForm,\n  PhoneInput,\n  componentToHtml,\n  Picture,\n  getClassName,\n  Loading,\n  ImgSquare,\n  ImgDeleteIconButton,\n  Button,\n} from '../exports';\n\nimport { AdminView } from '../views';\nimport { siteServices } from './utils';\nimport { SiteDomainField, SiteNameField } from './components';\nimport { StaffCoverUpdateForm } from '../images/components';\n\n//#region StaffSettingUpdateView\n\nexport default function StaffSettingUpdateView(props) {\n  const toast = useContext(ToastCtx);\n  const ctx = useContext(SharedDataCtx);\n  const [setting, setSetting] = useState({});\n\n  const { site = {} } = ctx;\n\n  const form = useForm({ name: site.name, domain: site.domain, ...settingDataToFormValues({}) });\n\n  const settingSlug = site.settings;\n  const siteName = site?.name;\n  const siteDomain = site?.domain;\n  const setValues = form.setValues;\n\n  useEffect(() => {\n    siteServices\n      .detail(settingSlug)\n      .then((data) => {\n        if (!data.slug) return;\n        setSetting(data);\n        setValues({\n          name: siteName || '',\n          domain: siteDomain || '',\n          // TODO: Separate forms\n          ...settingDataToFormValues(data),\n        });\n      })\n      .catch((err) => {});\n  }, [settingSlug, setValues, siteName, siteDomain]);\n\n  if (!setting.slug) return null;\n\n  const getHtml = (data) => {\n    const component = <CloseTemplateRender {...{ ...setting, ...data, setting }} />;\n    return componentToHtml(component);\n  };\n\n  const sharedProps = { ctx, setting, setSetting, settingSlug, site, form, toast };\n  const liveText = setting.is_live\n    ? 'Your site is published.'\n    : 'Your site is not published. No one but you can see your content.\\nCustomize your landing.';\n\n  const { logo } = setting;\n  return (\n    <AdminView title=\"Site General Settings\" back={props?.back} className=\"pb-4\">\n      {/* SITE */}\n      <div className=\"d-grid grid-md-4 gap-2\">\n        <AdminView.Section title=\"Site Details\" className=\"span-md-3\">\n          <StaffSiteForm {...sharedProps} />\n        </AdminView.Section>\n\n        <AdminView.Section\n          title=\"Site logo\"\n          className=\"span-md-1\"\n          text=\"Add a logo to your site\"\n          actions={\n            <ImgDeleteIconButton\n              slug={logo}\n              onSuccess={() => setSetting({ ...setting, logo: null, logo_data: null })}\n              onError={() => toast.error({ message: 'Something went wrong.' })}\n              label=\"\"\n              className=\"btn-danger-3\"\n            />\n          }\n        >\n          {/* TODO: Update ct_html */}\n          {logo && <Img {...setting.logo_data} className=\"site-logo\" rounded />}\n          {!logo && (\n            <ImgUploadButton\n              onCreate={(imgData) =>\n                siteServices\n                  .patch(settingSlug, { logo: imgData.slug })\n                  .then((data) => {\n                    setSetting(data);\n                    toast.success({ message: 'Logo added.' });\n                  })\n                  .catch((err) => {})\n              }\n              onUpdate={(imgData) => {\n                setSetting({ ...setting, logo_data: imgData });\n                toast.success({ message: 'Logo updated.' });\n              }}\n              className=\"site-logo-upload-button\"\n            >\n              <Img {...setting.logo_data} className=\"site-logo\" />\n            </ImgUploadButton>\n          )}\n        </AdminView.Section>\n      </div>\n\n      {/* STATUS */}\n\n      <AdminView.Section title=\"Site Status\" text={liveText} actions={<SitePublishButton {...sharedProps} />}>\n        {!setting.is_live && (\n          <div className=\"d-grid grid-md-2 gap-3\">\n            <CloseTemplateForm {...{ ...sharedProps, getHtml }} />\n            <CloseTemplateCoverUpdateForm {...{ ...sharedProps, getHtml }} />\n          </div>\n        )}\n      </AdminView.Section>\n\n      {/* SETTING */}\n\n      <AdminView.Section title=\"Contact\" text=\"What's the best way to contact you?\">\n        <StaffSettingForm {...sharedProps} fields={contactFields}>\n          <ContactFields {...sharedProps} />\n          <div className=\"\">\n            <Form.Submit value=\"Save\" className=\"btn btn-primary-3\" />\n          </div>\n        </StaffSettingForm>\n      </AdminView.Section>\n\n      <AdminView.Section title=\"Whatsapp\" text=\"A whatsapp icon will be added to your site.\">\n        <StaffSettingForm {...sharedProps} fields={whaFields}>\n          <WhatsappFields {...sharedProps} />\n          <div className=\"\">\n            <Form.Submit value=\"Save\" className=\"btn btn-primary-3\" />\n          </div>\n        </StaffSettingForm>\n      </AdminView.Section>\n\n      <AdminView.Section title=\"Analytics\" text=\"Set up third-party analytics.\">\n        <StaffSettingForm {...sharedProps} fields={analyticsFields}>\n          <AnalyticsFields {...sharedProps} />\n          <div className=\"\">\n            <Form.Submit value=\"Save\" className=\"btn btn-primary-3\" />\n          </div>\n        </StaffSettingForm>\n      </AdminView.Section>\n\n      <AdminView.Section title=\"Social\" text=\"Display Your social media accounts. Comin Soon ...\" />\n    </AdminView>\n  );\n}\n\n//#endregion StaffSettingUpdateView\n\n//#region LIVESETTING\n\nconst SitePublishButton = ({ settingSlug, setting, setSetting, toast }) => {\n  if (!setting || !settingSlug) return null;\n  const { is_live = false } = setting;\n\n  const handleClick = () => {\n    return siteServices\n      .patch(settingSlug, { is_live: !is_live })\n      .then(({ isUpdated, ...data }) => {\n        if (!isUpdated) return;\n        setSetting?.(data);\n        toast?.success({\n          message: is_live ? 'Site published.' : 'No one but you can see the content.',\n        });\n      })\n      .catch((err) => {});\n  };\n\n  return (\n    <Button onClick={handleClick} className={is_live ? 'btn-danger-3' : 'btn-primary'}>\n      {is_live ? 'Unpublish site' : 'Publish site'}\n    </Button>\n  );\n};\n\nconst CloseTemplateForm = ({ settingSlug, setting, setSetting, getHtml }) => {\n  const form = useForm({ ct_title: setting.ct_title || '', ct_text: setting.ct_text || '' });\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    const ct_html = getHtml(form.values);\n\n    return siteServices\n      .patch(settingSlug, { ...form.values, ct_html })\n      .then(({ isUpdated, ...res }) => {\n        if (!isUpdated) return;\n        setSetting(res);\n        props?.toast?.success?.({ message: 'Template updated.' });\n      })\n      .catch((err) => form.handleError(err));\n  };\n\n  return (\n    <Form context={form} onSubmit={handleSubmit}>\n      <Form.Field label=\"Title\">\n        <Form.TextInput name=\"ct_title\" placeholder=\"Write title ...\" error={form.errors.ct_title} maxLength={50} />\n      </Form.Field>\n\n      <Form.Field label=\"Text\" className=\"mb-2\">\n        <Form.TextAreaX name=\"ct_text\" placeholder=\"Write text ...\" error={form.errors.ct_text} maxLength={99} />\n      </Form.Field>\n\n      <div>\n        <Form.Submit value=\"Save\" className=\"btn btn-primary-2\" />\n      </div>\n    </Form>\n  );\n};\n\nconst CloseTemplateCoverUpdateForm = ({ settingSlug, setting, setSetting, getHtml, ...props }) => {\n  const handleImageCreate = (imgData) => {\n    const ct_image = imgData.slug;\n    const ct_html = getHtml({ ct_image_data: imgData, ct_image });\n\n    return siteServices\n      .patch(settingSlug, { ct_image, ct_html })\n      .then(({ isUpdated, ...res }) => {\n        if (!isUpdated) return;\n        setSetting(res);\n        toast?.success?.({ message: 'Image added.' });\n      })\n      .catch((err) => {});\n  };\n\n  const handleImageUpdate = ({ isUpdated, ...imgData }) => {\n    const ct_html = getHtml({ ct_image_data: imgData });\n    return siteServices\n      .patch(settingSlug, { ct_html })\n      .then(({ isUpdated, ...res }) => {\n        if (!isUpdated) return;\n        setSetting(res);\n        toast?.success?.({ message: 'Image updated.' });\n      })\n      .catch((err) => {});\n  };\n\n  const handleImageDelete = () => {\n    const data = { ...setting, ct_image_data: null, ct_image: null };\n    // const html = componentToHtml(<ClosePageRender {...data} />);\n\n    return siteServices\n      .patch(settingSlug, { ct_html: getHtml({ ct_image_data: null, ct_image: null }) })\n      .then((data) => {\n        setSetting(data);\n        // toast?.success?.({ message: 'Image deleted.' });\n      })\n      .catch((err) => {});\n  };\n\n  return (\n    <StaffCoverUpdateForm\n      slug={setting?.ct_image}\n      data={setting?.ct_image_data}\n      onCreate={handleImageCreate}\n      onUpdate={handleImageUpdate}\n      onDelete={handleImageDelete}\n      className=\"mb-1\"\n    />\n  );\n};\n\nconst CloseTemplateRender = ({ ct_title, ct_text, ct_image_data, setting }) => {\n  const hasText = ct_title || ct_text;\n  const { logo_data, logo } = setting || {};\n\n  return (\n    <div className=\"close-template\">\n      {ct_image_data && <Picture {...ct_image_data} className=\"close-template-bg\" />}\n\n      {hasText && (\n        <div className=\"close-template-inner\">\n          <div className={getClassName(['close-template-logo', !logo && 'loading'])}>\n            {logo_data ? <ImgSquare {...logo_data} /> : <Loading className=\"small icon\" />}\n          </div>\n          <div className=\"text-center p-3\">\n            {ct_title && <h1 className=\"close-template-title mb-1\">{ct_title}</h1>}\n            {ct_text && <h3 className=\"close-template-text\">{ct_text}</h3>}\n          </div>\n        </div>\n      )}\n    </div>\n  );\n};\n//#endregion LIVESETTING\n\n//#region StaffSiteForm\n\nconst StaffSiteForm = ({ settingSlug, form, ...props }) => {\n  if (!form || !settingSlug) return null;\n  const { ctx, site, toast } = props;\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    return siteServices\n      .patchSite(\n        settingSlug,\n        { name: form.values.name, domain: form.values.domain },\n        { name: site.name, domain: site.domain }\n      )\n      .then(({ isUpdated, ...data }) => {\n        if (!isUpdated) return;\n\n        ctx.updateSite(data.site);\n        toast.success({ message: 'Site updated.' });\n      })\n      .catch((err) => form.handleError(err));\n  };\n\n  return (\n    <Form context={form} onSubmit={handleSubmit}>\n      <SiteNameField error={form.errors.name} disabled={!Boolean(site.settings)} className=\"w-100 w-md-50\" />\n      <SiteDomainField error={form.errors.domain} disabled={!Boolean(site.settings)} />\n      <div className=\"\">\n        <Form.Submit value=\"Save\" className=\"btn btn-md btn-primary-3 min-w-25\" />\n      </div>\n    </Form>\n  );\n};\n\n//#endregion StaffSiteForm\n\n//#region StaffSettingForm\n\nconst StaffSettingForm = ({ children, settingSlug, setting, form, fields = settingFields, ...props }) => {\n  if (!settingSlug || !form || !Array.isArray(fields)) return null;\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n\n    const oldValues = {};\n    const values = {};\n    fields.forEach((field) => {\n      values[field] = form.values[field];\n      oldValues[field] = setting[field];\n    });\n\n    return siteServices\n      .patch(settingSlug, values, oldValues)\n      .then(({ isUpdated, ...data }) => {\n        if (!isUpdated) return;\n        setSetting?.(data);\n        toast?.success?.({ message: 'Site updated.' });\n        props?.onSuccess?.(data);\n      })\n      .catch((err) => {\n        form.handleError(err);\n        props?.onError?.(err);\n      });\n  };\n\n  return (\n    <Form context={form} onSubmit={handleSubmit}>\n      {children}\n    </Form>\n  );\n};\n\n//#endregion StaffSettingForm\n\n//#region FIELDS\nconst contactFields = ['contact_number', 'contact_number_title', 'contact_number_display', 'contact_email'];\nconst ContactFields = (props) => {\n  const { form } = props;\n  return (\n    <>\n      <Form.Field label=\"Phone number\" text=\"Write your (business) contact number without country extension.\">\n        <PhoneInput\n          required={props.required}\n          name=\"contact_number\"\n          error={form.errors.contact_number}\n          className=\"w-100 w-md-50\"\n        />\n      </Form.Field>\n\n      <Form.Field label=\"Phone number display\" text=\"Write a call to action for your contact number.\">\n        <Form.TextInput\n          required={props.required}\n          name=\"contact_number_display\"\n          error={form.errors.contact_number_display}\n          placeholder=\"Call us now\"\n          maxLength={99}\n          className=\"w-100 w-md-50\"\n        />\n      </Form.Field>\n\n      <Form.Field label=\"Phone number link text\" text=\"Describe your phone number link (SEO).\">\n        <Form.TextInput\n          name=\"contact_number_title\"\n          error={form.errors.contact_number_title}\n          className=\"w-100 w-md-50\"\n          maxLength={99}\n        />\n      </Form.Field>\n\n      <Form.Field label=\"Email\" text=\"Write your (business) contact email.\">\n        <Form.TextInput\n          name=\"contact_email\"\n          type=\"email\"\n          error={form.errors.contact_email}\n          className=\"w-100 w-md-50\"\n          maxLength={99}\n        />\n      </Form.Field>\n    </>\n  );\n};\n\nconst whaFields = ['whatsapp_link', 'whatsapp_link_title'];\nconst WhatsappFields = ({ form, required }) => {\n  return (\n    <>\n      <Form.Field label=\"Whatsapp link\" text=\"Write your whatsapp link.\">\n        <Form.TextInput\n          required={required}\n          name=\"whatsapp_link\"\n          type=\"url\"\n          error={form.errors.whatsapp_link}\n          maxLength={200}\n          className=\"w-100 w-md-50\"\n        />\n      </Form.Field>\n      <Form.Field label=\"Whatsapp link text\" text=\"Describe your whatsapp link.\">\n        <Form.TextInput\n          name=\"whatsapp_link_title\"\n          error={form.errors.whatsapp_link_title}\n          className=\"w-100 w-md-50\"\n          maxLength={99}\n        />\n      </Form.Field>\n    </>\n  );\n};\n\nconst analyticsFields = ['ga_tracking', 'fb_pixel'];\nconst AnalyticsFields = ({ form }) => {\n  return (\n    <>\n      <Form.Field label=\"Google Analytics Tracking Number\">\n        <Form.TextInput name=\"ga_tracking\" error={form.errors.ga_tracking} className=\"w-100 w-md-50\" placeholder=\"G-\" />\n      </Form.Field>\n\n      <Form.Field label=\"Facebook Pixel\">\n        <Form.TextInput name=\"fb_pixel\" error={form.errors.fb_pixel} className=\"w-100 w-md-50\" />\n      </Form.Field>\n    </>\n  );\n};\n\n//#endregion FIELDS\n\n//#region HELPERS\nconst settingFields = [...contactFields, ...whaFields, ...analyticsFields];\n\nconst settingDataToFormValues = (data) => {\n  const values = {};\n  settingFields.forEach((field) => {\n    values[field] = data[field] || '';\n  });\n  return values;\n};\n\n//#endregion HELPERS\n"],"sourceRoot":""}
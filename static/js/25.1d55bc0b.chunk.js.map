{"version":3,"sources":["shop/category/UpdateView.jsx"],"names":["StaffCategoryUpdateView","props","catSlug","match","params","useState","cat","setCat","toast","useContext","ToastCtx","form","useForm","name","description","title","slug_public","is_published","setValues","useEffect","catServices","detail","then","data","page","catch","err","response","status","back","actions","prev_slug","to","className","next_slug","slug","cover","cover_data","onCreate","imgData","patch","onUpdate","onDelete","Section","pill","context","onSubmit","e","preventDefault","values","handleError","Label","value","error","errors","TextAreaX","placeholder","Submit","patchPage","success","message","CheckboxInput","TextInput","required","maxLength"],"mappings":"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","file":"static/js/25.1d55bc0b.chunk.js","sourcesContent":["import { useContext, useEffect, useState } from 'react';\nimport { Link } from 'react-router-dom';\nimport { AdminView, StaffCoverUpdateForm, PublishedStatusSpan } from '@miq/adminjs';\nimport Form, { useForm } from '@miq/form';\nimport { ToastCtx } from '@miq/components';\n\nimport { catServices } from './utils';\nimport { CatNameInput } from './components';\n\nexport default function StaffCategoryUpdateView(props) {\n  const { catSlug } = props.match.params;\n\n  const [cat, setCat] = useState(null);\n  const toast = useContext(ToastCtx);\n\n  const form = useForm({ name: '', description: '', title: '', slug_public: '', is_published: false });\n  const { setValues } = form;\n\n  useEffect(() => {\n    catServices\n      .detail(catSlug)\n      .then((data) => {\n        setCat(data);\n\n        setValues({\n          name: data.name || '',\n          description: data.description || '',\n          title: data.page.title || '',\n          slug_public: data?.page?.slug_public || '',\n          is_published: data?.page?.is_published || false,\n        });\n      })\n      .catch((err) => {\n        if (err.response) {\n          // toast.error({ message: \"Something went wrong\" });\n          if (err.response.status === 404) {\n            return;\n          }\n        }\n      });\n  }, [catSlug, setValues]);\n\n  if (!cat) return null;\n\n  const handleUpdate = (e) => {\n    e.preventDefault();\n    catServices\n      .patch(cat.slug, { name: form.values.name, description: form.values.description })\n      .then((data) => {})\n      .catch((err) => {\n        form.handleError(err);\n      });\n  };\n\n  return (\n    <AdminView\n      back={props?.back}\n      title=\"Modifier une catégorie\"\n      actions={\n        <div>\n          {cat?.prev_slug && (\n            <Link to={`${props?.back}${cat?.prev_slug}`} className=\"btn me-1\" title=\"Voir la catégorie precedente\">\n              Previous\n            </Link>\n          )}\n          {cat?.next_slug && (\n            <Link to={`${props?.back}${cat?.next_slug}`} className=\"btn\" title=\"Voir la catégorie suivante\">\n              Next\n            </Link>\n          )}\n        </div>\n      }\n      className=\"cat-update-view\"\n    >\n      <div className=\"d-grid grid-md-4 gap-2\">\n        <div className=\"span-md-1\">\n          <StaffCoverUpdateForm\n            slug={cat?.cover}\n            data={cat.cover_data}\n            onCreate={(imgData) => {\n              catServices\n                .patch(cat.slug, { cover: imgData.slug })\n                .then((data) => {\n                  setCat(data);\n                })\n                .catch((err) => {\n                  // console.log(err)\n                });\n            }}\n            onUpdate={(cover_data) => {\n              return setCat({ ...cat, cover_data });\n            }}\n            onDelete={() => {\n              return setCat({ ...cat, cover_data: null, cover: null });\n            }}\n          />\n        </div>\n        <AdminView.Section\n          title=\"Details\"\n          actions={<PublishedStatusSpan is_published={cat?.page?.is_published} pill />}\n          className=\"span-md-3\"\n        >\n          <Form context={form} onSubmit={handleUpdate}>\n            <div className=\"mb-1\">\n              <Form.Label value=\"Nom de la catégorie\" className=\"mb-1\" />\n              <CatNameInput error={form.errors.name} />\n            </div>\n\n            <div className=\"mb-1\">\n              <Form.Label value=\"Description de la catégorie\" className=\"mb-1\" />\n              <Form.TextAreaX\n                name=\"description\"\n                error={form.errors.description}\n                placeholder={'Decrivez la catégorie ...'}\n              />\n            </div>\n\n            <div className=\"my-2\">\n              <Form.Submit value=\"Sauvegarder\" className=\"btn btn-primary\" />\n            </div>\n          </Form>\n        </AdminView.Section>\n      </div>\n\n      <Form\n        context={form}\n        onSubmit={(e) => {\n          e.preventDefault();\n          const { title, slug_public, is_published } = form.values;\n          return catServices\n            .patchPage(\n              catSlug,\n              { title, slug_public, is_published },\n              { title: cat.page.title, slug_public: cat.page.slug_public, is_published: cat.page.is_published }\n            )\n            .then((data) => {\n              // setCat(data);\n              toast.success({ message: 'Category updated.' });\n            })\n            .catch((err) => {\n              form.handleError(err);\n              toast.error({ message: 'Could not update item.' });\n            });\n        }}\n      >\n        <AdminView.Section title=\"Status\">\n          <div className=\"d-flex align-items-center\">\n            <Form.CheckboxInput name=\"is_published\" error={form.errors.is_published} className=\"me-2\" />\n            <Form.Label value=\"Publier cette categorie\" />\n          </div>\n        </AdminView.Section>\n\n        <AdminView.Section title=\"Seo\">\n          <div className=\"mb-1\">\n            <Form.Label value=\"Title\" className=\"mb-1\" />\n            <Form.TextInput\n              required\n              name=\"title\"\n              error={form.errors.title}\n              placeholder=\"Give a name to the item\"\n              maxLength={99}\n            />\n          </div>\n          <div className=\"mb-1\">\n            <Form.Label value=\"Slug\" className=\"mb-1\" />\n            <Form.TextInput\n              required\n              name=\"slug_public\"\n              error={form.errors.slug_public}\n              placeholder={'Write slug ...'}\n              maxLength={99}\n            />\n          </div>\n        </AdminView.Section>\n\n        <div className=\"\">\n          <Form.Submit value=\"Save\" className=\"btn btn-primary-3\" />\n        </div>\n      </Form>\n    </AdminView>\n  );\n}\n"],"sourceRoot":""}
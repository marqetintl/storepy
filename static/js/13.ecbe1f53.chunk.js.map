{"version":3,"sources":["../../../../packages/miq-adminjs/src/settings/utils.jsx","../../../../packages/miq-adminjs/src/settings/GeneralSettingsUpdateView.jsx"],"names":["siteServices","path","settingSlug","values","oldValues","this","patchPath","StaffService","LiveSettingForm","setting","props","form","useForm","is_live","slug","Section","title","text","context","onSubmit","e","preventDefault","patch","then","isUpdated","data","setSetting","catch","err","handleError","CheckboxInput","name","checked","label","className","Submit","value","SettingForm","contact_email","ga_tracking","fb_pixel","Object","keys","forEach","key","TextInput","type","error","errors","placeholder","Field","GeneralSettingsUpdateView","ctx","useContext","SharedDataCtx","useState","site","settings","useEffect","detail","siteForm","domain","patchSite","updateSite","Label","required","disabled","Boolean"],"mappings":"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","file":"static/js/13.ecbe1f53.chunk.js","sourcesContent":["import { StaffService } from '../utils';\n\nclass SiteSettingsStaffService extends StaffService {\n  constructor(path) {\n    super(path);\n  }\n\n  patchSite(settingSlug, values, oldValues) {\n    return this.patchPath(`${this.path}${settingSlug}/site/`, values, oldValues);\n  }\n}\n\nexport const siteServices = new SiteSettingsStaffService('settings/');\n","import React, { useContext, useEffect, useState } from 'react';\n\nimport { SharedDataCtx } from '@miq/contexts';\nimport Form, { useForm } from '@miq/form/';\n\nimport { AdminView } from '../views';\nimport { siteServices } from './utils';\n\nconst LiveSettingForm = ({ setting = {}, ...props }) => {\n  const form = useForm({ is_live: setting.is_live || false });\n\n  if (!setting.slug) return null;\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n\n    return siteServices\n      .patch(setting.slug, { is_live: form.values.is_live }, { is_live: setting.is_live })\n      .then(({ isUpdated, ...data }) => {\n        if (isUpdated) props.setSetting(data);\n      })\n      .catch((err) => form.handleError(err));\n  };\n\n  return (\n    <AdminView.Section title=\"Site Status\" text=\"Lock you site\">\n      <Form context={form} onSubmit={handleSubmit}>\n        <Form.CheckboxInput name=\"is_live\" checked={form.values.is_live} label=\"This site is off\" />\n\n        <div className=\"\">\n          <Form.Submit value=\"Save\" className=\"btn btn-primary-2\" />\n        </div>\n      </Form>\n    </AdminView.Section>\n  );\n};\n\nconst SettingForm = ({ setting = {}, ...props }) => {\n  const form = useForm({\n    contact_email: setting.contact_email || '',\n    ga_tracking: setting.ga_tracking || '',\n    fb_pixel: setting.fb_pixel || '',\n  });\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n\n    const oldValues = {};\n    Object.keys(form.values).forEach((key) => {\n      oldValues[key] = setting[key];\n    });\n\n    return siteServices\n      .patch(setting.slug, form.values, oldValues)\n      .then(({ isUpdated, ...data }) => {\n        if (isUpdated) props.setSetting(data);\n      })\n      .catch((err) => form.handleError(err));\n  };\n\n  return (\n    <Form context={form} onSubmit={handleSubmit}>\n      <AdminView.Section title=\"Contact\" text=\"What's the best way to contact you?\">\n        <Form.TextInput\n          name=\"contact_email\"\n          type=\"email\"\n          error={form.errors.contact_email}\n          placeholder=\"Write your contact email ...\"\n        />\n      </AdminView.Section>\n\n      <AdminView.Section title=\"Social\" text=\"Display Your social media accounts.\">\n        {/* <Form.TextInput name=\"contact_email\" type=\"url\" placeholder=\"write your instagram url ...\" /> */}\n      </AdminView.Section>\n\n      <AdminView.Section title=\"Analytics\" text=\"Set up third-party analytics.\">\n        <Form.Field label=\"Google Analytics Tracking Number\">\n          <Form.TextInput name=\"ga_tracking\" />\n        </Form.Field>\n\n        <Form.Field label=\"Facebook Pixel\">\n          <Form.TextInput name=\"fb_pixel\" />\n        </Form.Field>\n\n        <div className=\"\">\n          <Form.Submit value=\"Save\" className=\"btn btn-primary-2\" />\n        </div>\n      </AdminView.Section>\n    </Form>\n  );\n};\n\nexport default function GeneralSettingsUpdateView(props) {\n  const ctx = useContext(SharedDataCtx);\n  const [setting, setSetting] = useState({});\n\n  const settingSlug = ctx.site.settings;\n  useEffect(() => {\n    siteServices\n      .detail(settingSlug)\n      .then((data) => {\n        if (!data.slug) return;\n        setSetting(data);\n      })\n      .catch((err) => {});\n  }, [settingSlug]);\n\n  const { site } = ctx;\n  const siteForm = useForm({ name: site.name, domain: site.domain });\n\n  if (!setting.slug) return null;\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    const { settings } = site;\n\n    if (!settings) {\n      return;\n    }\n\n    return siteServices\n      .patchSite(\n        settings,\n        { name: siteForm.values.name, domain: siteForm.values.domain },\n        { name: site.name, domain: site.domain }\n      )\n      .then(({ isUpdated, ...data }) => {\n        if (isUpdated) ctx.updateSite(data.site);\n      })\n      .catch((err) => siteForm.handleError(err));\n  };\n\n  return (\n    <AdminView title=\"Site General Settings\">\n      <Form context={siteForm} onSubmit={handleSubmit}>\n        <AdminView.Section title=\"Site Details\">\n          <div className=\"mb-1\">\n            <Form.Label value=\"Site name\" />\n            <Form.TextInput required name=\"name\" disabled={!Boolean(site.settings)} />\n          </div>\n\n          <div className=\"mb-1\">\n            <Form.Label value=\"Site domain\" />\n            <Form.TextInput required name=\"domain\" disabled={!Boolean(site.settings)} />\n          </div>\n\n          <div className=\"\">\n            <Form.Submit value=\"Save\" className=\"btn btn-primary-2\" />\n          </div>\n        </AdminView.Section>\n      </Form>\n\n      <LiveSettingForm {...{ ctx, setting, setSetting }} />\n\n      <SettingForm {...{ ctx, setting, setSetting }} />\n    </AdminView>\n  );\n}\n"],"sourceRoot":""}
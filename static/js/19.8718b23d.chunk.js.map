{"version":3,"sources":["../../../../packages/miq-adminjs/src/settings/IndexSettingsUpdateView.jsx"],"names":["IndexSettingsUpdateView","props","useState","page","setPage","form","useForm","title","setValues","useEffect","indexStaffServices","detail","then","data","catch","err","slug","back","context","onSubmit","e","preventDefault","patch","values","Section","className","Label","value","TextInput","required","name","error","errors","Submit","actions","cover","cover_data","onCreate","imgData","toast","success","message","onUpdate","onDelete"],"mappings":"4OASe,SAASA,EAAwBC,GAC9C,MAAwBC,mBAAS,IAAjC,mBAAOC,EAAP,KAAaC,EAAb,KAEMC,EAAOC,YAAQ,CACnBC,MAAOJ,EAAKI,OAAS,KAGjBC,EAAYH,EAAKG,UAYvB,GAVAC,qBAAU,WACRC,IACGC,OAAO,WACPC,MAAK,SAACC,GACLT,EAAQS,GACRL,EAAU,CAAED,MAAOM,EAAKN,OAAS,QAElCO,OAAM,SAACC,SACT,CAACP,KAECL,IAASA,EAAKa,KAAM,OAAO,KAahC,OACE,eAAC,IAAD,CAAWT,MAAM,yBAAyBU,KAAI,OAAEhB,QAAF,IAAEA,OAAF,EAAEA,EAAOgB,KAAvD,UACE,cAAC,IAAD,CAAMC,QAASb,EAAMc,SAbJ,SAACC,GAGpB,OAFAA,EAAEC,iBAEKX,IACJY,MAAM,UAAWjB,EAAKkB,QACtBX,MAAK,SAACC,OAGNC,OAAM,SAACC,QAKR,SACE,eAAC,IAAUS,QAAX,CAAmBjB,MAAM,qBAAzB,UACE,sBAAKkB,UAAU,OAAf,UACE,cAAC,IAAKC,MAAN,CAAYC,MAAM,eAClB,cAAC,IAAKC,UAAN,CAAgBC,UAAQ,EAACC,KAAK,QAAQC,MAAO1B,EAAK2B,OAAOzB,WAG3D,qBAAKkB,UAAU,GAAf,SACE,cAAC,IAAKQ,OAAN,CAAaN,MAAM,OAAOF,UAAU,6BAI1C,cAAC,IAAUD,QAAX,CAAmBjB,MAAM,QAAQ2B,QAAS,cAAC,IAAD,wBAA1C,SACE,cAAC,IAAD,CACElB,KAAI,OAAEb,QAAF,IAAEA,OAAF,EAAEA,EAAMgC,MACZtB,KAAMV,EAAKiC,WACXC,SAAU,SAACC,GACT5B,IACGY,MAAM,UAAW,CAAEa,MAAOG,EAAQtB,OAClCJ,MAAK,SAACC,GAAU,IAAD,EACdT,EAAQ,2BAAKD,GAASU,IACjB,OAALZ,QAAK,IAALA,GAAA,UAAAA,EAAOsC,aAAP,SAAcC,QAAQ,CAAEC,QAAS,yBAElC3B,OAAM,SAACC,GAAS,IAAD,EACT,OAALd,QAAK,IAALA,GAAA,UAAAA,EAAOsC,aAAP,SAAcR,MAAM,CAAEU,QAAS,sCAGrCC,SAAU,SAACN,GAAgB,IAAD,EAExB,OADK,OAALnC,QAAK,IAALA,GAAA,UAAAA,EAAOsC,aAAP,SAAcC,QAAQ,CAAEC,QAAS,wBAC1BrC,EAAQ,2BAAKD,GAAN,IAAYiC,iBAE5BO,SAAU,WACR,OAAOvC,EAAQ,2BAAKD,GAAN,IAAYiC,WAAY,KAAMD,MAAO,SAErDV,UAAU,WAGd,cAAC,IAAD","file":"static/js/19.8718b23d.chunk.js","sourcesContent":["import React from 'react';\nimport { useEffect, useState } from 'react';\n\nimport Form, { useForm } from '@miq/form/';\nimport { SectionsEditor, indexStaffServices } from '@miq/editor/';\nimport { Button } from '@miq/components/';\nimport { StaffCoverUpdateForm } from '@miq/adminjs/';\nimport { AdminView } from '../views';\n\nexport default function IndexSettingsUpdateView(props) {\n  const [page, setPage] = useState({});\n\n  const form = useForm({\n    title: page.title || '',\n  });\n\n  const setValues = form.setValues;\n\n  useEffect(() => {\n    indexStaffServices\n      .detail('current')\n      .then((data) => {\n        setPage(data);\n        setValues({ title: data.title || '' });\n      })\n      .catch((err) => {});\n  }, [setValues]);\n\n  if (!page || !page.slug) return null;\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n\n    return indexStaffServices\n      .patch('current', form.values)\n      .then((data) => {\n        // setPage(data);\n      })\n      .catch((err) => {});\n  };\n\n  return (\n    <AdminView title=\"Site HomePage Settings\" back={props?.back}>\n      <Form context={form} onSubmit={handleSubmit}>\n        <AdminView.Section title=\"Index Page Details\">\n          <div className=\"mb-1\">\n            <Form.Label value=\"Meta title\" />\n            <Form.TextInput required name=\"title\" error={form.errors.title} />\n          </div>\n\n          <div className=\"\">\n            <Form.Submit value=\"Save\" className=\"btn btn-primary-2\" />\n          </div>\n        </AdminView.Section>\n      </Form>\n      <AdminView.Section title=\"Cover\" actions={<Button>Add cover</Button>}>\n        <StaffCoverUpdateForm\n          slug={page?.cover}\n          data={page.cover_data}\n          onCreate={(imgData) => {\n            indexStaffServices\n              .patch('current', { cover: imgData.slug })\n              .then((data) => {\n                setPage({ ...page, ...data });\n                props?.toast?.success({ message: 'Page cover added.' });\n              })\n              .catch((err) => {\n                props?.toast?.error({ message: 'Could not upload cover image.' });\n              });\n          }}\n          onUpdate={(cover_data) => {\n            props?.toast?.success({ message: 'Page cover updated.' });\n            return setPage({ ...page, cover_data });\n          }}\n          onDelete={() => {\n            return setPage({ ...page, cover_data: null, cover: null });\n          }}\n          className=\"mb-1\"\n        />\n      </AdminView.Section>\n      <SectionsEditor>{/* <PageEditor.Sections sourceSlug={page.slug} sourceType=\"index\" /> */}</SectionsEditor>\n    </AdminView>\n  );\n}\n"],"sourceRoot":""}
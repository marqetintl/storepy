{"version":3,"file":"static/js/825.55dcc5c9.chunk.js","mappings":"+TAWaA,EAAuE,SAACC,GACnF,IAAQC,EAAwCD,EAAxCC,SAAUC,EAA8BF,EAA9BE,UAAWC,EAAmBH,EAAnBG,QAASC,EAAUJ,EAAVI,MAatC,OACE,UAAC,KAAD,CACEC,aAAc,kBAAM,yCAAiBJ,EAASK,KAA1B,QACpBC,aAAc,gBAAGC,EAAH,EAAGA,QAAH,OACZ,iBAAKC,UAAU,oDAAf,WACE,SAAC,KAAD,CAAQC,QAAS,kBAAMF,GAAQ,IAA/B,sBAEA,SAAC,KAAD,CAAQE,QAAS,kBAlBJ,SAACF,GACpBP,EACGU,UACAC,MAAK,SAACC,GACE,OAAPL,QAAO,IAAPA,GAAAA,GAAU,GACD,OAATN,QAAS,IAATA,GAAAA,EAAYW,MAGbC,OAAM,SAACC,GAAD,cAASZ,QAAT,IAASA,OAAT,EAASA,EAAUY,MAUCC,CAAaR,IAAUC,UAAU,aAAxD,2BAKJQ,OAAQ,kBAAM,gBAAKR,UAAU,MAAf,mDACdA,WAAWS,EAAAA,EAAAA,IAAM,CAAC,qCAAsClB,EAAMS,YAZhE,WAcE,SAAC,QAAD,IACCL,IAAS,iBAAMK,UAAU,QAAhB,SAAyBL,QC9B1B,SAASe,IACtB,IAAMC,GAAWC,EAAAA,EAAAA,MACjB,GAAiBC,EAAAA,EAAAA,MACXC,GADN,eACoBC,IAAI,QAExB,GAA4BC,EAAAA,EAAAA,KAAW,kBAAMC,EAAAA,EAAAA,KAAgBC,KAAK,CAAEC,OAAQ,CAAEL,KAAAA,OAAW,CAAEM,YAAa,CAACN,KAAjGV,EAAR,EAAQA,IAAKiB,EAAb,EAAaA,WAEPC,EAAI,IAAIC,EAAAA,GAASnB,GACvB,OAAKkB,EAAEE,WAGL,SAAC,UAAD,CACEC,MAAM,SACNC,KAAK,gBACLC,SACE,SAAC,YAAD,CACE1B,QAAS,YACPgB,EAAAA,EAAAA,KACGW,OAAO,IACPzB,MAAK,YAAoB,IAAjB0B,EAAgB,EAAhBA,KACP,OAAOlB,EAAS,GAAD,OAAIkB,EAAKC,KAAT,SAEhBzB,OAAM,SAACC,QAIZN,UAAU,gBACV+B,cAAe,CAAC,2BAChBN,MAAO,kBAbT,uBAkBFM,cAAe,CAAC,4BAtBlB,UAwBE,SAAC,aAAD,CAAeC,QAAQ,SAAC,MAAD,kBAAgBV,EAAEO,MAAlB,IAAwBI,UAAWC,EAAAA,GAAAA,KAAYC,IAAE,KAAxE,UACE,SAAC,KAAD,CACEC,QAAM,EACNC,MAAOf,EAAEe,MACTC,QACE,iCACE,SAAC,QAAD,KACA,SAAC,QAAD,qBAEA,SAAC,QAAD,0BACA,SAAC,QAAD,4BACA,SAAC,QAAD,OAGJC,WAAY,SAACC,GACX,MAAoEA,EAA5D3C,KAAAA,OAAR,MAAe,YAAf,EAA4BiC,EAAwCU,EAAxCV,KAAMW,EAAkCD,EAAlCC,QAASJ,EAAyBG,EAAzBH,MAAOK,EAAkBF,EAAlBE,cAElD,OACE,UAAC,QAAD,YACE,UAAC,QAAD,YACE,SAAC,UAAD,CAAYP,GAAE,UAAKL,EAAL,KAAc9B,UAAU,GAAtC,UACE,gBAAKA,WAAWS,EAAAA,EAAAA,IAAM,CAAC,wBAAyBgC,GAAW,sBAA3D,SAAmF5C,OAErF,iBAAMG,UAAU,UAAhB,SAA2BwC,EAAKG,eAGlC,SAAC,QAAD,iBAAWN,QAAX,IAAWA,OAAX,EAAWA,EAAOO,UAClB,SAAC,QAAD,WACE,SAACC,GAAD,UAAWL,EAAKM,qBAElB,SAAC,QAAD,WACE,SAACD,GAAD,UAAWH,OAGb,SAAC,QAAD,WACE,SAACpD,EAAD,CAA2BE,UAAUyB,EAAAA,EAAAA,GAAcuB,GAAO/C,UAAW,yBAAM4B,QAAN,IAAMA,OAAN,EAAMA,EAAa,CAAES,KAAAA,WAjB/EA,IAsBnB9B,UAAU,cAnEO,KA0E3B,IAAM6C,EAAQ,SAACtD,GACb,IAAQwD,EAAqBxD,EAArBwD,iBACR,OAAO,gBAAK/C,UAAU,YAAf,SAA4B+C,M,qHC5F/BC,EAAU,IAEVC,EAAAA,SAAAA,IAAAA,EAAAA,EAAAA,GAAAA,EAAAA,GAAAA,IAAAA,GAAAA,EAAAA,EAAAA,GAAAA,GAAAA,SAAAA,IAAAA,OAAAA,EAAAA,EAAAA,GAAAA,KAAAA,GAAAA,EAAAA,MAAAA,KAAAA,WAkBH,OAlBGA,EAAAA,EAAAA,GAAAA,EAAAA,CAAAA,CAAAA,IAAAA,YAAAA,MACJ,SAAUC,GACR,OAAOC,KAAKC,KAAL,UAAaD,KAAKE,MAAlB,UAAiC,CAAEH,IAAAA,GAAO,CAAEF,QAAAA,MACpD,qBACD,SAAQE,GACN,OAAOC,KAAKC,KAAL,UAAaD,KAAKE,MAAlB,QAA+B,CAAEH,IAAAA,GAAO,CAAEF,QAAAA,MAClD,uBAED,SAAUE,GACR,OAAOC,KAAKC,KAAL,UAAaD,KAAKE,MAAlB,UAAiC,CAAEH,IAAAA,GAAO,CAAEF,QAAAA,MACpD,yBAED,SAAYM,GACV,OAAOH,KAAKI,OAAL,UAAeJ,KAAKE,MAApB,gBAAiCC,EAAjC,KAA8C,CAAEN,QAAAA,MACxD,wBAED,SAAWM,EAAkBE,GAC3B,OAAOL,KAAKC,KAAL,UAAaD,KAAKE,MAAlB,gBAA+BC,EAA/B,gBAAiDE,GAAU,CAAER,QAAAA,QACrE,EAlBGC,CAA6BQ,EAAAA,IAqBtBxC,EAAgB,eAACY,EAAD,uDAA2B,GAA3B,OAC3B6B,EAAAA,EAAAA,IAAoD7B,EAAM,iBAAkBoB","sources":["../../../../shopy/shopy-storejs/src/Supplier/components.tsx","../../../../shopy/shopy-storejs/src/Supplier/index.tsx","../../../../shopy/shopy-storejs/src/Supplier/models.tsx"],"sourcesContent":["import * as React from 'react';\n\nimport { Button, ConfirmButton, Icons } from '@miq/componentjs';\nimport { IFormUpdateProps } from '@miq/formjs';\nimport { getCN } from '@miq/utiljs';\nimport { TSupplierOrderInstance } from './models';\n\ntype TSupplierOrderDeleteButtonProps = Omit<IFormUpdateProps<TSupplierOrderInstance>, 'context'> & {\n  label?: string;\n};\n\nexport const SupplierOrderDeleteButton: React.FC<TSupplierOrderDeleteButtonProps> = (props) => {\n  const { instance, onSuccess, onError, label } = props;\n\n  const handleDelete = (setOpen: any) => {\n    instance\n      .destroy()\n      .then((res) => {\n        setOpen?.(false);\n        onSuccess?.(res);\n        // emitter.destroy({ slug: instance.slug });\n      })\n      .catch((err) => onError?.(err));\n  };\n\n  return (\n    <ConfirmButton\n      renderHeader={() => <div>Supprimer '{instance.name}'</div>}\n      renderFooter={({ setOpen }) => (\n        <div className=\"d-flex justify-content-between align-items-center\">\n          <Button onClick={() => setOpen(false)}>Annuler</Button>\n\n          <Button onClick={() => handleDelete(setOpen)} className=\"btn-danger\">\n            Supprimer\n          </Button>\n        </div>\n      )}\n      render={() => <div className=\"p-3\">Are you sure you want to delete this</div>}\n      className={getCN(['s-order-delete-button btn-danger-3', props.className])}\n    >\n      <Icons.Trash />\n      {label && <span className=\"label\">{label}</span>}\n    </ConfirmButton>\n  );\n};\n","import * as React from 'react';\n\nimport { useRequest } from '@miq/hookjs';\nimport Staff from '@miq/staffjs';\nimport { getCN, Response } from '@miq/utiljs';\nimport { useNavigate, useSearchParams } from 'react-router-dom';\nimport { SupplierOrder } from './models';\nimport { Pagination, Table } from '@miq/componentjs';\nimport { SupplierOrderType } from '../types';\nimport { SupplierOrderDeleteButton } from './components';\n\nexport default function SupplierOrderIndexView() {\n  const navigate = useNavigate();\n  const [params] = useSearchParams();\n  const page = params.get('page');\n\n  const { res, removeItem } = useRequest(() => SupplierOrder().list({ params: { page } }), { refreshDeps: [page] });\n\n  const r = new Response(res);\n  if (!r.isSuccess) return null;\n\n  return (\n    <Staff.View\n      title=\"Orders\"\n      back=\"/staff/store/\"\n      actions={\n        <Staff.Button\n          onClick={() => {\n            SupplierOrder()\n              .create({})\n              .then(({ data }: any) => {\n                return navigate(`${data.slug}/`);\n              })\n              .catch((err: any) => {\n                // console.log(err);\n              });\n          }}\n          className=\"btn-primary-3\"\n          requiredPerms={['store.add_supplierorder']}\n          title={'Add a new order'}\n        >\n          Add order\n        </Staff.Button>\n      }\n      requiredPerms={['store.view_supplierorder']}\n    >\n      <Staff.Section footer={<Pagination {...r.data} component={Staff.Link} to />}>\n        <Table\n          border\n          items={r.items}\n          header={\n            <>\n              <Table.Th />\n              <Table.Th>Items</Table.Th>\n\n              <Table.Th>Total Cost</Table.Th>\n              <Table.Th>Est. Revenue</Table.Th>\n              <Table.Th />\n            </>\n          }\n          renderItem={(item: SupplierOrderType) => {\n            const { name = 'New order', slug, is_paid, items, items_revenue } = item;\n\n            return (\n              <Table.Tr key={slug}>\n                <Table.Td>\n                  <Staff.Link to={`${slug}/`} className=\"\">\n                    <div className={getCN(['fw-bold text-ellipsis', is_paid && 'text-line-through'])}>{name}</div>\n                  </Staff.Link>\n                  <span className=\"text-sm\">{item.avg_cost}</span>\n                </Table.Td>\n\n                <Table.Td>{items?.length}</Table.Td>\n                <Table.Td>\n                  <Price {...item.total_cost_data} />\n                </Table.Td>\n                <Table.Td>\n                  <Price {...items_revenue} />\n                </Table.Td>\n\n                <Table.Td>\n                  <SupplierOrderDeleteButton instance={SupplierOrder(item)} onSuccess={() => removeItem?.({ slug })} />\n                </Table.Td>\n              </Table.Tr>\n            );\n          }}\n          className=\"w-100\"\n        />\n      </Staff.Section>\n    </Staff.View>\n  );\n}\n\nconst Price = (props: any) => {\n  const { amountWithSymbol } = props;\n  return <div className=\"miq-price\">{amountWithSymbol}</div>;\n};\n\nexport * from './models';\n\n// <div className=\"miq-container\">\n","import { StaffModel, StaffService } from '@miq/staffjs';\nimport { SupplierOrderType } from '../types';\n\nconst timeout = 10000;\n\nclass SupplierOrderService extends StaffService<SupplierOrderType> {\n  postFnova(url: string) {\n    return this.post(`${this._path}fnova/`, { url }, { timeout });\n  }\n  postPlt(url: string) {\n    return this.post(`${this._path}plt/`, { url }, { timeout });\n  }\n\n  postShein(url: string) {\n    return this.post(`${this._path}shein/`, { url }, { timeout });\n  }\n\n  destroyItem(prodSlug: string) {\n    return this.delete(`${this._path}item/${prodSlug}/`, { timeout });\n  }\n\n  updateItem(prodSlug: string, values: Record<string, any>) {\n    return this.post(`${this._path}item/${prodSlug}/`, { ...values }, { timeout });\n  }\n}\n\nexport const SupplierOrder = (data: SupplierOrderType = {}) =>\n  StaffModel<SupplierOrderType, SupplierOrderService>(data, 'supplierorders', SupplierOrderService);\n\nexport type TSupplierOrderInstance = ReturnType<typeof SupplierOrder>;\n\nexport type SupplierType = {\n  slug?: string;\n  name_choices: any;\n  created: any;\n  updated: any;\n};\n"],"names":["SupplierOrderDeleteButton","props","instance","onSuccess","onError","label","renderHeader","name","renderFooter","setOpen","className","onClick","destroy","then","res","catch","err","handleDelete","render","getCN","SupplierOrderIndexView","navigate","useNavigate","useSearchParams","page","get","useRequest","SupplierOrder","list","params","refreshDeps","removeItem","r","Response","isSuccess","title","back","actions","create","data","slug","requiredPerms","footer","component","Staff","to","border","items","header","renderItem","item","is_paid","items_revenue","avg_cost","length","Price","total_cost_data","amountWithSymbol","timeout","SupplierOrderService","url","this","post","_path","prodSlug","delete","values","StaffService","StaffModel"],"sourceRoot":""}
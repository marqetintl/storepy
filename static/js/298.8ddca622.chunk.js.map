{"version":3,"file":"static/js/298.8ddca622.chunk.js","mappings":"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","sources":["../../../../shopy/shopy-storejs/src/Product/IndexView.tsx","../../../../shopy/shopy-storejs/src/Product/components.tsx","../../../../shopy/shopy-storejs/src/Product/models.tsx","../../../../shopy/shopy-storejs/src/Product/utils.ts","../../../../shopy/shopy-storejs/src/components.tsx","../../../../shopy/shopy-storejs/src/events/index.tsx"],"sourcesContent":["import * as React from 'react';\nimport { Routes, Route, useSearchParams } from 'react-router-dom';\n\nimport Staff, { StaffImg } from '@miq/staffjs';\nimport { Response } from '@miq/utiljs';\nimport { Table, Pagination, Viewports } from '@miq/componentjs';\n\nimport './indexview.scss';\n\nimport { StaffProduct } from './models';\nimport { PriceDisplay, ProductPriceDisplay, PublishedIcon } from '../components';\nimport { ProductType } from '../types';\nimport { ProductCardList } from './components';\nimport { useCrudEmitter } from '../events';\nimport { ProductListFilterForm } from './forms';\nimport { useProductListRequest } from './utils';\n\nconst ProductCreateView = React.lazy(() => import('./CreateView'));\nconst ProductStaffUpdateView = React.lazy(() => import('./UpdateView'));\n\nexport default function ProductStaffIndexView() {\n  const { res, ...rest } = useProductListRequest();\n  useCrudEmitter({ onUpdate: rest.updateItem, onDestroy: rest.removeItem });\n\n  const r = new Response(res);\n\n  if (!r.isSuccess) return null;\n\n  return (\n    <Routes>\n      <Route path=\":prodSlug/\" element={<UpdateView {...{ response: r }} />} />\n      <Route path=\"new\" element={<ProductCreateView />} />\n      <Route\n        index\n        element={\n          <Staff.View\n            title=\"Products\"\n            back=\"/staff/store/\"\n            actions={\n              <Staff.Link to=\"new/\" requiredPerms={['store.add_product']} className=\"btn btn-primary-3\">\n                Add product\n              </Staff.Link>\n            }\n            requiredPerms={['store.view_product']}\n          >\n            <ProductListFilterForm categories={r.data?.categories} />\n            <ProductStaffTable response={r} />\n          </Staff.View>\n        }\n      />\n    </Routes>\n  );\n}\n\nconst UpdateView = ({ response }: { response: Response }) => {\n  return (\n    <div className=\"d-grid grid-xl-4 gap-1\">\n      <Viewports.XLUp>\n        <ProductCardList items={response.items} itempath=\"../\" />\n      </Viewports.XLUp>\n\n      <div className=\"span-xl-3\">\n        <ProductStaffUpdateView back=\"/staff/store/products/\" />\n      </div>\n    </div>\n  );\n};\n\nconst ProductStaffTable: React.FC<{ response: Response }> = (props) => {\n  const { response } = props;\n  const [params] = useSearchParams();\n\n  if (response.items.length === 0)\n    return (\n      <div className=\"text-center p-staff-list-empty py-3 my-3\">\n        <p className=\"fw-light text-md\">Add products to your shop to get started</p>\n        <div className=\"my-4\">\n          <Staff.Link to=\"new/\" requiredPerms={['store.add_product']} className=\"btn btn-primary btn-md\">\n            Add a new product\n          </Staff.Link>\n        </div>\n      </div>\n    );\n\n  return (\n    <div className=\"\">\n      <Table\n        items={response.items}\n        header={\n          <>\n            <Table.Th>Product</Table.Th>\n            <Table.Th />\n            <Table.Th>Price</Table.Th>\n            <Table.Th>Availability</Table.Th>\n          </>\n        }\n        className=\"product-staff-table w-100\"\n        renderItem={(product: ProductType) => {\n          if (!product?.slug) return null;\n\n          const instance = StaffProduct(product);\n          const to = `${instance.slug}/${`${params}` ? `?${params}` : ''}`;\n          return (\n            <Table.Tr key={product.slug}>\n              <Table.Th>\n                <StaffImg.Thumb {...product?.cover_data} className=\"rounded\" />\n              </Table.Th>\n\n              <Table.Td>\n                <Staff.Link to={to}>\n                  <div className=\"text-ellipsis\">\n                    {product.name}\n                    <PublishedIcon show={product.is_published || false} />\n                  </div>\n                  <div className=\"\">{product.category_data?.name}</div>\n                </Staff.Link>\n              </Table.Td>\n\n              <Table.Td>\n                <PriceDisplay {...product.retail_price_data} lineThrough={product.is_on_sale} />\n              </Table.Td>\n              <Table.Td>{product.is_oos && 'Out of stock'}</Table.Td>\n            </Table.Tr>\n          );\n        }}\n      />\n\n      <Pagination {...response.data} component={Staff.Link} to />\n    </div>\n  );\n};\n","import { NavLink, useSearchParams } from 'react-router-dom';\n\nimport { ImgAddButtonProps, StaffImg, StaffImgAddButton } from '@miq/staffjs';\nimport { IFormUpdateProps } from '@miq/formjs';\nimport { getCN } from '@miq/utiljs';\nimport { Button, ConfirmButton, Icons, ImgType } from '@miq/componentjs';\n\nimport { emitter } from '../events';\nimport { ProductType } from '../types';\nimport { ProductPriceDisplay, PublishedIcon } from '../components';\n\nimport { StaffProduct, TStaffProductInstance } from './models';\n\n//#region ============================== BUTTONS\n\nexport type ProductImagesAddButtonProps = Omit<ImgAddButtonProps, 'onSuccessMulti' | 'onErrorMulti'> & {\n  productInstance: TStaffProductInstance;\n};\n\n/**\n * Button component for adding images to a product\n * ```js\n * <ProductImagesAddButton productInstance={instance} onSuccess={(res: any) => onUpdate?.(res.data)} />\n * ```\n */\n\nexport const ProductImagesAddButton = (props: ProductImagesAddButtonProps) => {\n  const { productInstance, onSuccess, onError, ...rest } = props;\n  return (\n    <StaffImgAddButton\n      className=\"btn-primary-3\"\n      {...rest}\n      multiple={true}\n      onSuccessMulti={(resArray) => {\n        const imgsArray = resArray\n          .map(({ data }: any) => data?.slug)\n          .filter((slug) => !productInstance.images?.includes(slug));\n        return productInstance\n          .update({ images: [...productInstance.images!, ...imgsArray] })\n          .then((res) => onSuccess?.(res))\n          .catch((err) => onError?.(err));\n      }}\n    />\n  );\n};\n\nexport const ProductDeleteButton: React.FC<\n  Omit<IFormUpdateProps<TStaffProductInstance>, 'context'> & { label?: string }\n> = (props) => {\n  const { instance, onSuccess, onError, label } = props;\n\n  const handleDelete = (setOpen: any) => {\n    instance\n      .destroy()\n      .then((res: any) => {\n        setOpen?.(false);\n        onSuccess?.(res);\n        emitter.destroy({ slug: instance.slug });\n      })\n      .catch((err: any) => onError?.(err));\n  };\n  return (\n    <ConfirmButton\n      renderHeader={() => <div>Supprimer '{instance.name}'</div>}\n      renderFooter={({ setOpen }) => (\n        <div className=\"d-flex justify-content-between align-items-center\">\n          <Button onClick={() => setOpen(false)}>Annuler</Button>\n\n          <Button onClick={() => handleDelete(setOpen)} className=\"btn-danger\">\n            Supprimer\n          </Button>\n        </div>\n      )}\n      render={() => <div className=\"p-3\">Are you sure you want to delete this</div>}\n      className={getCN(['product-delete-button btn-danger-3', props.className])}\n    >\n      <Icons.Trash />\n      {label && <span className=\"label\">{label}</span>}\n    </ConfirmButton>\n  );\n};\n\n//#endregion ============================== BUTTONS\n\nexport const ProductCardItem = ({ data, ...props }: { data: ProductType }) => {\n  const instance = StaffProduct(data);\n\n  return (\n    <div className=\"p-card-list-item p-1 mb-1\">\n      <div className=\"d-flex align-items-center\">\n        <div className=\"p-name text-ellipsis\">{instance.name_truncated}</div>\n        <div className=\"ms-1\">\n          <PublishedIcon show={instance.is_published} />\n        </div>\n      </div>\n\n      <div className=\"d-flex\">\n        <StaffImg.Square {...instance?.cover_data} />\n        <div className=\"p-info ps-1\">\n          <ProductPriceDisplay {...instance.export()} className=\"d-flex flex-wrap\" />\n          <div className=\"p-category\">{instance.category_data?.name}</div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport type ProductCardListProps = {\n  items: ProductType[];\n  itempath: string;\n};\nexport const ProductCardList = ({ items, itempath }: ProductCardListProps) => {\n  const [params] = useSearchParams();\n  return (\n    <div className=\"p-card-list-items\">\n      {items.map((item: ProductType) => {\n        // let to = `${itempath}${item.slug}/?${params}`;\n        let to = `${itempath}${item.slug}/?${params}`;\n        return (\n          <NavLink to={to} key={item.slug}>\n            <ProductCardItem data={item} />\n          </NavLink>\n        );\n      })}\n    </div>\n  );\n};\n","import { StaffModel, StaffService } from '@miq/staffjs';\nimport { ProductType } from '../types';\n\nclass StaffProductService extends StaffService<ProductType> {\n  publish() {\n    return this.patch(`${this._path}publish/`, { is_published: true });\n  }\n\n  unpublish() {\n    return this.patch(`${this._path}publish/`, { is_published: false });\n  }\n\n  postSize(values: any) {\n    return this.post(`${this._path}size/new/`, values);\n  }\n  patchSize(sizeSlug: string, values: any) {\n    return this.patch(`${this._path}size/${sizeSlug}/`, values);\n  }\n  deleteSize(sizeSlug: string) {\n    return this.delete(`${this._path}size/${sizeSlug}/`);\n  }\n  postAttribute(values: any) {\n    return this.post(`${this._path}attribute/new/`, values);\n  }\n  patchAttribute(attrSlug: string, values: any) {\n    return this.patch(`${this._path}attribute/${attrSlug}/`, values);\n  }\n  deleteAttribute(attrSlug: string) {\n    return this.delete(`${this._path}attribute/${attrSlug}/`);\n  }\n  swapCover(slug: string) {\n    return this.patch(`${this._path}swap-cover/`, { slug });\n  }\n}\n\nexport const StaffProduct = (data: ProductType = {}) => {\n  let { dt_published } = data;\n  if (dt_published) dt_published = new Date(dt_published);\n\n  return StaffModel<ProductType, StaffProductService>({ ...data, dt_published }, 'products', StaffProductService);\n};\n\nexport type TStaffProductInstance = ReturnType<typeof StaffProduct>;\n","import { useSearchParams } from 'react-router-dom';\n\nimport { useRequest } from '@miq/hookjs';\nimport { StaffProduct } from './models';\n\nexport const useProductListRequest = (orderSlug?: string) => {\n  const [params] = useSearchParams();\n\n  const q = params.get('q');\n  const cat = params.get('cat');\n  const page = params.get('page');\n  const published = params.get('published');\n  const presale = params.get('presale');\n  const sale = params.get('sale');\n\n  let searchParams: any = { page, cat, published, presale, sale, q };\n  if (orderSlug) searchParams.supplier_order_slug = orderSlug;\n\n  return useRequest(() => StaffProduct().list({ params: searchParams }), {\n    refreshDeps: [q, page, cat, published, presale, sale, orderSlug],\n  });\n};\n","import React from 'react';\nimport { Button, ButtonProps, Icons, ToastEmitter } from '@miq/componentjs';\n\n// https://www.bennadel.com/blog/3961-having-fun-with-the-horizontal-usage-of-position-sticky-in-angular-11-0-5.htm\n\nimport './component.scss';\n\nimport { StaffCategory } from './Category';\nimport { StaffProduct } from './Product';\nimport { PriceDataType, ProductType } from './types';\nimport { getCN } from '@miq/utiljs';\n\ntype InstanceType = ReturnType<typeof StaffProduct> | ReturnType<typeof StaffCategory>;\n\ninterface UpdateButtonProps extends ButtonProps {\n  instance: InstanceType;\n  onSuccess: (r: any) => void;\n}\n\nexport const PublishButton: React.FC<UpdateButtonProps> = (props) => {\n  const { instance, onClick, onSuccess, onError, ...rest } = props;\n\n  const handleClick = () => {\n    if (instance.is_published) return null;\n    return instance\n      .publish()\n      .then((res: any) => onSuccess?.(res))\n      .catch((err: any) => onError?.(err));\n  };\n\n  return <Button onClick={handleClick} className=\"btn-primary btn-md\" {...rest} disabled={instance.is_published} />;\n};\n\nexport const UnPublishButton: React.FC<UpdateButtonProps> = (props) => {\n  const { instance, onClick, onSuccess, onError, ...rest } = props;\n\n  const handleClick = () => {\n    if (!instance.is_published) return null;\n    return instance\n      .unpublish()\n      .then((res: any) => onSuccess?.(res))\n      .catch((err: any) => onError?.(err));\n  };\n\n  return <Button className=\"btn-danger btn-md\" onClick={handleClick} {...rest} disabled={!instance.is_published} />;\n};\n\n//#region ================================== COMPONENTS =============================================================\n\nexport type PriceDisplayProps = PriceDataType & {\n  className?: string;\n  sale?: string | boolean;\n  lineThrough?: string | boolean;\n};\n\nexport const PriceDisplay = ({ amountWithSymbol, className, sale, lineThrough }: PriceDisplayProps) => (\n  <div className={getCN(['miq-price-display', sale && 'text-danger', lineThrough && 'text-line-through', className])}>\n    {amountWithSymbol}\n  </div>\n);\n\nexport const ProductPriceDisplay = ({\n  retail_price_data,\n  is_on_sale,\n  sale_price_data,\n  ...props\n}: ProductType & { className?: string; style?: any }) => {\n  if (!retail_price_data) return null;\n\n  const isSale = is_on_sale && sale_price_data?.amountWithSymbol != null;\n\n  return (\n    <div className={getCN(['miq-product-price-display', props.className])} style={props.style}>\n      {isSale && <PriceDisplay sale {...sale_price_data} className=\"miq-sale-price me-1\" />}\n      <PriceDisplay {...retail_price_data} lineThrough={isSale} className=\"miq-retail-price\" />\n    </div>\n  );\n};\n\nexport const ProductSupplierData = (props: { instance: InstanceType }) => {\n  // const { instance } = props;\n\n  return (\n    <div className=\"supplier-data\">\n      <div className=\"item\">\n        <span className=\"title\">Supplier</span>\n        {/* <span className=\"value\">{instance.supplier_name}</span> */}\n      </div>\n      <div className=\"item\">\n        <span className=\"title\">Item ID</span>\n        {/* <span className=\"value\">{instance.supplier_item_id}</span> */}\n      </div>\n      <div className=\"item\">\n        <span className=\"title\">Category</span>\n        {/* <span className=\"value\">{instance.supplier_item_category}</span> */}\n      </div>\n      <div className=\"item\">\n        <span className=\"title\"> Item cost</span>\n        <span className=\"value\">{/* {instance.supplier_item_cost} ({instance.supplier_item_cost_currency}) */}</span>\n      </div>\n    </div>\n  );\n};\n\nexport const PublishedIcon = ({ show, ...props }: React.ComponentPropsWithoutRef<'svg'> & { show?: boolean }) =>\n  show ? <Icons.CheckCircle {...props} className=\"published-icon\" /> : null;\n\n//#endregion ===============================================================================================\n\nexport const toast = new ToastEmitter();\n\n{\n  /* <Toaster instance={t}></Toaster> */\n}\n// <button\n//   onClick={() => {\n//     t.info({ message: 'Hello', autoClose: true });\n//   }}\n// >\n//   Click me\n// </button>\n","import * as React from 'react';\nimport EventEmitter from 'events';\n\ninterface IEventStateSyncProps {\n  children?: React.ReactNode;\n}\n\nclass CrudEmitter extends EventEmitter {\n  prefix?: string;\n\n  constructor(...args: any) {\n    const { prefix = '', ...rest } = args;\n    super(rest);\n\n    this.prefix = prefix;\n  }\n\n  create(payload: any) {\n    this.emit(`${this.prefix}-create`, payload);\n  }\n  retrieve(payload: any) {\n    this.emit(`${this.prefix}-retrieve`, payload);\n  }\n  list(payload: any) {\n    this.emit(`${this.prefix}-list`, payload);\n  }\n  update(payload: any) {\n    this.emit(`${this.prefix}-update`, payload);\n  }\n  destroy(payload: any) {\n    this.emit(`${this.prefix}-destroy`, payload);\n  }\n}\n\nexport const emitter = new CrudEmitter();\n\ntype FN<T> = T & { [key: string]: any; slug: string };\n\ntype CallBacksType<T = void> = {\n  onList?: () => void;\n  onRetrieve?: () => void;\n  onCreate?: (payload: FN<T>) => void;\n  onUpdate?: (payload: FN<T>) => void;\n  onDestroy?: (payload: FN<T>) => void;\n};\n\nexport function useCrudEmitter(callbacks: CallBacksType, match?: (p: any) => boolean) {\n  React.useEffect(() => {\n    emitter.on('-create', (payload: any) => {\n      if (match && !match(payload)) return;\n\n      callbacks.onCreate?.(payload);\n    });\n\n    emitter.on('-update', (payload: any) => {\n      if (match && !match(payload)) return;\n\n      callbacks.onUpdate?.(payload);\n    });\n\n    emitter.on('-destroy', (payload: any) => {\n      if (match && !match(payload)) return;\n\n      callbacks.onDestroy?.(payload);\n    });\n  }, []);\n}\n"],"names":["ProductCreateView","React","ProductStaffUpdateView","ProductStaffIndexView","useProductListRequest","res","rest","useCrudEmitter","onUpdate","updateItem","onDestroy","removeItem","r","Response","isSuccess","path","element","UpdateView","response","index","title","back","actions","to","requiredPerms","className","categories","data","ProductStaffTable","items","itempath","props","useSearchParams","params","length","header","renderItem","product","slug","instance","StaffProduct","cover_data","name","show","is_published","category_data","retail_price_data","lineThrough","is_on_sale","is_oos","component","Staff","ProductImagesAddButton","productInstance","onSuccess","onError","multiple","onSuccessMulti","resArray","imgsArray","map","filter","images","includes","update","then","catch","err","ProductDeleteButton","label","renderHeader","renderFooter","setOpen","onClick","destroy","emitter","handleDelete","render","getCN","ProductCardItem","name_truncated","export","ProductCardList","item","StaffProductService","this","patch","_path","values","post","sizeSlug","delete","attrSlug","StaffService","dt_published","Date","StaffModel","orderSlug","q","get","cat","page","published","presale","sale","searchParams","supplier_order_slug","useRequest","list","refreshDeps","PublishButton","publish","disabled","UnPublishButton","unpublish","PriceDisplay","amountWithSymbol","ProductPriceDisplay","sale_price_data","isSale","style","PublishedIcon","ToastEmitter","CrudEmitter","args","prefix","payload","emit","EventEmitter","callbacks","match","on","onCreate","call"],"sourceRoot":""}
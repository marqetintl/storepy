{"version":3,"sources":["shop/product/utils.jsx","shop/product/index.jsx"],"names":["productServices","path","prodSlug","this","patchPath","values","postPath","timeout","attrSlug","oldValues","deletePath","StaffService","StaffProductAddView","lazy","StaffProductUpdateView","StaffProductIndexView","props","useState","data","setData","perms","useContext","SharedDataCtx","search","location","useEffect","params","URLSearchParams","filter","i","length","list","then","catch","err","canAdd","hasPerms","title","back","actions","label","to","addForwardSlash","match","url","disabled","className","results","Section","items","renderItem","prod","Tr","Td","cover_data","slug","name","category_data","is_pre_sale","is_on_sale","sale_price","retail_price","is_published","page","pill","pagination","count","next","previous","StaffProductRoutes","render","args","requiredPerms"],"mappings":"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","file":"static/js/5.9275f624.chunk.js","sourcesContent":["import { StaffService } from \"@miq/utils\";\n\nclass StaffProductService extends StaffService {\n  constructor(path) {\n    super(path);\n  }\n\n  publish(prodSlug) {\n    return this.patchPath(`${this.path}${prodSlug}/publish/`, {});\n  }\n\n  getSheinProductData(values) {\n    return this.postPath(`${this.path}shein/`, values, { timeout: 10000 });\n  }\n\n  // ATTR\n\n  postAttribute(prodSlug, values) {\n    return this.postPath(`${this.path}${prodSlug}/attribute/new/`, values);\n  }\n\n  patchAttribute(prodSlug, attrSlug, values, oldValues) {\n    return this.patchPath(`${this.path}${prodSlug}/attribute/${attrSlug}/`, values, oldValues);\n  }\n\n  deleteAttribute(prodSlug, attrSlug) {\n    return this.deletePath(`${this.path}${prodSlug}/attribute/${attrSlug}/`);\n  }\n\n  // PAGE\n\n  patchPage(prodSlug, values, oldValues) {\n    return this.patchPath(`${this.path}${prodSlug}/page/`, values, oldValues);\n  }\n}\n\nexport const productServices = new StaffProductService(\"products/\");\n","import React, { lazy, useState, useContext, useEffect } from \"react\";\nimport { Switch, Link } from \"react-router-dom\";\n\nimport \"./index.scss\";\n\nimport { SharedDataCtx } from \"@miq/contexts\";\nimport { AdminRoute, AdminNavLink, AdminView, hasPerms, PublishedStatusSpan } from \"@miq/adminjs\";\nimport { addForwardSlash } from \"@miq/utils\";\nimport { Table, ItemTable, Button, ImgSquare } from \"@miq/components\";\n\nimport { productServices } from \"./utils\";\n\nconst StaffProductAddView = lazy(() => import(\"./AddView\"));\nconst StaffProductUpdateView = lazy(() => import(\"./UpdateView\"));\n\nconst StaffProductIndexView = (props) => {\n  const [data, setData] = useState({});\n  const { perms } = useContext(SharedDataCtx);\n\n  const { search } = props.location;\n  useEffect(() => {\n    let params = new URLSearchParams(search);\n    if (![...params.values()].filter((i) => i).length) {\n      params = null;\n    }\n\n    productServices\n      .list(params)\n      .then((data) => {\n        setData(data);\n      })\n      .catch((err) => {});\n  }, [search]);\n\n  const canAdd = hasPerms(perms.perms, [\"shop.add_product\"]);\n\n  return (\n    <AdminView\n      title=\"Products\"\n      back={props.back}\n      actions={\n        <AdminNavLink\n          label=\"Add product\"\n          to={`${addForwardSlash(props.match.url)}new/`}\n          disabled={!canAdd}\n          className=\"btn-primary\"\n        />\n      }\n    >\n      {data?.results && (\n        <AdminView.Section className=\"product-table mb-3\">\n          <ItemTable\n            className=\"w-100\"\n            items={data.results}\n            renderItem={(prod) => {\n              return (\n                <Table.Tr className=\"border-bottom\" key={prod.slug}>\n                  <Table.Td className=\"\">\n                    <ImgSquare {...prod.cover_data} className=\"rounded\" />\n                  </Table.Td>\n\n                  <Table.Td className=\"\">\n                    <Link to={`${addForwardSlash(props.match.url)}${prod.slug}/`}>\n                      <div className=\"fw-bold\" title={prod.name}>\n                        {prod.name}\n                      </div>\n                    </Link>\n                    <div className=\"text-muted text-sm\">\n                      {prod.category_data && <span className=\"me-1\">{prod.category_data.name}</span>}\n                      {prod.is_pre_sale && <span className=\"me-1\">Pre sale</span>}\n                    </div>\n                  </Table.Td>\n\n                  <Table.Td className=\"d-none d-md-table-cell text-sm text-center\"></Table.Td>\n\n                  <Table.Td className=\"\">\n                    {prod.is_on_sale ? (\n                      <span className=\"text-danger\">{prod.sale_price}</span>\n                    ) : (\n                      <span className=\"\">{prod.retail_price}</span>\n                    )}\n                  </Table.Td>\n\n                  <Table.Td className=\"d-none d-md-table-cell text-sm text-center\">\n                    <PublishedStatusSpan is_published={prod?.page?.is_published} pill />\n                  </Table.Td>\n                </Table.Tr>\n              );\n            }}\n            pagination={{\n              count: data.count,\n              next: data.next,\n              previous: data.previous,\n              // onPreviousClick: handlePreviousClick,\n              // onNextClick: handleNextClick,\n            }}\n          />\n        </AdminView.Section>\n      )}\n    </AdminView>\n  );\n};\n\nexport default function StaffProductRoutes(props) {\n  const { path, url } = props.match;\n\n  return (\n    <Switch>\n      <AdminRoute\n        path={`${path}new/`}\n        render={(args) => <StaffProductAddView back={addForwardSlash(url)} {...args} />}\n        requiredPerms={[\"shop.add_product\"]}\n      />\n      <AdminRoute\n        path={`${path}:prodSlug/`}\n        render={(args) => <StaffProductUpdateView back={addForwardSlash(url)} {...args} />}\n        requiredPerms={[\"shop.change_product\"]}\n      />\n      <AdminRoute\n        requiredPerms={[\"shop.view_product\"]}\n        render={(args) => <StaffProductIndexView {...args} back={props.back} />}\n      />\n    </Switch>\n  );\n}\n"],"sourceRoot":""}
{"version":3,"sources":["shop/orders/components.jsx","shop/product/components.jsx","shop/product/forms.jsx","shop/product/Attribute.jsx","shop/product/UpdateView.jsx"],"names":["SupplierData","product","className","supplier_name","supplier_item_id","supplier_item_category","supplier_item_cost","supplier_item_cost_currency","href","supplier_item_url","target","rel","ProductImageUploadButton","props","slug","multiple","onCreate","imgsArray","filter","img","productServices","patch","images","map","then","data","onCreateSuccess","catch","err","onCreateError","ProductImageAltTextInput","image","form","useForm","alt_text","imgSlug","setValues","useEffect","value","required","onSuccess","onError","placeholder","ProductQuickUpdateForm","setProduct","toast","categories","productSlug","ProductForm","context","onSubmit","e","preventDefault","fD","retail_price","values","is_on_sale","is_pre_sale","category","sale_price","is_pre_sale_text","success","message","error","handleError","Section","title","actions","is_published","page","pill","ProductNameInput","errors","name","ProductCategoryInput","ProductRetailPriceInput","ProductPresaleCheckboxInput","ProductPresaleTextInput","ProductOnSaleCheckboxInput","ProductSalePriceInput","Submit","cover","cover_data","imgData","onUpdate","onDelete","showLabel","label","input","rest","Label","TextInput","maxLength","SelectInput","nullValue","items","cat","Option","key","id","type","min","step","CheckboxInput","TextAreaX","children","fields","prodSlug","forEach","field","NameInput","CategoryInput","RetailPriceInput","PresaleCheckboxInput","PresaleTextInput","OnSaleCheckboxInput","SalePriceInput","StageSelect","stages","stage","AttrNameInput","minLength","AttrValueInput","AttributeUpdateForm","instance","patchAttribute","style","alignItems","Icon","Icons","Trash","render","args","onClick","deleteAttribute","setOpen","renderHeader","AttributeCreateForm","initValues","postAttribute","ViewTabs","tab","useState","addAtr","setAddAtr","text","productData","attributes","attr","pData","gap","images_data","i","slug_public","patchPage","delete","onSave","description","productFormDefaultValues","ProductUpdateView","match","params","setTab","useContext","ToastCtx","detail","response","console","log","status","back","prev_slug","next_slug","getClassName","history","push","ERRMSG","ProductPublishButton","unpublish","publish"],"mappings":"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","file":"static/js/0.6cfd65c3.chunk.js","sourcesContent":["export const SupplierData = ({ product, ...props }) => {\n  if (!product) return null;\n\n  return (\n    <div className=\"product-supplier-data\">\n      <ul>\n        <li>\n          <span className=\"\">Supplier</span>\n          <span className=\"\">{product.supplier_name}</span>\n        </li>\n        <li>\n          <span className=\"\">Item id</span>\n          <span className=\"\">{product.supplier_item_id}</span>\n        </li>\n        <li>\n          <span className=\"\">Category</span>\n          <span className=\"\">{product.supplier_item_category}</span>\n        </li>\n\n        <li>\n          <span className=\"\">Item cost</span>\n          <span className=\"\">\n            {product.supplier_item_cost} ({product.supplier_item_cost_currency})\n          </span>\n        </li>\n        <li>\n          <a href={product.supplier_item_url} className=\"text-underline\" target=\"_blank\" rel=\"noopener noreferrer\">\n            View supplier page\n          </a>\n        </li>\n      </ul>\n    </div>\n  );\n};\n","import React, { useEffect } from 'react';\nimport PropTypes from 'prop-types';\n\nimport Form, { useForm, FormProvider } from '@miq/form';\nimport { ImageAltTextInput } from '@miq/adminjs';\nimport { ImgUploadButton } from '@miq/components';\nimport { productServices } from './utils';\n\n//\n// ========================= FORM COMPONENTS ===================================================================\n//\n\nexport const ProductImageUploadButton = ({ product, ...props }) => {\n  if (!product || !product.slug) return null;\n\n  return (\n    <ImgUploadButton\n      multiple={true}\n      className=\"btn-primary-3\"\n      onCreate={(imgsArray) => {\n        imgsArray = imgsArray.filter((img) => img && img.slug);\n        return productServices\n          .patch(product.slug, { images: [...product.images, ...imgsArray.map((img) => img.slug)] })\n          .then((data) => {\n            if (props.onCreateSuccess) props.onCreateSuccess(data);\n          })\n          .catch((err) => {\n            if (props.onCreateError) props.onCreateError(err);\n          });\n      }}\n    />\n  );\n};\n\nexport const ProductImageAltTextInput = ({ image, ...props }) => {\n  const form = useForm({ alt_text: image?.alt_text || '' });\n\n  const imgSlug = image?.slug;\n  const alt_text = image?.alt_text;\n  const setValues = form.setValues;\n\n  useEffect(() => {\n    setValues({ alt_text });\n  }, [imgSlug, setValues, alt_text]);\n\n  if (!image || !image.slug) return null;\n\n  return (\n    <FormProvider value={form} className={props.className}>\n      <ImageAltTextInput\n        required\n        image={image}\n        onSuccess={props.onSuccess}\n        onError={props.onError}\n        placeholder=\"Add an alternative text ...\"\n      />\n    </FormProvider>\n  );\n};\n\nProductImageAltTextInput.propTypes = {\n  image: PropTypes.shape({\n    slug: PropTypes.string.isRequired,\n  }),\n\n  onUpdate: PropTypes.func,\n  onError: PropTypes.func,\n};\n\nexport const ProductCoverUploadButton = ({ children, product, ...props }) => {\n  if (!product || !product.slug) return null;\n\n  const handleCoverCreate = ({ slug }) => {\n    productServices\n      .patch(product.slug, { cover: slug })\n      .then((data) => {\n        if (props.onCreateSuccess) props.onCreateSuccess(data);\n      })\n      .catch((err) => {\n        if (props.onCreateError) props.onCreateError(err);\n      });\n  };\n  const handleCoverUpdate = (imgData) => {\n    if (props.onUpdateSuccess) props.onUpdateSuccess(imgData);\n  };\n\n  return (\n    <ImgUploadButton\n      slug={product.cover_data ? product.cover_data.slug : null}\n      onCreate={handleCoverCreate}\n      onUpdate={handleCoverUpdate}\n      className=\"product-cover-upload-button\"\n    >\n      {children}\n    </ImgUploadButton>\n  );\n};\n\nProductCoverUploadButton.propTypes = {\n  children: PropTypes.any.isRequired,\n  product: PropTypes.shape({ slug: PropTypes.string.isRequired }).isRequired,\n  onCreateSuccess: PropTypes.func,\n  onCreateError: PropTypes.func,\n  onUpdateSuccess: PropTypes.func,\n  onUpdateError: PropTypes.func,\n};\n","import { useEffect } from 'react';\nimport { AdminView, StaffCoverUpdateForm, PublishedStatusSpan } from '@miq/adminjs';\nimport Form from '@miq/form';\nimport { productServices } from './utils';\nimport { ProductImageAltTextInput } from './components';\n\nexport function ProductQuickUpdateForm({ form, product, ...props }) {\n  const { setProduct, toast, categories } = props;\n  const productSlug = product?.slug;\n\n  useEffect(() => {}, [productSlug]);\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    const fD = {\n      retail_price: form.values.retail_price,\n      is_on_sale: form.values.is_on_sale,\n      is_pre_sale: form.values.is_pre_sale,\n    };\n\n    if (form.values.category) fD.category = form.values.category;\n    if (form.values.is_on_sale) fD.sale_price = form.values.sale_price;\n\n    if (form.values.is_pre_sale) fD.is_pre_sale_text = form.values.is_pre_sale_text;\n\n    return productServices\n      .patch(product.slug, fD)\n      .then((data) => {\n        setProduct?.({ ...product, ...data });\n        toast?.success({ message: 'Product updated.' });\n      })\n      .catch((err) => {\n        toast?.error({ message: 'Could not update product.' });\n        return form.handleError(err);\n      });\n  };\n\n  return (\n    <ProductForm context={form} onSubmit={handleSubmit}>\n      <div className=\"d-grid grid-md-3 gap-3\">\n        <div className=\"span-md-2\">\n          <AdminView.Section\n            title=\"Details\"\n            actions={<PublishedStatusSpan is_published={product?.page?.is_published} pill />}\n          >\n            <div className=\"mb-1\">\n              <ProductNameInput error={form.errors.name} />\n            </div>\n\n            {categories && (\n              <div className=\"mb-1\">\n                <ProductCategoryInput categories={categories} error={form?.errors?.category} />\n              </div>\n            )}\n\n            <div className=\"mb-1\">\n              <div className=\"mb-1\">\n                <ProductRetailPriceInput error={form?.errors?.retail_price} />\n              </div>\n\n              {/* PRE SALE */}\n              <div className=\"mb-1\">\n                <div className=\"d-flex align-items-center mb-1\">\n                  <ProductPresaleCheckboxInput error={form?.errors?.is_pre_sale} />\n                </div>\n\n                {form.values.is_pre_sale && (\n                  <div className=\"mb-2\">\n                    <ProductPresaleTextInput error={form?.errors?.is_pre_sale_text} />\n                  </div>\n                )}\n              </div>\n\n              {/* SALE  */}\n              <div className=\"d-flex align-items-center mb-1\">\n                <ProductOnSaleCheckboxInput error={form?.errors?.is_on_sale} />\n              </div>\n\n              {form.values.is_on_sale && (\n                <div className=\"mb-2\">\n                  <ProductSalePriceInput error={form?.errors?.sale_price} />\n                </div>\n              )}\n            </div>\n\n            <div className=\"my-3\">\n              <Form.Submit value=\"Update product\" className=\"btn btn-primary-3\" />\n            </div>\n          </AdminView.Section>\n        </div>\n\n        <div className=\"\">\n          <StaffCoverUpdateForm\n            slug={product?.cover}\n            data={product.cover_data}\n            onCreate={(imgData) => {\n              productServices\n                .patch(product.slug, { cover: imgData.slug })\n                .then((data) => {\n                  setProduct?.({ ...product, ...data });\n                  toast?.success({ message: 'Product cover updated.' });\n                })\n                .catch((err) => {\n                  toast?.error({ message: 'Could not upload cover image.' });\n                });\n            }}\n            onUpdate={(cover_data) => {\n              toast?.success({ message: 'Product cover updated.' });\n              return setProduct?.({ ...product, cover_data });\n            }}\n            onDelete={() => {\n              return setProduct?.({ ...product, cover_data: null, cover: null });\n            }}\n            className=\"mb-1\"\n          />\n          <ProductImageAltTextInput image={product?.cover_data} />\n        </div>\n      </div>\n    </ProductForm>\n  );\n}\n\n// INPUTS\n\nexport const ProductNameInput = (props) => {\n  const { showLabel = true, label = 'Name', ...input } = props;\n  const { placeholder = 'Give a name to the item', ...rest } = input;\n  return (\n    <>\n      {showLabel && <Form.Label value={label} className=\"mb-1\" />}\n      <Form.TextInput {...rest} required name=\"name\" placeholder={placeholder} maxLength={99} />\n    </>\n  );\n};\n\nexport const ProductCategoryInput = (props) => {\n  const { showLabel = true, label = 'Category', ...input } = props;\n  const { categories, ...rest } = input;\n\n  return (\n    <>\n      {showLabel && <Form.Label value={label} />}\n      <Form.SelectInput {...rest} required name=\"category\" nullValue={{ label: 'Select category' }}>\n        {categories?.items?.map((cat) => {\n          return <Form.SelectInput.Option {...cat} key={cat.value} />;\n        })}\n      </Form.SelectInput>\n    </>\n  );\n};\n\nexport const ProductRetailPriceInput = (props) => {\n  const { showLabel = true, label = 'Retail price', ...rest } = props;\n\n  return (\n    <>\n      {showLabel && <Form.Label value={label} id=\"retail_price_label\" />}\n      <Form.TextInput\n        {...rest}\n        required\n        type=\"number\"\n        name=\"retail_price\"\n        aria-describedby=\"retail_price_label\"\n        min=\"0\"\n        step=\"0.01\"\n      />\n    </>\n  );\n};\n\nexport const ProductPresaleCheckboxInput = (props) => {\n  const { showLabel = true, label = 'Pre-sale', ...rest } = props;\n\n  return (\n    <div className=\"d-flex\">\n      <Form.CheckboxInput {...rest} name=\"is_pre_sale\" className=\"me-2\" />\n      <Form.Label value={label} />\n    </div>\n  );\n};\n\nexport const ProductPresaleTextInput = (props) => {\n  return (\n    <>\n      <Form.Label value=\"Pre sale text\" id=\"is_pre_sale_text_label\" className=\"miq-checkbox-label\" />\n      <Form.TextAreaX name=\"is_pre_sale_text\" aria-describedby=\"is_pre_sale_text_label\" />\n    </>\n  );\n};\n\nexport const ProductOnSaleCheckboxInput = (props) => {\n  const { showLabel = true, label = 'On Sale', ...rest } = props;\n\n  return (\n    <div className=\"d-flex\">\n      <Form.CheckboxInput {...rest} name=\"is_on_sale\" className=\"me-2\" />\n      <Form.Label value={label} />\n    </div>\n  );\n};\n\nexport const ProductSalePriceInput = (props) => {\n  const { showLabel = true, label = 'Sale price', ...rest } = props;\n  return (\n    <>\n      {showLabel && <Form.Label value={label} id=\"sale_price_label\" className=\"miq-checkbox-label\" />}\n      <Form.TextInput\n        {...rest}\n        required\n        type=\"number\"\n        name=\"sale_price\"\n        aria-describedby=\"sale_price_label\"\n        min=\"0\"\n        step=\"0.01\"\n      />\n    </>\n  );\n};\n\nexport const ProductStageSelect = (props) => {\n  const { showLabel = true, label = 'Stage', ...input } = props;\n  const { stages, name, ...rest } = input;\n\n  return (\n    <>\n      {showLabel && <Form.Label value={label} />}\n      <Form.SelectInput {...rest} required name={name || 'stage'} nullValue={{ label: 'Select stage' }}>\n        {stages?.map?.((stage) => {\n          return <Form.SelectInput.Option {...stage} key={stage.value} />;\n        })}\n      </Form.SelectInput>\n    </>\n  );\n};\n\nexport const ProductForm = ({ children, context, fields = [], prodSlug, ...props }) => {\n  const { onSuccess, onError, ...rest } = props;\n\n  const handleSubmit = (e) => {\n    if (!context || !fields) return;\n\n    e.preventDefault();\n    const fD = {\n      // name: context.values.name,\n      // retail_price: form.values.retail_price,\n      // is_on_sale: form.values.is_on_sale,\n      // is_pre_sale: form.values.is_pre_sale,\n    };\n\n    fields.forEach((field) => {\n      const value = context.values[field];\n      if (value == null) return;\n      fD[field] = value;\n    });\n\n    // if (form.values.category) fD.category = form.values.category;\n    // if (form.values.is_on_sale) fD.sale_price = form.values.sale_price;\n\n    // if (form.values.is_pre_sale) fD.is_pre_sale_text = form.values.is_pre_sale_text;\n    if (!prodSlug) return;\n\n    return productServices\n      .patch(prodSlug, fD)\n      .then((data) => {\n        props?.onSuccess?.(data);\n      })\n      .catch((err) => {\n        if (props.onError) return props?.onError?.(err);\n\n        return context?.handleError?.(err);\n      });\n  };\n  return (\n    <Form {...rest} context={context} onSubmit={props.onSubmit || handleSubmit}>\n      {children}\n    </Form>\n  );\n};\n\nProductForm.NameInput = ProductNameInput;\nProductForm.CategoryInput = ProductCategoryInput;\nProductForm.RetailPriceInput = ProductRetailPriceInput;\nProductForm.PresaleCheckboxInput = ProductPresaleCheckboxInput;\nProductForm.PresaleTextInput = ProductPresaleTextInput;\nProductForm.OnSaleCheckboxInput = ProductOnSaleCheckboxInput;\nProductForm.SalePriceInput = ProductSalePriceInput;\nProductForm.StageSelect = ProductStageSelect;\n","import { IBtnSave, ConfirmIconButton, Icons, Button } from '@miq/components'\n\nimport Form, { useForm } from '@miq/form'\nimport { productServices } from './utils'\n\nconst AttrNameInput = (props) => (\n  <Form.TextInput placeholder=\"Nom de l'attribut\" {...props} required name=\"name\" maxLength={30} minLength={3} />\n)\n\nconst AttrValueInput = (props) => (\n  <Form.TextInput placeholder=\"Valeur de l'attribut\" {...props} required name=\"value\" maxLength={99} minLength={3} />\n)\n\nexport const AttributeUpdateForm = ({ instance, product, ...props }) => {\n  const form = useForm({ name: instance?.name || '', value: instance?.value || '' })\n\n  if (!instance || !instance.slug || !product || !product.slug) return null\n\n  const handleSubmit = (e) => {\n    e.preventDefault()\n\n    return productServices\n      .patchAttribute(product.slug, instance.slug, form.values)\n      .then((data) => {\n        return props?.onSuccess(data)\n      })\n      .catch((err) => {\n        return form.handleError(err)\n      })\n  }\n\n  return (\n    <Form context={form} onSubmit={handleSubmit}>\n      <div className=\"d-flex flex-column flex-md-row\" style={{ alignItems: 'end' }}>\n        <div className=\"me-md-1\">\n          <AttrNameInput error={form.errors.name} />\n        </div>\n\n        <div className=\"w-100 me-md-1\">\n          <AttrValueInput error={form.errors.value} />\n        </div>\n\n        <div className=\"d-flex ms-md-1\">\n          <ConfirmIconButton\n            Icon={Icons.Trash}\n            render={(args) => (\n              <div className=\"p-3 w-100 d-flex justify-content-center\">\n                <div className=\"w-md-50 d-flex align-items-center justify-content-between\">\n                  <div>\n                    <Button\n                      onClick={() =>\n                        productServices\n                          .deleteAttribute(product.slug, instance.slug)\n                          .then((data) => {\n                            args?.setOpen(false)\n                            return props?.onSuccess(data)\n                          })\n                          .catch(() => {\n                            props?.toast?.error({ message: 'Could not delete attribute.' })\n                          })\n                      }\n                      className=\"btn-danger\"\n                    >\n                      Supprimer\n                    </Button>\n                  </div>\n                  <div>\n                    <Button onClick={() => args?.setOpen(false)}>Annuler</Button>\n                  </div>\n                </div>\n              </div>\n            )}\n            renderHeader={(args) => {\n              return (\n                <div className=\"p-3\">\n                  <div className=\"fw-bold\">Supprimer l'attribut \"{instance.name}\"</div>\n                </div>\n              )\n            }}\n            className=\"btn-danger-3 me-1\"\n          />\n          <Form.Submit value=\"Save\" className=\"btn btn-primary-2\" />\n        </div>\n      </div>\n    </Form>\n  )\n}\n\nexport function AttributeCreateForm({ product, ...props }) {\n  const initValues = { name: '', value: '' }\n  const form = useForm(initValues)\n\n  if (!product || !product.slug) return null\n\n  const handleSubmit = (e) => {\n    e.preventDefault()\n    // if (form.hasErrors()) return;\n\n    return productServices\n      .postAttribute(product.slug, form.values)\n      .then((data) => {\n        form.setValues(initValues)\n        return props?.onSuccess(data)\n      })\n      .catch((err) => {\n        return form.handleError(err)\n      })\n  }\n\n  // const invalidAttrNames = product?.attributes?.map((at) => at.name) || [];\n\n  return (\n    <Form context={form} onSubmit={handleSubmit}>\n      <div className=\"d-flex flex-column flex-md-row\" style={{ alignItems: 'end' }}>\n        <div className=\"me-md-1\">\n          <Form.Label value=\"Name\" />\n          <AttrNameInput error={form.errors.name} />\n        </div>\n\n        <div className=\"w-100 me-md-1\">\n          <Form.Label value=\"Value\" />\n          <AttrValueInput error={form.errors.value} />\n        </div>\n\n        <div className=\"ms-md-1\">\n          <IBtnSave type=\"submit\" className=\"btn-primary-3\" />\n        </div>\n      </div>\n    </Form>\n  )\n}\n","import { useContext, useEffect, useState } from 'react';\n\nimport { AdminView } from '@miq/adminjs';\nimport Form, { useForm } from '@miq/form';\nimport { getClassName } from '@miq/utils';\nimport { ToastCtx, Button, Img, ImgDeleteIconButton } from '@miq/components';\n\nimport { SupplierData } from '../orders/components';\n\nimport { productServices } from './utils';\nimport { ProductImageAltTextInput, ProductImageUploadButton } from './components';\nimport { AttributeCreateForm, AttributeUpdateForm } from './Attribute';\nimport { ProductQuickUpdateForm, ProductForm } from './forms';\n\nconst ViewTabs = ({ tab, ...props }) => {\n  const { prodSlug, product, setProduct, form, toast } = props;\n  const [addAtr, setAddAtr] = useState(false);\n\n  if (!product.slug) return null;\n\n  switch (tab) {\n    case 'inventory':\n      return (\n        <div className=\"d-flex flex-column flex-md-row\">\n          <div className=\"flex-1\">\n            <AdminView.Section title=\"Sizes\" text=\"Add sizes\"></AdminView.Section>\n            <AdminView.Section\n              title=\"Attributes\"\n              actions={\n                <Button onClick={() => setAddAtr(!addAtr)} className=\"btn-primary-3\">\n                  Ajouter attribut\n                </Button>\n              }\n            >\n              {addAtr && (\n                <div className=\"border-bottom mb-2 pb-3\">\n                  <p className=\"text-center mb-3\">Ajouter un attribut au produit.</p>\n                  <AttributeCreateForm\n                    product={product}\n                    onSuccess={(productData) => setProduct({ ...product, ...productData })}\n                  />\n                </div>\n              )}\n\n              <div className=\"my-3\">\n                {product.attributes.map((attr) => (\n                  <div className=\"mb-1\" key={attr.slug}>\n                    <AttributeUpdateForm\n                      instance={attr}\n                      product={product}\n                      onSuccess={(pData) => setProduct({ ...product, ...pData })}\n                    />\n                  </div>\n                ))}\n              </div>\n            </AdminView.Section>\n          </div>\n\n          <div className=\"w-md-35 ms-md-2\">\n            <SupplierData product={product} />\n          </div>\n        </div>\n      );\n\n    case 'imgs':\n      return (\n        <AdminView.Section\n          title=\"Images\"\n          text=\"Add images to your product\"\n          actions={\n            <ProductImageUploadButton\n              product={product}\n              onCreateSuccess={(data) => {\n                setProduct({ ...product, ...data });\n              }}\n            />\n          }\n        >\n          <div className=\"d-grid grid-md-3 grid-lg-4\" style={{ gap: 4 }}>\n            {product.images_data.map((img) => (\n              <div className=\"mb-1\" key={img.slug}>\n                <Img {...img} className=\"product-img\" />\n\n                <div className=\"d-flex\">\n                  <ProductImageAltTextInput image={img} />\n                  <ImgDeleteIconButton\n                    slug={img.slug}\n                    label=\"\"\n                    className=\"btn-danger-3 ms-1\"\n                    onSuccess={() => {\n                      setProduct({\n                        ...product,\n                        images_data: product.images_data.filter((i) => i.slug !== img.slug),\n                        images: product.images.filter((i) => i !== img.slug),\n                      });\n                    }}\n                  />\n                </div>\n              </div>\n            ))}\n          </div>\n        </AdminView.Section>\n      );\n\n    case 'setting':\n      return (\n        <Form\n          context={form}\n          onSubmit={(e) => {\n            e.preventDefault();\n            const fD = { title: form.values.title, slug_public: form.values.slug_public };\n\n            return productServices\n              .patchPage(prodSlug, fD, { title: product?.page?.title, slug_public: product?.page?.slug_public })\n              .then((data) => {\n                setProduct({ ...product, ...data });\n                toast.success({ message: 'Product page updated.' });\n              })\n              .catch((err) => {\n                form.handleError(err);\n                toast.error({ message: 'Could not update.' });\n              });\n          }}\n        >\n          <AdminView.Section title=\"Seo\">\n            <div className=\"mb-1\">\n              <Form.Label value=\"Meta title\" className=\"mb-1\" />\n              <Form.TextInput\n                required\n                name=\"title\"\n                error={form.errors.title}\n                placeholder=\"Give a name to the item\"\n                maxLength={99}\n              />\n            </div>\n            <div className=\"mb-1\">\n              <Form.Label value=\"Slug\" className=\"mb-1\" />\n              <Form.TextInput\n                required\n                name=\"slug_public\"\n                error={form.errors.slug_public}\n                placeholder={'Write slug ...'}\n                maxLength={99}\n              />\n            </div>\n\n            <div className=\"my-2\">\n              <Form.Submit value=\"Update\" className=\"btn btn-primary-3\" />\n            </div>\n          </AdminView.Section>\n\n          <AdminView.Section>\n            <Button\n              className=\"btn-danger\"\n              onClick={() => {\n                return productServices\n                  .delete(prodSlug || product.slug)\n                  .then((data) => {\n                    return props?.onDelete();\n                  })\n                  .catch((err) => {\n                    toast?.error({ message: 'Something went wrong' });\n                  });\n              }}\n            >\n              Delete product\n            </Button>\n          </AdminView.Section>\n        </Form>\n      );\n\n    default:\n      return (\n        <div className=\"d-grid grid-md-3 gap-3\">\n          <AdminView.Section title=\"Description\" className=\"span-md-2\">\n            <ProductForm context={form}>\n              <Form.TextAreaX\n                name=\"description\"\n                onSave={({ name, value }) =>\n                  productServices\n                    .patch(product.slug, { [name]: value }, { [name]: product[name] })\n                    .then((data) => {\n                      setProduct({ ...product, ...data });\n                      toast.success({ message: 'Product updated.' });\n                    })\n                    .catch((err) => {\n                      form.handleError(err);\n                      toast.error({ message: 'Could not update item.' });\n                    })\n                }\n                error={form.errors.description}\n                placeholder=\"Give a description to the item\"\n              />\n            </ProductForm>\n          </AdminView.Section>\n\n          <AdminView.Section\n            title=\"Status\"\n            text={\n              product.page.is_published\n                ? 'This item is published.'\n                : 'This item is not published. It does not show in your store.'\n            }\n            className=\"\"\n          >\n            <ProductPublishButton product={product} setProduct={setProduct} toast={toast} />\n          </AdminView.Section>\n        </div>\n      );\n  }\n};\n\nexport const productFormDefaultValues = {\n  name: '',\n  description: '',\n  title: '',\n  category: '',\n  slug_public: '',\n  retail_price: 0.0,\n  is_pre_sale: false,\n  is_pre_sale_text: '',\n  sale_price: 0.0,\n  is_on_sale: false,\n};\n\nexport default function ProductUpdateView(props) {\n  const { prodSlug } = props.match.params;\n\n  const [product, setProduct] = useState(null);\n  const [tab, setTab] = useState('info');\n  const toast = useContext(ToastCtx);\n\n  const form = useForm(productFormDefaultValues);\n  const { setValues } = form;\n\n  useEffect(() => {\n    productServices\n      .detail(prodSlug)\n      .then((data) => {\n        setProduct(data);\n        setValues({\n          name: data.name || '',\n          description: data.description || '',\n          category: data.category || '',\n          retail_price: data?.retail_price || 0.0,\n          // PRESALE\n          is_pre_sale: data.is_pre_sale || false,\n          is_pre_sale_text: data.is_pre_sale_text || '',\n          // SALE\n          is_on_sale: data.is_on_sale || false,\n          sale_price: data?.sale_price || 0.0,\n          // SEO\n          title: data.page.title || '',\n          slug_public: data?.page?.slug_public || '',\n        });\n      })\n      .catch((err) => {\n        if (err.response) {\n          // toast.error({ message: \"Something went wrong\" });\n          console.log(err.response);\n          if (err.response.status === 404) {\n            return;\n          }\n        }\n      });\n  }, [prodSlug, setValues]);\n\n  if (!product) return null;\n\n  // console.log(product);\n\n  return (\n    <AdminView\n      back={props?.back}\n      actions={\n        <div>\n          {product?.prev_slug && (\n            <a href={`${props?.back}${product?.prev_slug}/`} className=\"btn me-1\" title=\"Voir le produit précédent\">\n              Previous\n            </a>\n          )}\n          {product?.next_slug && (\n            <a href={`${props?.back}${product?.next_slug}/`} className=\"btn\" title=\"Voir le produit suivant\">\n              Next\n            </a>\n          )}\n        </div>\n      }\n      className=\"product-update-view\"\n    >\n      <ProductQuickUpdateForm\n        form={form}\n        product={product}\n        categories={product?.categories}\n        setProduct={setProduct}\n        toast={toast}\n      />\n\n      <div className=\"my-2\">\n        <div className=\"d-flex justify-content-center mb-3\">\n          <div className=\"d-flex align-items-center\">\n            <Button\n              onClick={() => setTab('info')}\n              className={getClassName(['me-1', tab === 'info' && 'btn-primary-3'])}\n            >\n              Info\n            </Button>\n            <Button\n              onClick={() => setTab('inventory')}\n              className={getClassName(['me-1', tab === 'inventory' && 'btn-primary-3'])}\n            >\n              Inventory\n            </Button>\n            <Button\n              onClick={() => setTab('imgs')}\n              className={getClassName(['me-1', tab === 'imgs' && 'btn-primary-3'])}\n            >\n              Images\n            </Button>\n            <Button onClick={() => setTab('setting')} className={getClassName([tab === 'setting' && 'btn-primary-3'])}>\n              Settings\n            </Button>\n          </div>\n        </div>\n        <ViewTabs\n          tab={tab}\n          prodSlug={prodSlug}\n          product={product}\n          setProduct={setProduct}\n          form={form}\n          toast={toast}\n          onDelete={() => props?.history?.push(props.back)}\n        />\n      </div>\n    </AdminView>\n  );\n}\n\nconst ERRMSG = {\n  retail_price: 'You can not publish a product without price',\n  category: 'You can not publish a product without category',\n  page: 'You can not publish a product without page',\n  default: 'Something went awfully wrong!',\n};\n\nexport const ProductPublishButton = ({ product, setProduct, toast }) => {\n  if (!product?.page) return null;\n\n  const { is_published } = product.page;\n\n  const handlePublish = () => {\n    if (is_published)\n      return productServices\n        .unpublish(product.slug)\n        .then((data) => {\n          setProduct({ ...product, ...data });\n          return toast?.success({ message: 'Item unpublished' });\n        })\n        .catch((err) => {\n          return toast?.error({ message: ERRMSG.default });\n        });\n\n    return productServices\n      .publish(product.slug)\n      .then((data) => {\n        setProduct?.({ ...product, ...data });\n        return toast?.success({ message: 'Item published' });\n      })\n      .catch(({ response = {} }) => {\n        if (!response.data) {\n          return toast?.error({ message: ERRMSG.default });\n        }\n        const { retail_price, category, page } = response.data;\n\n        if (retail_price) {\n          return toast?.error({ message: ERRMSG.retail_price });\n        }\n        if (category) {\n          return toast?.error({ message: ERRMSG.category });\n        }\n        if (page) {\n          return toast?.error({ message: ERRMSG.page });\n        }\n        // console.log(response.data);\n      });\n  };\n  return (\n    <Button onClick={handlePublish} className={is_published ? 'btn-danger' : 'btn-primary'}>\n      {is_published ? 'Unpublish' : 'Publish'} product\n    </Button>\n  );\n};\n"],"sourceRoot":""}
{"version":3,"sources":["shop/product/utils.jsx","shop/public/components.jsx","shop/product/components.jsx","exports.jsx","shop/orders/components.jsx","shop/product/forms.jsx","shop/orders/forms.jsx","shop/orders/UpdateView.jsx"],"names":["productServices","prodSlug","this","patchPath","path","unpublish","values","postPath","attrSlug","oldValues","deletePath","imgSlug","slug","StaffService","ProductPriceDisplay","product","retail_price","sale_price","is_on_sale","className","amountWithSymbol","ProductAttributeList","attributes","map","attr","name","value","CategoryLinks","props","ctx","useContext","SharedDataCtx","isLoaded","categories","cat","href","url","title","showCover","cover","src_mobile","thumb_sq","name_truncated","SearchForm","search","location","push","useRef","debounce","history","query","URLSearchParams","action","required","initialValue","get","onChange","e","target","length","delete","set","current","URL","window","pathname","placeholder","minLength","maxLength","BreadCrumbs","breadcrumbs","role","item","label","ProductImageAltTextInput","image","alt_text","form","useForm","setValues","useEffect","onSuccess","onError","StaffProductPublishButton","toast","page","is_published","onPublishSuccess","onUnpublishSuccess","id","onClick","then","data","catch","err","error","message","SHOP_MSGS","default","publish","response","category","publish_error_retail_price","handleError","publish_error_category","publish_error_page","getClassName","ProductImageUploadButton","multiple","onCreate","imgsArray","filter","img","patch","images","onCreateSuccess","onCreateError","SupplierData","supplier_name","supplier_item_id","supplier_item_category","supplier_item_cost","supplier_item_cost_currency","supplier_item_url","rel","isRequired","ProductNameInput","showLabel","input","rest","Label","TextInput","ProductCategoryInput","SelectInput","nullValue","items","Option","key","ProductRetailPriceInput","type","min","step","ProductPresaleCheckboxInput","CheckboxInput","ProductPresaleTextInput","TextAreaX","ProductOnSaleCheckboxInput","ProductSalePriceInput","ProductForm","children","context","fields","onSubmit","preventDefault","fD","forEach","field","NameInput","DescField","text","Field","CategoryInput","RetailPriceInput","PresaleCheckboxInput","PresaleTextInput","OnSaleCheckboxInput","SalePriceInput","StageSelect","stages","stage","SupplierProductAddForm","order_slug","useState","isLoading","setLoading","Section","includes","supOrderServices","getSheinProductData","setValue","setErrors","errors","disabled","Submit","formDefault","order_id","items_stage","currency","is_paid","total_cost","SupplierOrderStaffUpdateView","sOrderSlug","match","params","order","setOrder","products","setProducts","ToastCtx","detail","status","list","supplier_order_slug","handleSubmit","Array","isArray","val","success","update_success","update_error","back","SHOP_PATHS","orderList","actions","create_success","count","results","addOrUpdateArrayObject","orderSlug","style","position","top","OrderItemListSection","selected","setSelected","isSelected","checked","i","onUpdate","next","previous","onPreviousClick","onNextClick","OrderItem","isEdit","setEdit","cover_data","pill","short","retail_price_data","sale_price_data","category_data","is_pre_sale","add_to_cart_count","productUpdate","OrderProductUpdateForm","is_pre_sale_text"],"mappings":"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","file":"static/js/5.db9601e9.chunk.js","sourcesContent":["import { StaffService } from '@miq/utils';\n\nclass StaffProductService extends StaffService {\n  publish(prodSlug) {\n    return this.patchPath(`${this.path}${prodSlug}/publish/`, {});\n  }\n\n  unpublish(prodSlug) {\n    return this.patchPath(`${this.path}${prodSlug}/publish/`, { unpublish: true });\n  }\n\n  // ATTR\n\n  postAttribute(prodSlug, values) {\n    return this.postPath(`${this.path}${prodSlug}/attribute/new/`, values);\n  }\n\n  patchAttribute(prodSlug, attrSlug, values, oldValues) {\n    return this.patchPath(`${this.path}${prodSlug}/attribute/${attrSlug}/`, values, oldValues);\n  }\n\n  deleteAttribute(prodSlug, attrSlug) {\n    return this.deletePath(`${this.path}${prodSlug}/attribute/${attrSlug}/`);\n  }\n\n  // PAGE\n\n  patchPage(prodSlug, values, oldValues) {\n    return this.patchPath(`${this.path}${prodSlug}/page/`, values, oldValues);\n  }\n\n  // COVER\n\n  swapCover(prodSlug, imgSlug) {\n    return this.patchPath(`${this.path}${prodSlug}/swap-cover/`, { slug: imgSlug });\n  }\n}\n\nexport const productServices = new StaffProductService('products/');\n","import ReactDOM from 'react-dom';\nimport { useContext, useEffect, useRef, useState } from 'react';\n\nimport { SharedDataCtx } from '@miq/contexts';\n// import Form, { useForm } from \"@miq/form\";\nimport { Img, Picture, SearchTextInput } from '@miq/components';\nimport { IS_DEV } from '@miq/utils';\nimport debounce from 'lodash.debounce';\n\n/**\n * PRODUCT\n */\n\nexport const ProductPriceDisplay = ({ product }) => {\n  if (!product || !product.retail_price) return null;\n\n  const { retail_price, sale_price } = product;\n\n  if (product.is_on_sale && sale_price != null) {\n    return (\n      <div className=\"product-price-display d-flex align-items-center\">\n        <div className=\"text-danger fw-bold me-2\">{sale_price.amountWithSymbol}</div>\n        <div className=\"text-line-through\">{retail_price.amountWithSymbol}</div>\n      </div>\n    );\n  }\n  return (\n    <div className=\"product-price-display d-flex align-items-center\">\n      <div className=\"fw-bold\">{retail_price.amountWithSymbol}</div>\n    </div>\n  );\n};\n\nexport const ProductAttributeList = ({ product }) => {\n  const { attributes = [] } = product || {};\n\n  if (!attributes) return null;\n\n  return (\n    <ul className=\"product-attr-list\">\n      {attributes?.map((attr) => {\n        return (\n          <li className=\"attr\" key={attr.name}>\n            <span className=\"attr-label\">{attr.name} : </span>\n            <span className=\"attr-value\">{attr.value}</span>\n          </li>\n        );\n      })}\n    </ul>\n  );\n};\n\n/**\n * CATEGORY\n */\n\nexport const CategoryLinks = (props) => {\n  const ctx = useContext(SharedDataCtx);\n\n  if (!ctx.isLoaded || !ctx.categories) return null;\n\n  // console.log(ctx.categories);\n\n  return (\n    <div className=\"category-links pb-2\">\n      {ctx.categories?.map((cat) => {\n        return (\n          <div className=\"item w-25 w-md-15\" key={cat.slug}>\n            <a href={cat.url} className=\"\" title={cat.name}>\n              {props.showCover && cat?.cover && (\n                <Picture {...cat.cover} src_mobile={cat?.cover?.thumb_sq || cat?.cover?.src_mobile} />\n              )}\n              <div className=\"info\">{cat.name_truncated}</div>\n            </a>\n          </div>\n        );\n      })}\n    </div>\n  );\n};\n\nexport function SearchForm(props) {\n  const { search } = props.location;\n\n  const push = useRef(debounce((url) => props?.history?.push(url), 300));\n\n  const query = new URLSearchParams(search);\n  const handleSearch = ({ e }) => {\n    const { value } = e.target;\n\n    if (!value || value.length < 3) {\n      query.delete('q');\n    } else {\n      query.set('q', e.target.value);\n    }\n\n    if (!push.current) return;\n\n    const path = new URL(window.location.href);\n    push.current(`${path.pathname}?${query}`);\n  };\n\n  return (\n    <form action=\"/shop/\" className=\"product-search-form\">\n      <SearchTextInput\n        required\n        initialValue={query.get('q')}\n        onChange={handleSearch}\n        className=\"search-input\"\n        placeholder={'Cherchez un produit ...'}\n        minLength={3}\n        maxLength={99}\n      />\n    </form>\n  );\n}\n\nexport const BreadCrumbs = (props) => {\n  const { isLoaded, breadcrumbs } = useContext(SharedDataCtx);\n\n  if (!isLoaded || !breadcrumbs) {\n    return null;\n  }\n\n  return (\n    <section className=\"miq-breadcrumbs\" role={'navigation'} aria-label=\"breadcrumbs\">\n      {breadcrumbs.map((item) => {\n        return (\n          <a href={item.path} className=\"item\" key={item.label} title={item.title} aria-label={item.title}>\n            {item.label}\n          </a>\n        );\n      })}\n    </section>\n  );\n};\n\n//\n// NOT USED\nexport const ProductDetailImages = ({ product, ...props }) => {\n  const { images = [], cover } = product;\n  const [active, setActive] = useState(cover);\n\n  const [root, setRoot] = useState(null);\n\n  useEffect(() => {\n    if (IS_DEV) return;\n\n    const el = document.getElementById('product-detail-images');\n    if (el) setRoot(el);\n  }, [setRoot]);\n\n  if (!product) return null;\n\n  const render = (\n    <div className=\"product-images d-flex flex-column-reverse flex-sm-row\">\n      <div className=\"thumbnails d-flex flex-row flex-sm-column me-1\">\n        <Img src={cover.thumb} className=\"mb-1\" onClick={() => setActive(cover)} />\n\n        {images.map((img) => (\n          <Img src={img.thumb} onClick={() => setActive(img)} className=\"mb-1\" key={img.src} />\n        ))}\n      </div>\n\n      <div className=\"\">\n        <Img src={active.src} />\n      </div>\n    </div>\n  );\n\n  return IS_DEV ? render : root ? ReactDOM.createPortal(render, root) : null;\n};\n","import React, { useEffect } from 'react';\nimport PropTypes from 'prop-types';\n\nimport { productServices } from './utils';\nimport { useForm, FormProvider, ImgUploadButton, ImageAltTextInput, Button, getClassName } from 'src/exports';\n\n//#region ProductImageAltTextInput\nexport const ProductImageAltTextInput = ({ image, ...props }) => {\n  const alt_text = image?.alt_text || '';\n\n  const form = useForm({ alt_text });\n\n  const imgSlug = image?.slug;\n  const setValues = form.setValues;\n\n  useEffect(() => {\n    setValues({ alt_text });\n  }, [imgSlug, setValues, alt_text]);\n\n  if (!image || !image.slug) return null;\n\n  return (\n    <FormProvider value={form} className={props.className}>\n      <ImageAltTextInput\n        required\n        image={image}\n        onSuccess={props.onSuccess}\n        onError={props.onError}\n        placeholder=\"Add an alternative text ...\"\n      />\n    </FormProvider>\n  );\n};\n\nProductImageAltTextInput.propTypes = {\n  image: PropTypes.shape({\n    slug: PropTypes.string.isRequired,\n  }),\n\n  onUpdate: PropTypes.func,\n  onError: PropTypes.func,\n};\n//#endregion ProductImageAltTextInput\n\n//#region BUTTONS > >\n\n//#region StaffProductPublishButton\n\n/**\n * Button component for publishing a product\n * ```js\n * <StaffProductPublishButton\n *  product={product}\n *  prodSlug='slug'\n *  product={{slug: 'slug', page:{slug:'pageSlug'}}}\n *  onPublishSuccess={(data) => setProduct(data)}\n *  onUnpublishSuccess={(data) => setProduct(data)}\n *  onUnpublishSuccess={(err) => setError(err)}\n * />\n * ```\n * @param {Object} props\n * @param {string} props.prodSlug - slug of the product: required\n * @param {Object} props.product - product object\n * @param {Object} props.form - product form\n * @param {Function} props.onPublishSuccess publish success callback\n * @param {Function} props.onUnpublishSuccess unpublish success callback\n * @param {Function} props.onError\n * @param {Object} props.toast\n * @param {string} props.className\n * @param {string} props.id\n * @augments {Component<Props, State>}\n *\n */\n\nexport function StaffProductPublishButton(props) {\n  const { prodSlug, product, toast, ...rest } = props;\n  if (!prodSlug || !product?.page) return null;\n\n  const { is_published } = product.page;\n  const { form, onPublishSuccess, onUnpublishSuccess, onError } = props;\n\n  const handlePublish = () => {\n    if (is_published)\n      return productServices\n        .unpublish(prodSlug)\n        .then((data) => onUnpublishSuccess?.(data))\n        .catch((err) => {\n          return toast?.error({ message: SHOP_MSGS.default });\n        });\n\n    return productServices\n      .publish(prodSlug)\n      .then((data) => onPublishSuccess?.(data))\n      .catch((err) => {\n        const { response = {} } = err;\n\n        if (!response.data) {\n          toast?.error({ message: SHOP_MSGS.default });\n        }\n        const { retail_price, category, page } = response.data;\n\n        if (retail_price) {\n          toast?.error({ message: SHOP_MSGS.product.publish_error_retail_price });\n        }\n        if (category) {\n          if (form) form.handleError(err);\n          toast?.error({ message: SHOP_MSGS.product.publish_error_category });\n        }\n        if (page) {\n          toast?.error({ message: SHOP_MSGS.product.publish_error_page });\n        }\n        return onError?.(err);\n      });\n  };\n\n  return (\n    <Button\n      id={props.id}\n      onClick={handlePublish}\n      className={getClassName([\n        'staff-product-publish-button',\n        is_published ? 'btn-danger' : 'btn-primary',\n        props.className,\n      ])}\n    >\n      {is_published ? 'Unpublish' : 'Publish'} product\n    </Button>\n  );\n}\n\nStaffProductPublishButton.propTypes = {\n  /** product slug */\n  prodSlug: PropTypes.string.isRequired,\n  /** product data */\n  product: PropTypes.shape({ page: PropTypes.shape({ is_published: PropTypes.bool }).isRequired }).isRequired,\n  /** if props.form: calls form.handleError whenever applicable BEFORE calling props.onError */\n  form: PropTypes.object,\n  onPublishSuccess: PropTypes.func,\n  onUnpublishSuccess: PropTypes.func,\n  onError: PropTypes.func,\n};\n\n//#endregion\n\n//#region ProductImageUploadButton\n\n/**\n * Upload a product image\n * Usage:\n * ```js\n * <ProductImageUploadButton product={{prodData}} />\n * ```\n *\n * @param {Object} props\n * @param {Object} props.product\n * @param {bool} props.multiple\n * @param {Function} props.onCreate\n * @param {Function} props.onCreateSuccess\n * @param {Function} props.onCreateError\n * @augments {ImgUploadButton<Props, State>}\n */\n\nexport const ProductImageUploadButton = ({ product, ...props }) => {\n  if (!product || !product.slug) return null;\n\n  return (\n    <ImgUploadButton\n      multiple={true}\n      className=\"btn-primary-3\"\n      onCreate={(imgsArray) => {\n        imgsArray = imgsArray.filter((img) => img && img.slug);\n        return productServices\n          .patch(product.slug, { images: [...product.images, ...imgsArray.map((img) => img.slug)] })\n          .then((data) => {\n            if (props.onCreateSuccess) props.onCreateSuccess(data);\n          })\n          .catch((err) => {\n            if (props.onCreateError) props.onCreateError(err);\n          });\n      }}\n    />\n  );\n};\n//#endregion ProductImageButton\n\n//#region ProductCoverUploadButton\nexport const ProductCoverUploadButton = ({ children, product, ...props }) => {\n  if (!product || !product.slug) return null;\n\n  const handleCoverCreate = ({ slug }) => {\n    productServices\n      .patch(product.slug, { cover: slug })\n      .then((data) => {\n        if (props.onCreateSuccess) props.onCreateSuccess(data);\n      })\n      .catch((err) => {\n        if (props.onCreateError) props.onCreateError(err);\n      });\n  };\n  const handleCoverUpdate = (imgData) => {\n    if (props.onUpdateSuccess) props.onUpdateSuccess(imgData);\n  };\n\n  return (\n    <ImgUploadButton\n      slug={product.cover_data ? product.cover_data.slug : null}\n      onCreate={handleCoverCreate}\n      onUpdate={handleCoverUpdate}\n      className=\"product-cover-upload-button\"\n    >\n      {children}\n    </ImgUploadButton>\n  );\n};\nProductCoverUploadButton.propTypes = {\n  children: PropTypes.any.isRequired,\n  product: PropTypes.shape({ slug: PropTypes.string.isRequired }).isRequired,\n  onCreateSuccess: PropTypes.func,\n  onCreateError: PropTypes.func,\n  onUpdateSuccess: PropTypes.func,\n  onUpdateError: PropTypes.func,\n};\n//#endregion ProductCoverUploadButton\n\n//#endregion BUTTONS\n","export { ImageAltTextInput, PublishedStatusSpan } from '@miq/adminjs';\n\nexport { Button, ImgUploadButton, ImgSquare, Loading, Card } from '@miq/components';\n\nexport { getClassName } from '@miq/utils';\n\nexport { default as Form } from '@miq/form';\nexport { useForm, FormProvider } from '@miq/form';\n","export const SupplierData = ({ product, ...props }) => {\n  if (!product) return null;\n\n  return (\n    <div className=\"product-supplier-data\">\n      <ul>\n        <li>\n          <span className=\"\">Supplier</span>\n          <span className=\"\">{product.supplier_name}</span>\n        </li>\n        <li>\n          <span className=\"\">Item id</span>\n          <span className=\"\">{product.supplier_item_id}</span>\n        </li>\n        <li>\n          <span className=\"\">Category</span>\n          <span className=\"\">{product.supplier_item_category}</span>\n        </li>\n\n        <li>\n          <span className=\"\">Item cost</span>\n          <span className=\"\">\n            {product.supplier_item_cost} ({product.supplier_item_cost_currency})\n          </span>\n        </li>\n        <li>\n          <a href={product.supplier_item_url} className=\"text-underline\" target=\"_blank\" rel=\"noopener noreferrer\">\n            View supplier page\n          </a>\n        </li>\n      </ul>\n    </div>\n  );\n};\n","import { useEffect } from 'react';\nimport { AdminView, StaffCoverUpdateForm, PublishedStatusSpan } from '@miq/adminjs';\nimport Form from '@miq/form';\nimport { isRequired } from '@miq/utils';\nimport { productServices } from './utils';\nimport { ProductImageAltTextInput } from './components';\nimport { SHOP_MSGS } from '../constants';\n\nconst isR = isRequired;\n\nexport function ProductQuickUpdateForm({ form, product, ...props }) {\n  const { setProduct, toast, categories } = props;\n  const productSlug = product?.slug;\n\n  useEffect(() => {}, [productSlug]);\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    const fD = {\n      name: form.values.name,\n      retail_price: form.values.retail_price,\n      is_on_sale: form.values.is_on_sale,\n      is_pre_sale: form.values.is_pre_sale,\n    };\n\n    if (form.values.category) fD.category = form.values.category;\n    if (form.values.is_on_sale) fD.sale_price = form.values.sale_price;\n\n    if (form.values.is_pre_sale) fD.is_pre_sale_text = form.values.is_pre_sale_text;\n\n    return productServices\n      .patch(product.slug, fD)\n      .then((data) => {\n        setProduct?.({ ...product, ...data });\n        toast?.success({ message: SHOP_MSGS.product.update_success });\n      })\n      .catch((err) => {\n        toast?.error({ message: SHOP_MSGS.product.update_error });\n        return form.handleError(err);\n      });\n  };\n\n  return (\n    <ProductForm context={form} onSubmit={handleSubmit} className=\"quick-product-update-form\">\n      <div className=\"d-grid grid-md-3 gap-3\">\n        <div className=\"span-md-2\">\n          <AdminView.Section\n            title=\"Details\"\n            actions={<PublishedStatusSpan is_published={product?.page?.is_published} pill />}\n          >\n            <div className=\"mb-1\">\n              <ProductNameInput error={form.errors.name} />\n            </div>\n\n            {categories && (\n              <div className=\"mb-1\">\n                <ProductCategoryInput categories={categories} error={form?.errors?.category} />\n              </div>\n            )}\n\n            <div className=\"mb-1\">\n              <div className=\"mb-1\">\n                <ProductRetailPriceInput error={form?.errors?.retail_price} />\n              </div>\n\n              {/* PRE SALE */}\n              <div className=\"mb-1\">\n                <div className=\"d-flex align-items-center mb-1\">\n                  <ProductPresaleCheckboxInput error={form?.errors?.is_pre_sale} />\n                </div>\n\n                {form.values.is_pre_sale && (\n                  <div className=\"mb-2\">\n                    <ProductPresaleTextInput error={form?.errors?.is_pre_sale_text} />\n                  </div>\n                )}\n              </div>\n\n              {/* SALE  */}\n              <div className=\"d-flex align-items-center mb-1\">\n                <ProductOnSaleCheckboxInput error={form?.errors?.is_on_sale} />\n              </div>\n\n              {form.values.is_on_sale && (\n                <div className=\"mb-2\">\n                  <ProductSalePriceInput error={form?.errors?.sale_price} />\n                </div>\n              )}\n            </div>\n\n            <div className=\"my-3\">\n              <Form.Submit value=\"Update product\" className=\"btn btn-primary-3\" />\n            </div>\n          </AdminView.Section>\n        </div>\n      </div>\n    </ProductForm>\n  );\n}\n\n//#region INPUTS\n\nexport const ProductNameInput = (props) => {\n  const { showLabel = false, label = 'Name', ...input } = props;\n  const { placeholder = 'Give a name to the item', ...rest } = input;\n  return (\n    <>\n      {showLabel && <Form.Label value={label} className=\"mb-1\" />}\n      <Form.TextInput {...rest} required name=\"name\" placeholder={placeholder} maxLength={99} />\n    </>\n  );\n};\n\nexport const ProductDescriptionField = (props) => {\n  const { label, text, ...input } = props;\n  const { placeholder = 'Give a description to the item', ...rest } = input;\n  return (\n    <Form.Field {...{ label, text }}>\n      <Form.TextAreaX\n        {...rest}\n        name=\"description\"\n        // error={form.errors.description}\n        placeholder={placeholder}\n      />\n    </Form.Field>\n  );\n};\n\nexport const ProductCategoryInput = (props) => {\n  const { showLabel = false, label = 'Category', ...input } = props;\n  const { categories, ...rest } = input;\n\n  return (\n    <>\n      {showLabel && <Form.Label value={label} />}\n      <Form.SelectInput {...rest} required name=\"category\" nullValue={{ label: 'Sélectionnez une catégorie' }}>\n        {categories?.items?.map((cat) => {\n          return <Form.SelectInput.Option {...cat} key={cat.value} />;\n        })}\n      </Form.SelectInput>\n    </>\n  );\n};\n\nexport const ProductRetailPriceInput = (props) => {\n  const { showLabel = false, label = 'Retail price', ...rest } = props;\n\n  return (\n    <>\n      {showLabel && <Form.Label value={label} id=\"retail_price_label\" />}\n      <Form.TextInput\n        {...rest}\n        required\n        type=\"number\"\n        name=\"retail_price\"\n        aria-describedby=\"retail_price_label\"\n        min=\"0\"\n        step=\"0.01\"\n      />\n    </>\n  );\n};\n\nexport const ProductPresaleCheckboxInput = (props) => {\n  const { showLabel = false, label = 'Pre-sale', ...rest } = props;\n\n  return (\n    <div className=\"d-flex align-items-center\">\n      <Form.CheckboxInput {...rest} name=\"is_pre_sale\" className=\"me-2\" />\n      <Form.Label value={label} />\n    </div>\n  );\n};\n\nexport const ProductPresaleTextInput = (props) => {\n  return (\n    <>\n      <Form.Label value=\"Pre sale text\" id=\"is_pre_sale_text_label\" className=\"miq-checkbox-label\" />\n      <Form.TextAreaX name=\"is_pre_sale_text\" aria-describedby=\"is_pre_sale_text_label\" />\n    </>\n  );\n};\n\nexport const ProductOnSaleCheckboxInput = (props) => {\n  const { showLabel = false, label = 'On Sale', ...rest } = props;\n\n  return (\n    <div className=\"d-flex align-items-center\">\n      <Form.CheckboxInput {...rest} name=\"is_on_sale\" className=\"me-2\" />\n      <Form.Label value={label} />\n    </div>\n  );\n};\n\nexport const ProductSalePriceInput = (props) => {\n  const { showLabel = false, label = 'Sale price', ...rest } = props;\n  return (\n    <>\n      {showLabel && <Form.Label value={label} id=\"sale_price_label\" className=\"miq-checkbox-label\" />}\n      <Form.TextInput\n        {...rest}\n        required\n        type=\"number\"\n        name=\"sale_price\"\n        aria-describedby=\"sale_price_label\"\n        min=\"0\"\n        step=\"0.01\"\n      />\n    </>\n  );\n};\n\nexport const ProductStageSelect = (props) => {\n  const { showLabel = false, label = 'Stage', ...input } = props;\n  const { stages, name, ...rest } = input;\n\n  return (\n    <>\n      {showLabel && <Form.Label value={label} />}\n      <Form.SelectInput {...rest} required name={name || 'stage'} nullValue={{ label: 'Select stage' }}>\n        {stages?.map?.((stage) => {\n          return <Form.SelectInput.Option {...stage} key={stage.value} />;\n        })}\n      </Form.SelectInput>\n    </>\n  );\n};\n\n//#endregion INPUTS\n\n//#region FORMS\n\nexport const ProductForm = ({ children, context, fields = [], prodSlug, ...props }) => {\n  const { onSuccess, onError, ...rest } = props;\n\n  const handleSubmit = (e) => {\n    if (!context || !fields) return;\n\n    e.preventDefault();\n    const fD = {\n      // name: context.values.name,\n      // retail_price: form.values.retail_price,\n      // is_on_sale: form.values.is_on_sale,\n      // is_pre_sale: form.values.is_pre_sale,\n    };\n\n    fields.forEach((field) => {\n      const value = context.values[field];\n      if (value == null) return;\n      fD[field] = value;\n    });\n\n    // if (form.values.category) fD.category = form.values.category;\n    // if (form.values.is_on_sale) fD.sale_price = form.values.sale_price;\n\n    // if (form.values.is_pre_sale) fD.is_pre_sale_text = form.values.is_pre_sale_text;\n    if (!prodSlug) return;\n\n    return productServices\n      .patch(prodSlug, fD)\n      .then((data) => {\n        props?.onSuccess?.(data);\n      })\n      .catch((err) => {\n        if (props.onError) return props.onError(err);\n        return context.handleError(err);\n      });\n  };\n  return (\n    <Form {...rest} context={context} onSubmit={props.onSubmit || handleSubmit}>\n      {children}\n    </Form>\n  );\n};\n\nProductForm.NameInput = ProductNameInput;\nProductForm.DescField = ProductDescriptionField;\nProductForm.CategoryInput = ProductCategoryInput;\nProductForm.RetailPriceInput = ProductRetailPriceInput;\nProductForm.PresaleCheckboxInput = ProductPresaleCheckboxInput;\nProductForm.PresaleTextInput = ProductPresaleTextInput;\nProductForm.OnSaleCheckboxInput = ProductOnSaleCheckboxInput;\nProductForm.SalePriceInput = ProductSalePriceInput;\nProductForm.StageSelect = ProductStageSelect;\n\n//#endregion\n\n//#region BUTTONS\n//#endregion\n","import { useState } from 'react';\n\nimport { AdminView } from '@miq/adminjs';\nimport Form, { useForm } from '@miq/form';\nimport { supOrderServices } from './utils';\n\nexport const SupplierProductAddForm = ({ order_slug, ...props }) => {\n  const [isLoading, setLoading] = useState(false);\n\n  const form = useForm({\n    supplier_name: 'shein',\n    url: '',\n  });\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n\n    setLoading(true);\n\n    const { url } = form.values;\n\n    switch (form.values.supplier_name) {\n      case 'zara':\n        return null;\n\n      default:\n        if (!url.includes('shein')) return null;\n        return supOrderServices\n          .getSheinProductData(order_slug, { url })\n          .then((data) => {\n            setLoading(false);\n            form.setValue('url', '');\n            return props?.onSuccess(data);\n          })\n          .catch((err) => {\n            form.setErrors({ ...form.errors, url: 'Something went wrong.' });\n            setLoading(false);\n            return props?.onError?.(err);\n          });\n    }\n  };\n\n  return (\n    <AdminView.Section title={props?.title || 'Ajouter un produit'} className=\"supplier-product-add-section mt-3\">\n      <Form context={form} onSubmit={handleSubmit} className=\"supplier-product-add-form\">\n        {isLoading && <div className=\"my-3\">Getting product data. Please wait ...</div>}\n\n        <div className=\"d-flex flex-column flex-md-row\">\n          <Form.TextInput\n            required\n            name=\"url\"\n            type=\"url\"\n            error={form.errors.url}\n            placeholder=\"Add product source url ...\"\n            className=\"me-1\"\n            disabled={isLoading}\n          />\n\n          <Form.Submit value=\"Get data\" className=\"btn btn-primary-3\" disabled={isLoading} />\n        </div>\n      </Form>\n    </AdminView.Section>\n  );\n};\n","import { useContext, useEffect, useState } from 'react';\n\nimport { AdminView, PublishedStatusSpan } from '@miq/adminjs';\nimport Form, { useForm } from '@miq/form';\nimport { ToastCtx } from '@miq/components';\nimport { ImgSquare, Button, Pagination } from '@miq/components';\nimport { addOrUpdateArrayObject } from '@miq/utils';\n\nimport { supOrderServices } from './utils';\nimport { SupplierProductAddForm } from './forms';\nimport { ProductForm } from '../product/forms';\nimport { SupplierData } from './components';\nimport { SHOP_MSGS, SHOP_PATHS } from '../constants';\nimport { productServices } from '../product/utils';\nimport { ProductPriceDisplay } from '../public/components';\n\nconst formDefault = {\n  order_id: '',\n  items_stage: '',\n  currency: '',\n  is_paid: false,\n  total_cost: '',\n};\n\nexport default function SupplierOrderStaffUpdateView(props) {\n  const { sOrderSlug } = props.match.params;\n\n  const [order, setOrder] = useState({});\n  const [products, setProducts] = useState({});\n\n  const toast = useContext(ToastCtx);\n\n  const form = useForm(formDefault);\n  const { setValues } = form;\n\n  useEffect(() => {\n    if (!sOrderSlug) return;\n    return supOrderServices\n      .detail(sOrderSlug)\n      .then((data) => {\n        setOrder(data);\n\n        setValues({\n          order_id: data.order_id || '',\n          items_stage: data.items_stage || '',\n          currency: data.currency || '',\n          is_paid: data.is_paid || false,\n          total_cost: data.total_cost || '',\n        });\n      })\n      .catch((err) => {\n        if (err.response) {\n          if (err.response.status === 404) {\n            return;\n          }\n        }\n      });\n  }, [sOrderSlug, setValues]);\n\n  useEffect(() => {\n    if (!sOrderSlug) return;\n\n    return productServices\n      .list({ supplier_order_slug: sOrderSlug })\n      .then((data) => {\n        setProducts(data);\n      })\n      .catch((err) => {\n        // console.log(err);\n      });\n  }, [sOrderSlug]);\n\n  if (!order) return null;\n\n  const handleSubmit = (e, fields) => {\n    e.preventDefault();\n\n    let fD = {};\n    if (Array.isArray(fields)) {\n      fields.forEach((field) => {\n        const val = form.values[field];\n        if (val == null) return;\n        fD[field] = val;\n      });\n    } else fD = { ...form.values };\n\n    supOrderServices\n      .patch(sOrderSlug, fD)\n      .then(() => {\n        toast.success({ message: SHOP_MSGS.order.update_success });\n      })\n      .catch((err) => {\n        toast.error({ message: SHOP_MSGS.order.update_error });\n        form.handleError(err);\n      });\n  };\n\n  return (\n    <AdminView\n      back={SHOP_PATHS.orderList()}\n      title=\"Modifier une commande\"\n      actions={<div></div>}\n      className=\"supplier-order-update-view\"\n    >\n      <div className=\"d-grid grid-md-3 gap-3\">\n        <div className=\"span-md-2\">\n          <SupplierProductAddForm\n            order_slug={sOrderSlug}\n            onSuccess={(product) => {\n              toast.success({ message: SHOP_MSGS.product.create_success });\n              return setProducts({\n                ...products,\n                count: products.count + 1,\n                results: addOrUpdateArrayObject(products.results, product),\n              });\n            }}\n          />\n\n          <OrderItemListSection\n            {...props}\n            order={order}\n            products={products}\n            setProducts={setProducts}\n            orderSlug={order.slug}\n          />\n        </div>\n\n        <div className=\"\">\n          <div className=\"\" style={{ position: 'sticky', top: 0 }}>\n            <Form context={form} onSubmit={handleSubmit} className=\"order-update-form\">\n              <AdminView.Section title=\"Order details\">\n                <ul className=\"mb-3\">\n                  <li className=\"\">Product: {products.count}</li>\n                </ul>\n                <div className=\"mb-1\">\n                  <Form.Label value=\"Order Id\" className=\"mb-1\" />\n                  <Form.TextInput\n                    required\n                    name=\"order_id\"\n                    error={form.errors.order_id}\n                    placeholder=\"Order iD\"\n                    maxLength={99}\n                  />\n                </div>\n                <div className=\"d-flex align-items-center mb-1\">\n                  <Form.CheckboxInput name=\"is_paid\" error={form.errors.is_paid} className=\"me-2\" />\n                  <Form.Label value=\"Paid\" />\n                </div>\n                {form.values.is_paid && (\n                  <div className=\"mb-1\">\n                    <Form.Label value=\"Total cost\" id=\"total_cost_label\" />\n                    <Form.TextInput\n                      required\n                      type=\"number\"\n                      name=\"retailtotal_cost_price\"\n                      error={form.errors.total_cost}\n                      aria-describedby=\"total_cost_label\"\n                      min=\"0\"\n                      step=\"0.01\"\n                    />\n                  </div>\n                )}\n                <div className=\"\">\n                  <Form.Submit value=\"Save\" className=\"btn btn-primary-3\" />\n                </div>\n              </AdminView.Section>\n            </Form>\n\n            <Form context={form} onSubmit={(e) => handleSubmit(e, ['items_stage'])} className=\"order-update-form\">\n              <AdminView.Section title=\"Stage\" text=\"This will update the stage of all products in this order.\">\n                <ProductForm.StageSelect\n                  name=\"items_stage\"\n                  stages={order?.stages}\n                  error={form.errors.items_stage}\n                  showLabel={false}\n                  className=\"mb-1\"\n                />\n\n                <div className=\"\">\n                  <Form.Submit value=\"Save\" className=\"btn btn-primary-2\" />\n                </div>\n              </AdminView.Section>\n            </Form>\n          </div>\n        </div>\n      </div>\n    </AdminView>\n  );\n}\n\nconst OrderItemListSection = ({ order, products, setProducts, ...props }) => {\n  const [selected, setSelected] = useState([]);\n\n  const { toast } = props;\n\n  return (\n    <AdminView.Section className=\"order-items mb-3\">\n      {products?.results?.map((item) => {\n        const isSelected = selected.includes(item.slug);\n\n        return (\n          <div className=\"\" key={item.slug}>\n            <div className=\"\">\n              <input\n                type=\"checkbox\"\n                checked={isSelected}\n                onChange={() => {\n                  if (isSelected) setSelected(selected.filter((i) => i !== item.slug));\n                  else setSelected([...selected, item.slug]);\n                }}\n              />\n            </div>\n\n            <OrderItem\n              item={item}\n              toast={toast}\n              categories={order.categories}\n              onUpdate={(data) => {\n                setProducts({\n                  ...products,\n                  results: products.results.map((i) => {\n                    if (i.slug === data.slug) return data;\n                    return i;\n                  }),\n                });\n              }}\n            />\n          </div>\n        );\n      })}\n      <Pagination\n        count={products.count}\n        next={products.next}\n        previous={products.previous}\n        onPreviousClick={() => {\n          productServices\n            .get(products.previous)\n            .then((data) => {\n              setProducts(data);\n            })\n            .catch((err) => {\n              toast?.error({ message: SHOP_MSGS.default });\n            });\n        }}\n        onNextClick={() => {\n          productServices\n            .get(products.next)\n            .then((data) => {\n              setProducts(data);\n            })\n            .catch((err) => {\n              toast?.error({ message: SHOP_MSGS.default });\n            });\n        }}\n      />\n    </AdminView.Section>\n  );\n};\n\nconst OrderItem = ({ item, ...props }) => {\n  const [isEdit, setEdit] = useState(props.isEdit || false);\n\n  if (!item?.slug) return null;\n\n  return (\n    <div className=\"order-item mb-2 border-1 rounded \">\n      <div className=\"d-flex p-1\">\n        <div className=\"me-1\">\n          <ImgSquare {...item.cover_data} className=\"rounded\" />\n        </div>\n\n        <div className=\"flex-1 detail\">\n          <div className=\"fw-bold\" title={item.name}>\n            <span className=\"me-2\">{item.name}</span>\n            {item?.page?.is_published && <PublishedStatusSpan is_published={item?.page?.is_published} pill short />}\n          </div>\n\n          <div className=\"\">\n            <ProductPriceDisplay\n              product={{ ...item, retail_price: item.retail_price_data, sale_price: item.sale_price_data }}\n            />\n          </div>\n\n          <div className=\"mb-1 text-sm\">\n            {item.category_data && <span className=\"me-1\">{item.category_data.name} /</span>}\n            {item.is_pre_sale && <span className=\"me-1\">Pre sale /</span>}\n            <span className=\"me-1\">atc: {item.add_to_cart_count}</span>\n          </div>\n\n          <div className=\"actions d-flex justify-content-between align-items-center\">\n            <a href={SHOP_PATHS.productUpdate(item.slug)} target=\"_blank\" className=\"update-btn btn btn-primary-2\">\n              Update\n            </a>\n\n            <div>\n              <Button onClick={() => setEdit(!isEdit)} className=\"quick-update-btn btn-secondary-3\">\n                Quick update\n              </Button>\n            </div>\n          </div>\n        </div>\n      </div>\n\n      {isEdit && <OrderProductUpdateForm {...props} isEdit={isEdit} product={item} />}\n    </div>\n  );\n};\n\nconst OrderProductUpdateForm = ({ isEdit, product, ...props }) => {\n  const form = useForm({\n    name: product.name || '',\n    category: product.category || '',\n    retail_price: product?.retail_price || 0.0,\n    supplier_item_cost: product?.supplier_item_cost || 0.0,\n    is_pre_sale: product.is_pre_sale || false,\n    is_pre_sale_text: product.is_pre_sale_text || '',\n  });\n\n  if (!isEdit) return null;\n\n  const handleUpdate = (data) => {\n    props?.toast?.success?.({ message: SHOP_MSGS.product.update_success });\n    return props?.onUpdate(data);\n  };\n\n  const { errors } = form;\n  return (\n    <ProductForm\n      context={form}\n      prodSlug={product.slug}\n      fields={['name', 'category', 'retail_price', 'is_pre_sale', 'is_pre_sale_text', 'supplier_item_cost']}\n      className=\"order-item-form mb-2\"\n      onSuccess={handleUpdate}\n      onError={(err) => {\n        return form.handleError(err);\n      }}\n    >\n      <div className=\"d-grid grid-md-5 gap-2\">\n        <div className=\"span-md-3 mb-2\">\n          <ProductForm.NameInput error={errors.name} className=\"mb-1\" />\n          <ProductForm.CategoryInput categories={props?.categories} className=\"mb-1\" />\n          <ProductForm.RetailPriceInput error={errors.retail_price} className=\"mb-1\" />\n\n          <Form.Label value={`Supplier item cost (${product.supplier_item_cost_currency})`} />\n          <Form.TextInput name=\"supplier_item_cost\" className=\"\" />\n        </div>\n\n        <div className=\"span-md-2\">\n          <div className=\"mb-3\">\n            <div className=\"mb-1\">\n              <ProductForm.PresaleCheckboxInput error={errors.is_pre_sale} className=\"mb-1\" />\n            </div>\n\n            {form.values.is_pre_sale && (\n              <div className=\"mb-1\">\n                <ProductForm.PresaleTextInput error={errors.is_pre_sale_text} />\n              </div>\n            )}\n\n            <Form.Submit value=\"Update\" className=\"btn btn-primary-3 w-100\" />\n          </div>\n          <SupplierData product={product} />\n        </div>\n      </div>\n    </ProductForm>\n  );\n};\n"],"sourceRoot":""}
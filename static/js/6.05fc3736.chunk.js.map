{"version":3,"sources":["shop/product/utils.jsx","shop/product/components.jsx","shop/orders/components.jsx","shop/product/forms.jsx","shop/orders/forms.jsx","shop/orders/UpdateView.jsx"],"names":["productServices","prodSlug","this","patchPath","path","unpublish","values","postPath","attrSlug","oldValues","deletePath","StaffService","ProductImageUploadButton","product","props","slug","multiple","className","onCreate","imgsArray","filter","img","patch","images","map","then","data","onCreateSuccess","catch","err","onCreateError","ProductImageAltTextInput","image","form","useForm","alt_text","imgSlug","setValues","useEffect","value","required","onSuccess","onError","placeholder","SupplierData","supplier_name","supplier_item_id","supplier_item_category","supplier_item_cost","supplier_item_cost_currency","href","supplier_item_url","target","rel","ProductQuickUpdateForm","setProduct","toast","categories","productSlug","ProductForm","context","onSubmit","e","preventDefault","fD","name","retail_price","is_on_sale","is_pre_sale","category","sale_price","is_pre_sale_text","success","message","SHOP_MSGS","update_success","error","update_error","handleError","Section","title","actions","is_published","page","pill","ProductNameInput","errors","ProductCategoryInput","ProductRetailPriceInput","ProductPresaleCheckboxInput","ProductPresaleTextInput","ProductOnSaleCheckboxInput","ProductSalePriceInput","Submit","cover","cover_data","imgData","cover_create_success","cover_update_error","onUpdate","cover_update_success","onDelete","cover_delete_success","showLabel","label","input","rest","Label","TextInput","maxLength","SelectInput","nullValue","items","cat","Option","key","id","type","min","step","CheckboxInput","TextAreaX","children","fields","forEach","field","console","log","NameInput","CategoryInput","RetailPriceInput","PresaleCheckboxInput","PresaleTextInput","OnSaleCheckboxInput","SalePriceInput","StageSelect","stages","stage","SupplierProductAddForm","order_slug","useState","isLoading","setLoading","url","includes","supOrderServices","getSheinProductData","setValue","setErrors","disabled","formDefault","order_id","items_stage","currency","is_paid","total_cost","SupplierOrderStaffUpdateView","sOrderSlug","match","params","order","setOrder","products","setProducts","useContext","ToastCtx","detail","response","status","list","supplier_order_slug","handleSubmit","Array","isArray","val","back","SHOP_PATHS","orderList","create_success","count","results","addOrUpdateArrayObject","orderSlug","style","position","top","text","OrderItemListSection","selected","setSelected","item","isSelected","checked","onChange","i","next","previous","onPreviousClick","get","default","onNextClick","OrderItem","isEdit","setEdit","short","category_data","add_to_cart_count","productUpdate","onClick","OrderProductUpdateForm"],"mappings":"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","file":"static/js/6.05fc3736.chunk.js","sourcesContent":["import { StaffService } from '@miq/utils';\n\nclass StaffProductService extends StaffService {\n  publish(prodSlug) {\n    return this.patchPath(`${this.path}${prodSlug}/publish/`, {});\n  }\n\n  unpublish(prodSlug) {\n    return this.patchPath(`${this.path}${prodSlug}/publish/`, { unpublish: true });\n  }\n\n  // ATTR\n\n  postAttribute(prodSlug, values) {\n    return this.postPath(`${this.path}${prodSlug}/attribute/new/`, values);\n  }\n\n  patchAttribute(prodSlug, attrSlug, values, oldValues) {\n    return this.patchPath(`${this.path}${prodSlug}/attribute/${attrSlug}/`, values, oldValues);\n  }\n\n  deleteAttribute(prodSlug, attrSlug) {\n    return this.deletePath(`${this.path}${prodSlug}/attribute/${attrSlug}/`);\n  }\n\n  // PAGE\n\n  patchPage(prodSlug, values, oldValues) {\n    return this.patchPath(`${this.path}${prodSlug}/page/`, values, oldValues);\n  }\n}\n\nexport const productServices = new StaffProductService('products/');\n","import React, { useEffect } from 'react';\nimport PropTypes from 'prop-types';\n\nimport Form, { useForm, FormProvider } from '@miq/form';\nimport { ImageAltTextInput } from '@miq/adminjs';\nimport { ImgUploadButton } from '@miq/components';\nimport { productServices } from './utils';\n\n//\n// ========================= FORM COMPONENTS ===================================================================\n//\n\nexport const ProductImageUploadButton = ({ product, ...props }) => {\n  if (!product || !product.slug) return null;\n\n  return (\n    <ImgUploadButton\n      multiple={true}\n      className=\"btn-primary-3\"\n      onCreate={(imgsArray) => {\n        imgsArray = imgsArray.filter((img) => img && img.slug);\n        return productServices\n          .patch(product.slug, { images: [...product.images, ...imgsArray.map((img) => img.slug)] })\n          .then((data) => {\n            if (props.onCreateSuccess) props.onCreateSuccess(data);\n          })\n          .catch((err) => {\n            if (props.onCreateError) props.onCreateError(err);\n          });\n      }}\n    />\n  );\n};\n\nexport const ProductImageAltTextInput = ({ image, ...props }) => {\n  const form = useForm({ alt_text: image?.alt_text || '' });\n\n  const imgSlug = image?.slug;\n  const alt_text = image?.alt_text;\n  const setValues = form.setValues;\n\n  useEffect(() => {\n    setValues({ alt_text });\n  }, [imgSlug, setValues, alt_text]);\n\n  if (!image || !image.slug) return null;\n\n  return (\n    <FormProvider value={form} className={props.className}>\n      <ImageAltTextInput\n        required\n        image={image}\n        onSuccess={props.onSuccess}\n        onError={props.onError}\n        placeholder=\"Add an alternative text ...\"\n      />\n    </FormProvider>\n  );\n};\n\nProductImageAltTextInput.propTypes = {\n  image: PropTypes.shape({\n    slug: PropTypes.string.isRequired,\n  }),\n\n  onUpdate: PropTypes.func,\n  onError: PropTypes.func,\n};\n\nexport const ProductCoverUploadButton = ({ children, product, ...props }) => {\n  if (!product || !product.slug) return null;\n\n  const handleCoverCreate = ({ slug }) => {\n    productServices\n      .patch(product.slug, { cover: slug })\n      .then((data) => {\n        if (props.onCreateSuccess) props.onCreateSuccess(data);\n      })\n      .catch((err) => {\n        if (props.onCreateError) props.onCreateError(err);\n      });\n  };\n  const handleCoverUpdate = (imgData) => {\n    if (props.onUpdateSuccess) props.onUpdateSuccess(imgData);\n  };\n\n  return (\n    <ImgUploadButton\n      slug={product.cover_data ? product.cover_data.slug : null}\n      onCreate={handleCoverCreate}\n      onUpdate={handleCoverUpdate}\n      className=\"product-cover-upload-button\"\n    >\n      {children}\n    </ImgUploadButton>\n  );\n};\n\nProductCoverUploadButton.propTypes = {\n  children: PropTypes.any.isRequired,\n  product: PropTypes.shape({ slug: PropTypes.string.isRequired }).isRequired,\n  onCreateSuccess: PropTypes.func,\n  onCreateError: PropTypes.func,\n  onUpdateSuccess: PropTypes.func,\n  onUpdateError: PropTypes.func,\n};\n","export const SupplierData = ({ product, ...props }) => {\n  if (!product) return null;\n\n  return (\n    <div className=\"product-supplier-data\">\n      <ul>\n        <li>\n          <span className=\"\">Supplier</span>\n          <span className=\"\">{product.supplier_name}</span>\n        </li>\n        <li>\n          <span className=\"\">Item id</span>\n          <span className=\"\">{product.supplier_item_id}</span>\n        </li>\n        <li>\n          <span className=\"\">Category</span>\n          <span className=\"\">{product.supplier_item_category}</span>\n        </li>\n\n        <li>\n          <span className=\"\">Item cost</span>\n          <span className=\"\">\n            {product.supplier_item_cost} ({product.supplier_item_cost_currency})\n          </span>\n        </li>\n        <li>\n          <a href={product.supplier_item_url} className=\"text-underline\" target=\"_blank\" rel=\"noopener noreferrer\">\n            View supplier page\n          </a>\n        </li>\n      </ul>\n    </div>\n  );\n};\n","import { useEffect } from 'react';\nimport { AdminView, StaffCoverUpdateForm, PublishedStatusSpan } from '@miq/adminjs';\nimport Form from '@miq/form';\nimport { productServices } from './utils';\nimport { ProductImageAltTextInput } from './components';\nimport { SHOP_MSGS } from '../constants';\n\nexport function ProductQuickUpdateForm({ form, product, ...props }) {\n  const { setProduct, toast, categories } = props;\n  const productSlug = product?.slug;\n\n  useEffect(() => {}, [productSlug]);\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    const fD = {\n      name: form.values.name,\n      retail_price: form.values.retail_price,\n      is_on_sale: form.values.is_on_sale,\n      is_pre_sale: form.values.is_pre_sale,\n    };\n\n    if (form.values.category) fD.category = form.values.category;\n    if (form.values.is_on_sale) fD.sale_price = form.values.sale_price;\n\n    if (form.values.is_pre_sale) fD.is_pre_sale_text = form.values.is_pre_sale_text;\n\n    return productServices\n      .patch(product.slug, fD)\n      .then((data) => {\n        setProduct?.({ ...product, ...data });\n        toast?.success({ message: SHOP_MSGS.product.update_success });\n      })\n      .catch((err) => {\n        toast?.error({ message: SHOP_MSGS.product.update_error });\n        return form.handleError(err);\n      });\n  };\n\n  return (\n    <ProductForm context={form} onSubmit={handleSubmit}>\n      <div className=\"d-grid grid-md-3 gap-3\">\n        <div className=\"span-md-2\">\n          <AdminView.Section\n            title=\"Details\"\n            actions={<PublishedStatusSpan is_published={product?.page?.is_published} pill />}\n          >\n            <div className=\"mb-1\">\n              <ProductNameInput error={form.errors.name} />\n            </div>\n\n            {categories && (\n              <div className=\"mb-1\">\n                <ProductCategoryInput categories={categories} error={form?.errors?.category} />\n              </div>\n            )}\n\n            <div className=\"mb-1\">\n              <div className=\"mb-1\">\n                <ProductRetailPriceInput error={form?.errors?.retail_price} />\n              </div>\n\n              {/* PRE SALE */}\n              <div className=\"mb-1\">\n                <div className=\"d-flex align-items-center mb-1\">\n                  <ProductPresaleCheckboxInput error={form?.errors?.is_pre_sale} />\n                </div>\n\n                {form.values.is_pre_sale && (\n                  <div className=\"mb-2\">\n                    <ProductPresaleTextInput error={form?.errors?.is_pre_sale_text} />\n                  </div>\n                )}\n              </div>\n\n              {/* SALE  */}\n              <div className=\"d-flex align-items-center mb-1\">\n                <ProductOnSaleCheckboxInput error={form?.errors?.is_on_sale} />\n              </div>\n\n              {form.values.is_on_sale && (\n                <div className=\"mb-2\">\n                  <ProductSalePriceInput error={form?.errors?.sale_price} />\n                </div>\n              )}\n            </div>\n\n            <div className=\"my-3\">\n              <Form.Submit value=\"Update product\" className=\"btn btn-primary-3\" />\n            </div>\n          </AdminView.Section>\n        </div>\n\n        <div className=\"\">\n          <StaffCoverUpdateForm\n            slug={product?.cover}\n            data={product.cover_data}\n            onCreate={(imgData) => {\n              productServices\n                .patch(product.slug, { cover: imgData.slug })\n                .then((data) => {\n                  setProduct?.({ ...product, ...data });\n                  toast?.success({ message: SHOP_MSGS.product.cover_create_success });\n                })\n                .catch((err) => {\n                  toast?.error({ message: SHOP_MSGS.product.cover_update_error });\n                });\n            }}\n            onUpdate={(cover_data) => {\n              toast?.success({ message: SHOP_MSGS.product.cover_update_success });\n              return setProduct?.({ ...product, cover_data });\n            }}\n            onDelete={() => {\n              toast?.success({ message: SHOP_MSGS.product.cover_delete_success });\n              return setProduct?.({ ...product, cover_data: null, cover: null });\n            }}\n            className=\"mb-1\"\n          />\n          <ProductImageAltTextInput image={product?.cover_data} />\n        </div>\n      </div>\n    </ProductForm>\n  );\n}\n\n// INPUTS\n\nexport const ProductNameInput = (props) => {\n  const { showLabel = true, label = 'Name', ...input } = props;\n  const { placeholder = 'Give a name to the item', ...rest } = input;\n  return (\n    <>\n      {showLabel && <Form.Label value={label} className=\"mb-1\" />}\n      <Form.TextInput {...rest} required name=\"name\" placeholder={placeholder} maxLength={99} />\n    </>\n  );\n};\n\nexport const ProductCategoryInput = (props) => {\n  const { showLabel = true, label = 'Category', ...input } = props;\n  const { categories, ...rest } = input;\n\n  return (\n    <>\n      {showLabel && <Form.Label value={label} />}\n      <Form.SelectInput {...rest} required name=\"category\" nullValue={{ label: 'Select category' }}>\n        {categories?.items?.map((cat) => {\n          return <Form.SelectInput.Option {...cat} key={cat.value} />;\n        })}\n      </Form.SelectInput>\n    </>\n  );\n};\n\nexport const ProductRetailPriceInput = (props) => {\n  const { showLabel = true, label = 'Retail price', ...rest } = props;\n\n  return (\n    <>\n      {showLabel && <Form.Label value={label} id=\"retail_price_label\" />}\n      <Form.TextInput\n        {...rest}\n        required\n        type=\"number\"\n        name=\"retail_price\"\n        aria-describedby=\"retail_price_label\"\n        min=\"0\"\n        step=\"0.01\"\n      />\n    </>\n  );\n};\n\nexport const ProductPresaleCheckboxInput = (props) => {\n  const { showLabel = true, label = 'Pre-sale', ...rest } = props;\n\n  return (\n    <div className=\"d-flex\">\n      <Form.CheckboxInput {...rest} name=\"is_pre_sale\" className=\"me-2\" />\n      <Form.Label value={label} />\n    </div>\n  );\n};\n\nexport const ProductPresaleTextInput = (props) => {\n  return (\n    <>\n      <Form.Label value=\"Pre sale text\" id=\"is_pre_sale_text_label\" className=\"miq-checkbox-label\" />\n      <Form.TextAreaX name=\"is_pre_sale_text\" aria-describedby=\"is_pre_sale_text_label\" />\n    </>\n  );\n};\n\nexport const ProductOnSaleCheckboxInput = (props) => {\n  const { showLabel = true, label = 'On Sale', ...rest } = props;\n\n  return (\n    <div className=\"d-flex\">\n      <Form.CheckboxInput {...rest} name=\"is_on_sale\" className=\"me-2\" />\n      <Form.Label value={label} />\n    </div>\n  );\n};\n\nexport const ProductSalePriceInput = (props) => {\n  const { showLabel = true, label = 'Sale price', ...rest } = props;\n  return (\n    <>\n      {showLabel && <Form.Label value={label} id=\"sale_price_label\" className=\"miq-checkbox-label\" />}\n      <Form.TextInput\n        {...rest}\n        required\n        type=\"number\"\n        name=\"sale_price\"\n        aria-describedby=\"sale_price_label\"\n        min=\"0\"\n        step=\"0.01\"\n      />\n    </>\n  );\n};\n\nexport const ProductStageSelect = (props) => {\n  const { showLabel = true, label = 'Stage', ...input } = props;\n  const { stages, name, ...rest } = input;\n\n  return (\n    <>\n      {showLabel && <Form.Label value={label} />}\n      <Form.SelectInput {...rest} required name={name || 'stage'} nullValue={{ label: 'Select stage' }}>\n        {stages?.map?.((stage) => {\n          return <Form.SelectInput.Option {...stage} key={stage.value} />;\n        })}\n      </Form.SelectInput>\n    </>\n  );\n};\n\nexport const ProductForm = ({ children, context, fields = [], prodSlug, ...props }) => {\n  const { onSuccess, onError, ...rest } = props;\n\n  const handleSubmit = (e) => {\n    if (!context || !fields) return;\n\n    e.preventDefault();\n    const fD = {\n      // name: context.values.name,\n      // retail_price: form.values.retail_price,\n      // is_on_sale: form.values.is_on_sale,\n      // is_pre_sale: form.values.is_pre_sale,\n    };\n\n    fields.forEach((field) => {\n      const value = context.values[field];\n      if (value == null) return;\n      fD[field] = value;\n    });\n\n    // if (form.values.category) fD.category = form.values.category;\n    // if (form.values.is_on_sale) fD.sale_price = form.values.sale_price;\n\n    // if (form.values.is_pre_sale) fD.is_pre_sale_text = form.values.is_pre_sale_text;\n    if (!prodSlug) return;\n\n    return productServices\n      .patch(prodSlug, fD)\n      .then((data) => {\n        props?.onSuccess?.(data);\n      })\n      .catch((err) => {\n        if (props.onError) return props.onError(err);\n        console.log('ehey');\n        return context.handleError(err);\n      });\n  };\n  return (\n    <Form {...rest} context={context} onSubmit={props.onSubmit || handleSubmit}>\n      {children}\n    </Form>\n  );\n};\n\nProductForm.NameInput = ProductNameInput;\nProductForm.CategoryInput = ProductCategoryInput;\nProductForm.RetailPriceInput = ProductRetailPriceInput;\nProductForm.PresaleCheckboxInput = ProductPresaleCheckboxInput;\nProductForm.PresaleTextInput = ProductPresaleTextInput;\nProductForm.OnSaleCheckboxInput = ProductOnSaleCheckboxInput;\nProductForm.SalePriceInput = ProductSalePriceInput;\nProductForm.StageSelect = ProductStageSelect;\n","import { useState } from 'react';\n\nimport { AdminView } from '@miq/adminjs';\nimport Form, { useForm } from '@miq/form';\nimport { supOrderServices } from './utils';\n\nexport const SupplierProductAddForm = ({ order_slug, ...props }) => {\n  const [isLoading, setLoading] = useState(false);\n\n  const form = useForm({\n    supplier_name: 'shein',\n    url: '',\n  });\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n\n    setLoading(true);\n\n    const { url } = form.values;\n\n    switch (form.values.supplier_name) {\n      case 'zara':\n        return null;\n\n      default:\n        if (!url.includes('shein')) return null;\n        return supOrderServices\n          .getSheinProductData(order_slug, { url })\n          .then((data) => {\n            setLoading(false);\n            form.setValue('url', '');\n            return props?.onSuccess(data);\n          })\n          .catch((err) => {\n            form.setErrors({ ...form.errors, url: 'Something went wrong.' });\n            setLoading(false);\n            return props?.onError(data);\n          });\n    }\n  };\n\n  return (\n    <AdminView.Section title={props?.title || 'Ajouter un produit'} className=\"supplier-product-add-section mt-3\">\n      <Form context={form} onSubmit={handleSubmit} className=\"supplier-product-add-form\">\n        {isLoading && <div className=\"my-3\">Getting product data. Please wait ...</div>}\n\n        <div className=\"d-flex flex-column flex-md-row\">\n          <Form.TextInput\n            required\n            name=\"url\"\n            type=\"url\"\n            error={form.errors.url}\n            placeholder=\"Add product source url ...\"\n            className=\"me-1\"\n            disabled={isLoading}\n          />\n\n          <Form.Submit value=\"Get data\" className=\"btn btn-primary-3\" disabled={isLoading} />\n        </div>\n      </Form>\n    </AdminView.Section>\n  );\n};\n","import { useContext, useEffect, useState } from 'react';\n\nimport { AdminView, PublishedStatusSpan } from '@miq/adminjs';\nimport Form, { useForm } from '@miq/form';\nimport { ToastCtx } from '@miq/components';\nimport { ImgSquare, Button, Pagination } from '@miq/components';\nimport { addOrUpdateArrayObject } from '@miq/utils';\n\nimport { supOrderServices } from './utils';\nimport { SupplierProductAddForm } from './forms';\nimport { ProductForm } from '../product/forms';\nimport { SupplierData } from './components';\nimport { SHOP_MSGS, SHOP_PATHS } from '../constants';\nimport { productServices } from '../product/utils';\n\nconst formDefault = {\n  order_id: '',\n  items_stage: '',\n  currency: '',\n  is_paid: false,\n  total_cost: '',\n};\n\nexport default function SupplierOrderStaffUpdateView(props) {\n  const { sOrderSlug } = props.match.params;\n\n  const [order, setOrder] = useState({});\n  const [products, setProducts] = useState({});\n\n  const toast = useContext(ToastCtx);\n\n  const form = useForm(formDefault);\n  const { setValues } = form;\n\n  useEffect(() => {\n    if (!sOrderSlug) return;\n    return supOrderServices\n      .detail(sOrderSlug)\n      .then((data) => {\n        setOrder(data);\n\n        setValues({\n          order_id: data.order_id || '',\n          items_stage: data.items_stage || '',\n          currency: data.currency || '',\n          is_paid: data.is_paid || false,\n          total_cost: data.total_cost || '',\n        });\n      })\n      .catch((err) => {\n        if (err.response) {\n          if (err.response.status === 404) {\n            return;\n          }\n        }\n      });\n  }, [sOrderSlug, setValues]);\n\n  useEffect(() => {\n    if (!sOrderSlug) return;\n\n    return productServices\n      .list({ supplier_order_slug: sOrderSlug })\n      .then((data) => {\n        setProducts(data);\n      })\n      .catch((err) => {\n        // console.log(err);\n      });\n  }, [sOrderSlug]);\n\n  if (!order) return null;\n\n  const handleSubmit = (e, fields) => {\n    e.preventDefault();\n\n    let fD = {};\n    if (Array.isArray(fields)) {\n      fields.forEach((field) => {\n        const val = form.values[field];\n        if (val == null) return;\n        fD[field] = val;\n      });\n    } else fD = { ...form.values };\n\n    supOrderServices\n      .patch(sOrderSlug, fD)\n      .then(() => {\n        toast.success({ message: SHOP_MSGS.order.update_success });\n      })\n      .catch((err) => {\n        toast.error({ message: SHOP_MSGS.order.update_error });\n        form.handleError(err);\n      });\n  };\n\n  return (\n    <AdminView\n      back={SHOP_PATHS.orderList()}\n      title=\"Modifier une commande\"\n      actions={<div></div>}\n      className=\"supplier-order-update-view\"\n    >\n      <div className=\"d-grid grid-md-3 gap-3\">\n        <div className=\"span-md-2\">\n          <SupplierProductAddForm\n            order_slug={sOrderSlug}\n            onSuccess={(product) => {\n              toast.success({ message: SHOP_MSGS.product.create_success });\n              return setProducts({\n                ...products,\n                count: products.count + 1,\n                results: addOrUpdateArrayObject(products.results, product),\n              });\n            }}\n          />\n\n          <OrderItemListSection\n            {...props}\n            order={order}\n            products={products}\n            setProducts={setProducts}\n            orderSlug={order.slug}\n          />\n        </div>\n\n        <div className=\"\">\n          <div className=\"\" style={{ position: 'sticky', top: 0 }}>\n            <Form context={form} onSubmit={handleSubmit} className=\"order-update-form\">\n              <AdminView.Section title=\"Order details\">\n                <ul className=\"mb-3\">\n                  <li className=\"\">Product: {products.count}</li>\n                </ul>\n                <div className=\"mb-1\">\n                  <Form.Label value=\"Order Id\" className=\"mb-1\" />\n                  <Form.TextInput\n                    required\n                    name=\"order_id\"\n                    error={form.errors.order_id}\n                    placeholder=\"Order iD\"\n                    maxLength={99}\n                  />\n                </div>\n                <div className=\"d-flex align-items-center mb-1\">\n                  <Form.CheckboxInput name=\"is_paid\" error={form.errors.is_paid} className=\"me-2\" />\n                  <Form.Label value=\"Paid\" />\n                </div>\n                {form.values.is_paid && (\n                  <div className=\"mb-1\">\n                    <Form.Label value=\"Total cost\" id=\"total_cost_label\" />\n                    <Form.TextInput\n                      required\n                      type=\"number\"\n                      name=\"retailtotal_cost_price\"\n                      error={form.errors.total_cost}\n                      aria-describedby=\"total_cost_label\"\n                      min=\"0\"\n                      step=\"0.01\"\n                    />\n                  </div>\n                )}\n                <div className=\"\">\n                  <Form.Submit value=\"Save\" className=\"btn btn-primary-3\" />\n                </div>\n              </AdminView.Section>\n            </Form>\n\n            <Form context={form} onSubmit={(e) => handleSubmit(e, ['items_stage'])} className=\"order-update-form\">\n              <AdminView.Section title=\"Stage\" text=\"This will update the stage of all products in this order.\">\n                <ProductForm.StageSelect\n                  name=\"items_stage\"\n                  stages={order?.stages}\n                  error={form.errors.items_stage}\n                  showLabel={false}\n                  className=\"mb-1\"\n                />\n\n                <div className=\"\">\n                  <Form.Submit value=\"Save\" className=\"btn btn-primary-2\" />\n                </div>\n              </AdminView.Section>\n            </Form>\n          </div>\n        </div>\n      </div>\n    </AdminView>\n  );\n}\n\nconst OrderItemListSection = ({ order, products, setProducts, ...props }) => {\n  const [selected, setSelected] = useState([]);\n\n  const { toast } = props;\n\n  return (\n    <AdminView.Section className=\"order-items mb-3\">\n      {products?.results?.map((item) => {\n        const isSelected = selected.includes(item.slug);\n\n        return (\n          <div className=\"\" key={item.slug}>\n            <div className=\"\">\n              <input\n                type=\"checkbox\"\n                checked={isSelected}\n                onChange={() => {\n                  if (isSelected) setSelected(selected.filter((i) => i !== item.slug));\n                  else setSelected([...selected, item.slug]);\n                }}\n              />\n            </div>\n\n            <OrderItem\n              item={item}\n              toast={toast}\n              categories={order.categories}\n              onUpdate={(data) => {\n                setProducts({\n                  ...products,\n                  results: products.results.map((i) => {\n                    if (i.slug === data.slug) return data;\n                    return i;\n                  }),\n                });\n              }}\n            />\n          </div>\n        );\n      })}\n      <Pagination\n        count={products.count}\n        next={products.next}\n        previous={products.previous}\n        onPreviousClick={() => {\n          productServices\n            .get(products.previous)\n            .then((data) => {\n              setProducts(data);\n            })\n            .catch((err) => {\n              toast?.error({ message: SHOP_MSGS.default });\n            });\n        }}\n        onNextClick={() => {\n          productServices\n            .get(products.next)\n            .then((data) => {\n              setProducts(data);\n            })\n            .catch((err) => {\n              toast?.error({ message: SHOP_MSGS.default });\n            });\n        }}\n      />\n    </AdminView.Section>\n  );\n};\n\nconst OrderItem = ({ item, ...props }) => {\n  const [isEdit, setEdit] = useState(props.isEdit || false);\n\n  if (!item?.slug) return null;\n\n  return (\n    <div className=\"order-item mb-2 border-1 rounded \">\n      <div className=\"d-flex p-1\">\n        <div className=\"me-1\">\n          <ImgSquare {...item.cover_data} className=\"rounded\" />\n        </div>\n\n        <div className=\"flex-1 detail\">\n          <div className=\"fw-bold\" title={item.name}>\n            <span className=\"me-2\">{item.name}</span>\n            {item?.page?.is_published && <PublishedStatusSpan is_published={item?.page?.is_published} pill short />}\n          </div>\n\n          <div className=\"\">{item.retail_price}</div>\n\n          <div className=\"mb-1 text-sm\">\n            {item.category_data && <span className=\"me-1\">{item.category_data.name} /</span>}\n            {item.is_pre_sale && <span className=\"me-1\">Pre sale /</span>}\n            <span className=\"me-1\">atc: {item.add_to_cart_count}</span>\n          </div>\n\n          <div className=\"actions d-flex justify-content-between align-items-center\">\n            <a href={SHOP_PATHS.productUpdate(item.slug)} target=\"_blank\" className=\"update-btn btn btn-primary-2\">\n              Update\n            </a>\n\n            <div>\n              <Button onClick={() => setEdit(!isEdit)} className=\"quick-update-btn btn-secondary-3\">\n                Quick update\n              </Button>\n            </div>\n          </div>\n        </div>\n      </div>\n\n      {isEdit && <OrderProductUpdateForm {...props} isEdit={isEdit} product={item} />}\n    </div>\n  );\n};\n\nconst OrderProductUpdateForm = ({ isEdit, product, ...props }) => {\n  const form = useForm({\n    name: product.name || '',\n    category: product.category || '',\n    retail_price: product?.retail_price || 0.0,\n    supplier_item_cost: product?.supplier_item_cost || 0.0,\n    is_pre_sale: product.is_pre_sale || false,\n    is_pre_sale_text: product.is_pre_sale_text || '',\n  });\n\n  if (!isEdit) return null;\n\n  const handleUpdate = (data) => {\n    props?.toast?.success?.({ message: SHOP_MSGS.product.update_success });\n    return props?.onUpdate(data);\n  };\n\n  const { errors } = form;\n  return (\n    <ProductForm\n      context={form}\n      prodSlug={product.slug}\n      fields={['name', 'category', 'retail_price', 'is_pre_sale', 'is_pre_sale_text', 'supplier_item_cost']}\n      className=\"order-item-form mb-2\"\n      onSuccess={handleUpdate}\n      onError={(err) => {\n        return form.handleError(err);\n      }}\n    >\n      <div className=\"d-grid grid-md-5 gap-2\">\n        <div className=\"span-md-3 mb-2\">\n          <ProductForm.NameInput error={errors.name} className=\"mb-1\" />\n          <ProductForm.CategoryInput categories={props?.categories} className=\"mb-1\" />\n          <ProductForm.RetailPriceInput error={errors.retail_price} className=\"mb-1\" />\n\n          <Form.Label value={`Supplier item cost (${product.supplier_item_cost_currency})`} />\n          <Form.TextInput name=\"supplier_item_cost\" className=\"\" />\n        </div>\n\n        <div className=\"span-md-2\">\n          <div className=\"mb-3\">\n            <div className=\"mb-1\">\n              <ProductForm.PresaleCheckboxInput error={errors.is_pre_sale} className=\"mb-1\" />\n            </div>\n\n            {form.values.is_pre_sale && (\n              <div className=\"mb-1\">\n                <ProductForm.PresaleTextInput error={errors.is_pre_sale_text} />\n              </div>\n            )}\n\n            <Form.Submit value=\"Update\" className=\"btn btn-primary-3 w-100\" />\n          </div>\n          <SupplierData product={product} />\n        </div>\n      </div>\n    </ProductForm>\n  );\n};\n"],"sourceRoot":""}
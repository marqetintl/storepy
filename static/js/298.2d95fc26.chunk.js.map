{"version":3,"file":"static/js/298.2d95fc26.chunk.js","mappings":"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","sources":["../../../../shopy/shopy-storejs/src/Product/IndexView.tsx","../../../../shopy/shopy-storejs/src/Product/components.tsx","../../../../shopy/shopy-storejs/src/Product/forms.tsx","../../../../shopy/shopy-storejs/src/Product/models.tsx","../../../../shopy/shopy-storejs/src/Product/utils.ts","../../../../shopy/shopy-storejs/src/components.tsx","../../../../shopy/shopy-storejs/src/events/index.tsx"],"sourcesContent":["import * as React from 'react';\nimport { Routes, Route, useSearchParams } from 'react-router-dom';\n\nimport Staff, { StaffImg } from '@miq/staffjs';\nimport { Response } from '@miq/utiljs';\nimport { Table, Pagination, Viewports } from '@miq/componentjs';\n\nimport './indexview.scss';\n\nimport { StaffProduct } from './models';\nimport { PriceDisplay, ProductPriceDisplay, PublishedIcon } from '../components';\nimport { ProductType } from '../types';\nimport { ProductCardList } from './components';\nimport { useCrudEmitter } from '../events';\nimport { ProductListFilterForm } from './forms';\nimport { useProductListRequest } from './utils';\n\nconst ProductCreateView = React.lazy(() => import('./CreateView'));\nconst ProductStaffUpdateView = React.lazy(() => import('./UpdateView'));\n\nexport default function ProductStaffIndexView() {\n  const { res, ...rest } = useProductListRequest();\n  useCrudEmitter({ onUpdate: rest.updateItem, onDestroy: rest.removeItem });\n\n  const r = new Response(res);\n\n  if (!r.isSuccess) return null;\n\n  return (\n    <Routes>\n      <Route path=\":prodSlug/\" element={<UpdateView {...{ response: r }} />} />\n      <Route path=\"new\" element={<ProductCreateView />} />\n      <Route\n        index\n        element={\n          <Staff.View\n            title=\"Products\"\n            back=\"/staff/store/\"\n            actions={\n              <Staff.Link to=\"new/\" requiredPerms={['store.add_product']} className=\"btn btn-primary-3\">\n                Add product\n              </Staff.Link>\n            }\n            requiredPerms={['store.view_product']}\n          >\n            <ProductListFilterForm categories={r.data?.categories} />\n            <ProductStaffTable response={r} />\n          </Staff.View>\n        }\n      />\n    </Routes>\n  );\n}\n\nconst UpdateView = ({ response }: { response: Response }) => {\n  return (\n    <div className=\"d-grid grid-xl-4 gap-1\">\n      <Viewports.XLUp>\n        <ProductCardList items={response.items} itempath=\"../\" />\n      </Viewports.XLUp>\n\n      <div className=\"span-xl-3\">\n        <ProductStaffUpdateView back=\"/staff/store/products/\" />\n      </div>\n    </div>\n  );\n};\n\nconst ProductStaffTable: React.FC<{ response: Response }> = (props) => {\n  const { response } = props;\n  const [params] = useSearchParams();\n\n  if (response.items.length === 0)\n    return (\n      <div className=\"text-center p-staff-list-empty py-3 my-3\">\n        <p className=\"fw-light text-md\">Add products to your shop to get started</p>\n        <div className=\"my-4\">\n          <Staff.Link to=\"new/\" requiredPerms={['store.add_product']} className=\"btn btn-primary btn-md\">\n            Add a new product\n          </Staff.Link>\n        </div>\n      </div>\n    );\n\n  return (\n    <div className=\"\">\n      <Table\n        items={response.items}\n        header={\n          <>\n            <Table.Th></Table.Th>\n            <Table.Th>Name</Table.Th>\n            <Table.Th>Retail price</Table.Th>\n            <Table.Th>Sale price</Table.Th>\n          </>\n        }\n        className=\"product-staff-table w-100\"\n        renderItem={(product: ProductType) => {\n          if (!product?.slug) return null;\n\n          const instance = StaffProduct(product);\n          const to = `${instance.slug}/${`${params}` ? `?${params}` : ''}`;\n          return (\n            <Table.Tr key={product.slug}>\n              <Table.Th>\n                <StaffImg.Thumb {...product?.cover_data} className=\"rounded\" />\n              </Table.Th>\n\n              <Table.Td>\n                <Staff.Link to={to}>\n                  <div className=\"text-ellipsis\">\n                    {product.name}\n                    <PublishedIcon show={product.is_published || false} />\n                  </div>\n                  <div className=\"\">{product.category_data?.name}</div>\n                </Staff.Link>\n              </Table.Td>\n\n              <Table.Td>\n                <PriceDisplay {...product.retail_price_data} lineThrough={product.is_on_sale} />\n              </Table.Td>\n              <Table.Td>{product.is_on_sale && <PriceDisplay sale {...product.sale_price_data} />}</Table.Td>\n            </Table.Tr>\n          );\n        }}\n      />\n\n      <Pagination {...response.data} component={Staff.Link} to />\n    </div>\n  );\n};\n","import { NavLink, useSearchParams } from 'react-router-dom';\n\nimport { ImgAddButtonProps, StaffImg, StaffImgAddButton } from '@miq/staffjs';\nimport { IFormUpdateProps } from '@miq/formjs';\nimport { getCN } from '@miq/utiljs';\nimport { Button, ConfirmButton, Icons, ImgType } from '@miq/componentjs';\n\nimport { emitter } from '../events';\nimport { ProductType } from '../types';\nimport { ProductPriceDisplay, PublishedIcon } from '../components';\n\nimport { StaffProduct } from './models';\n\n//#region ============================== BUTTONS\n\ntype StaffProductInstanceProps = { instance: ReturnType<typeof StaffProduct> };\n\nexport type ProductImagesAddButtonProps = Omit<ImgAddButtonProps, 'onSuccessMulti' | 'onErrorMulti'> & {\n  productInstance: ReturnType<typeof StaffProduct>;\n};\n\n/**\n * Button component for adding images to a product\n * ```js\n * <ProductImagesAddButton productInstance={instance} onSuccess={(res: any) => onUpdate?.(res.data)} />\n * ```\n */\n\nexport const ProductImagesAddButton = (props: ProductImagesAddButtonProps) => {\n  const { productInstance, onSuccess, onError, ...rest } = props;\n  return (\n    <StaffImgAddButton\n      className=\"btn-primary-3\"\n      {...rest}\n      multiple={true}\n      onSuccessMulti={(resArray) => {\n        const imgsArray = resArray\n          .map(({ data }: any) => data?.slug)\n          .filter((slug) => !productInstance.images?.includes(slug));\n        return productInstance\n          .update({ images: [...productInstance.images!, ...imgsArray] })\n          .then((res) => onSuccess?.(res))\n          .catch((err) => onError?.(err));\n      }}\n    />\n  );\n};\n\nexport const ProductDeleteButton: React.FC<\n  Omit<IFormUpdateProps, 'context'> & StaffProductInstanceProps & { label?: string }\n> = (props) => {\n  const { instance, onSuccess, onError, label } = props;\n\n  const handleDelete = (setOpen: any) => {\n    instance\n      .destroy()\n      .then((res: any) => {\n        setOpen?.(false);\n        onSuccess?.(res);\n        emitter.destroy({ slug: instance.slug });\n      })\n      .catch((err: any) => onError?.(err));\n  };\n  return (\n    <ConfirmButton\n      renderHeader={() => <div>Supprimer '{instance.name}'</div>}\n      renderFooter={({ setOpen }) => (\n        <div className=\"d-flex justify-content-between align-items-center\">\n          <Button onClick={() => setOpen(false)}>Annuler</Button>\n\n          <Button onClick={() => handleDelete(setOpen)} className=\"btn-danger\">\n            Supprimer\n          </Button>\n        </div>\n      )}\n      render={() => <div className=\"p-3\">Are you sure you want to delete this</div>}\n      className={getCN(['product-delete-button btn-danger-3', props.className])}\n    >\n      <Icons.Trash />\n      {label && <span className=\"label\">{label}</span>}\n    </ConfirmButton>\n  );\n};\n\n//#endregion ============================== BUTTONS\n\nexport const ProductCardItem = ({ data, ...props }: { data: ProductType }) => {\n  const instance = StaffProduct(data);\n\n  return (\n    <div className=\"p-card-list-item p-1 mb-1\">\n      <div className=\"d-flex align-items-center\">\n        <div className=\"p-name text-ellipsis\">{instance.name_truncated}</div>\n        <div className=\"ms-1\">\n          <PublishedIcon show={instance.is_published} />\n        </div>\n      </div>\n\n      <div className=\"d-flex\">\n        <StaffImg.Square {...instance?.cover_data} />\n        <div className=\"p-info ps-1\">\n          <ProductPriceDisplay {...instance.export()} className=\"d-flex flex-wrap\" />\n          <div className=\"p-category\">{instance.category_data?.name}</div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport type ProductCardListProps = {\n  items: ProductType[];\n  itempath: string;\n};\nexport const ProductCardList = ({ items, itempath }: ProductCardListProps) => {\n  const [params] = useSearchParams();\n  return (\n    <div className=\"p-card-list-items\">\n      {items.map((item: ProductType) => {\n        // let to = `${itempath}${item.slug}/?${params}`;\n        let to = `${itempath}${item.slug}/?${params}`;\n        return (\n          <NavLink to={to} key={item.slug}>\n            <ProductCardItem data={item} />\n          </NavLink>\n        );\n      })}\n    </div>\n  );\n};\n","import * as React from 'react';\n\nimport Form, {\n  CheckboxFieldProps,\n  DescriptionField,\n  FormProps,\n  IFormCallbackProps,\n  IFormUpdateProps,\n  NameField,\n  SelectFieldProps,\n  TextChoicesType,\n  TextFieldProps,\n  useForm,\n} from '@miq/formjs';\nimport { getCN, isRequired as isR } from '@miq/utiljs';\n\nimport { emitter } from '../events';\nimport { CategoryChoicesType } from '../types';\n\nimport { StaffProduct } from './models';\nimport { URLSearchParamsInit, useSearchParams } from 'react-router-dom';\n\n/**\n *\n */\n\ninterface IProductUpdateFormProps extends IFormUpdateProps {\n  instance: ReturnType<typeof StaffProduct>;\n  onWillSubmit?: () => void;\n  fields?: string[];\n}\n\nexport const ProductQuickUpdateForm = (\n  props: Omit<IProductUpdateFormProps, 'context'> & { categories: CategoryChoicesType }\n) => {\n  const { instance, categories, ...rest } = props;\n\n  const form = useForm({\n    name: instance.name || '',\n    category: instance.category || '',\n    description: instance.description || '',\n    retail_price: instance?.retail_price || 0.0,\n    is_pre_sale: instance.is_pre_sale || false,\n    is_pre_sale_text: instance.is_pre_sale_text || '',\n  });\n\n  const { errors } = form;\n  const { fields = ['name', 'category', 'description', 'retail_price', 'is_pre_sale', 'is_pre_sale_text'] } = props;\n\n  return (\n    <ProductUpdateForm {...rest} context={form} instance={instance} fields={fields}>\n      <ProductForm.NameField error={errors.name} />\n\n      <ProductForm.DescriptionField error={errors.description} />\n\n      <div className=\"d-grid grid-md-3 gap-2\">\n        {categories && <ProductForm.CategoryField categories={categories} error={errors.category} />}\n        <ProductForm.RetailPriceField error={errors.retail_price} />\n      </div>\n\n      <ProductForm.PresaleCheckboxField label=\"En pré-vente\" error={errors.is_pre_sale} />\n      {form.values.is_pre_sale && (\n        <ProductForm.PresaleTextField label=\"Pre-sale text\" placeholder=\"Explain ...\" error={errors.is_pre_sale_text} />\n      )}\n      <Form.Submit value=\"Sauvegarder\" className=\"btn-primary-3\" />\n    </ProductUpdateForm>\n  );\n};\n\nexport function ProductUpdateForm({ children, ...props }: IProductUpdateFormProps) {\n  const {\n    instance = isR('StaffProduct instance'),\n    fields = isR('fields instance'),\n    onSuccess,\n    onError,\n    ...rest\n  } = props;\n\n  const { context } = rest;\n\n  const handleSubmit = (e: React.FormEvent) => {\n    e.preventDefault();\n    props?.onWillSubmit?.();\n\n    const fd: any = {};\n    fields.forEach((field) => {\n      const value = context.values[field];\n      if (value == null) return;\n      if (field == 'is_pre_sale_dt' && !value) return;\n\n      fd[field] = value;\n    });\n\n    return instance\n      .update(fd)\n      .then(({ data }: any) => {\n        onSuccess?.(data);\n        emitter.update(data);\n      })\n      .catch((err: any) => {\n        if (onError) return onError(err);\n        return context.handleError(err);\n      });\n  };\n\n  return (\n    <ProductForm {...rest} onSubmit={handleSubmit}>\n      {children}\n    </ProductForm>\n  );\n}\n\n/**\n *\n */\n\nexport interface ProductCreateFormProps extends IFormCallbackProps {}\n\nexport const ProductCreateForm: React.FC<ProductCreateFormProps> = (props) => {\n  const form = useForm({ name: '', retail_price: '', description: '' });\n\n  const { errors } = form;\n\n  const handleCreate = (e: React.FormEvent) => {\n    e.preventDefault();\n    StaffProduct()\n      .create(form.values)\n      .then((res: any) => props?.onSuccess?.(res))\n      .catch((err: any) => form.handleError(err));\n  };\n\n  return (\n    <ProductForm context={form} onSubmit={handleCreate}>\n      <ProductForm.NameField label=\"Nom du produit\" error={errors.name} />\n      <ProductForm.RetailPriceField required={false} label=\"Prix du produit\" error={errors.retail_price} />\n      <ProductForm.DescriptionField label=\"Description du produit\" error={errors.description} />\n\n      <Form.Submit value=\"Sauvegarder\" className=\"btn-primary-3\" />\n    </ProductForm>\n  );\n};\n\n/**\n *\n */\n\nexport const ProductForm = (props: FormProps) => <Form {...props} />;\n\n/**\n *\n */\n\nProductForm.NameField = (props: TextFieldProps) => (\n  <NameField placeholder=\"Entrez un titre clair et concis ...\" {...props} />\n);\nProductForm.DescriptionField = (props: TextFieldProps) => (\n  <DescriptionField placeholder=\"Décrivez les caractéristiques et les avantages ...\" {...props} />\n);\n\nProductForm.CategoryField = (props: SelectFieldProps & { categories: CategoryChoicesType }) => {\n  const { label, text, error, categories, ...rest } = props;\n\n  return (\n    <Form.Field {...{ label, text, error }}>\n      <Form.Select {...rest} required name=\"category\" nullValue={{ label: 'Sélectionnez une catégorie ...' }}>\n        {categories?.items?.map((cat) => {\n          return <Form.Option {...cat} key={cat.value} />;\n        })}\n      </Form.Select>\n    </Form.Field>\n  );\n};\n\nProductForm.SalePriceField = (props: TextFieldProps) => {\n  const { label, text, error, ...rest } = props;\n  return (\n    <Form.Field {...{ label, text, error }}>\n      <Form.Text\n        aria-describedby=\"sale_price_label\"\n        min=\"0\"\n        step=\"0.01\"\n        required\n        placeholder=\"Prix réduit\"\n        {...rest}\n        type=\"number\"\n        name=\"sale_price\"\n      />\n    </Form.Field>\n  );\n};\n\nProductForm.OnSaleCheckboxField = (props: CheckboxFieldProps) => {\n  const { label, text, error, ...rest } = props;\n\n  return (\n    <Form.Field {...{ label, text, error }} checkbox>\n      <Form.Checkbox {...rest} name=\"is_on_sale\" />\n    </Form.Field>\n  );\n};\n\nProductForm.PresaleCheckboxField = (props: CheckboxFieldProps) => {\n  const { label, text, error, ...rest } = props;\n\n  return (\n    <Form.Field {...{ label, text, error }} checkbox>\n      <Form.Checkbox {...rest} name=\"is_pre_sale\" />\n    </Form.Field>\n  );\n};\n\nProductForm.PresaleTextField = (props: TextFieldProps) => {\n  const { label, text, error, ...rest } = props;\n  return (\n    <Form.Field {...{ label, text, error }}>\n      <Form.TextAreaX placeholder=\"\" {...rest} name=\"is_pre_sale_text\" aria-describedby=\"is_pre_sale_text_label\" />\n    </Form.Field>\n  );\n};\n\nProductForm.RetailPriceField = (props: TextFieldProps) => {\n  const { label, text, error, ...rest } = props;\n\n  return (\n    <Form.Field {...{ label, text, error }}>\n      <Form.Text\n        required\n        placeholder=\"Prix\"\n        aria-describedby=\"retail_price_label\"\n        min=\"0\"\n        step=\"0.01\"\n        {...rest}\n        type=\"number\"\n        name=\"retail_price\"\n      />\n    </Form.Field>\n  );\n};\n\nProductForm.StageSelectField = (props: SelectFieldProps & { stages: TextChoicesType }) => {\n  const { label, text, error, stages, ...rest } = props;\n\n  return (\n    <Form.Field {...{ label, text, error }}>\n      <Form.Select required name={'stage'} nullValue={{ label: 'Select stage' }} {...rest}>\n        {stages?.map?.((stage) => {\n          return <Form.Option {...stage} key={stage.value} />;\n        })}\n      </Form.Select>\n    </Form.Field>\n  );\n};\n\ntype ProductListFilterFormProps = {\n  children?: React.ReactNode;\n  categories?: CategoryChoicesType;\n};\n\nexport const ProductListFilterForm = ({ children, ...props }: ProductListFilterFormProps) => {\n  const [params, setParams] = useSearchParams();\n  const { categories, ...rest } = props;\n\n  return (\n    <form {...rest} action=\".\" method=\"GET\" onSubmit={(e) => e.preventDefault()}>\n      {children || (\n        <>\n          {categories && <ProductListFilterForm.Category {...{ params, setParams, categories }} />}\n          <ProductListFilterForm.Published {...{ params, setParams }} />\n          <ProductListFilterForm.Sale {...{ params, setParams }} />\n          <ProductListFilterForm.PreSale {...{ params, setParams }} />\n        </>\n      )}\n    </form>\n  );\n};\n\ntype QuerySelectFieldProps = {\n  emptyLabel?: string;\n  name: string;\n  children?: React.ReactNode;\n  params: URLSearchParams;\n  setParams: (\n    nextInit: URLSearchParamsInit,\n    navigateOptions?:\n      | {\n          replace?: boolean | undefined;\n          state?: any;\n        }\n      | undefined\n  ) => void;\n};\n\nProductListFilterForm.Category = (props: Omit<QuerySelectFieldProps, 'name'> & { categories: CategoryChoicesType }) => {\n  const { categories, ...rest } = props;\n\n  return (\n    <QuerySelectField emptyLabel=\"Categorie ...\" {...rest} name=\"cat\">\n      {categories.items.map((cat) => {\n        return (\n          <option value={cat.value} key={cat.slug}>\n            {cat.label}\n          </option>\n        );\n      })}\n    </QuerySelectField>\n  );\n};\n\nProductListFilterForm.Published = (props: Omit<QuerySelectFieldProps, 'name'>) => {\n  return (\n    <QuerySelectField emptyLabel=\"Tous les produits ...\" {...props} name=\"published\">\n      <option value=\"include\">Produits publiés</option>\n      <option value=\"exclude\">Produits non publiés</option>\n    </QuerySelectField>\n  );\n};\n\nconst QuerySelectField = ({ children, ...props }: QuerySelectFieldProps) => {\n  const { name, params, setParams, emptyLabel } = props;\n  return (\n    <select\n      className=\"miq-select\"\n      name={name}\n      value={params.get(name) || ''}\n      onChange={(e) => {\n        const { value } = e.target;\n\n        if (!value) params.delete(name);\n        else params.set(name, value);\n        params.delete('page');\n\n        setParams(params);\n      }}\n    >\n      {emptyLabel && <option value=\"\">{emptyLabel}</option>}\n      {children}\n    </select>\n  );\n};\n\nProductListFilterForm.PreSale = (props: Omit<QueryToggleFieldProps, 'name' | 'label'>) => {\n  return <QueryToggleField {...props} name=\"presale\" label=\"En pré-vente\" />;\n};\n\nProductListFilterForm.Sale = (props: Omit<QueryToggleFieldProps, 'name' | 'label'>) => {\n  return <QueryToggleField {...props} name=\"sale\" label=\"En promo\" />;\n};\n\ntype QueryToggleFieldProps = Omit<QuerySelectFieldProps, 'emptyLabel'> & { label: string; inputId?: string };\n\nconst QueryToggleField = (props: QueryToggleFieldProps) => {\n  const { label, name, params, setParams, inputId } = props;\n\n  return (\n    <div className={getCN(['miq-query-filter-toggle d-flex align-items-center'])}>\n      <input\n        type=\"checkbox\"\n        className=\"miq-checkbox me-1\"\n        id={inputId}\n        onChange={(e) => {\n          const { checked } = e.target;\n          if (!checked) params.delete(name);\n          else params.set(name, `${checked}`);\n          params.delete('page');\n          setParams(params);\n        }}\n        checked={Boolean(params.get(name)) || false}\n      />\n      <label htmlFor={inputId}>{label}</label>\n    </div>\n  );\n};\n","\nimport { StaffModel, StaffService } from '@miq/staffjs';\nimport { ProductType } from '../types';\n\n\nclass StaffProductService extends StaffService<ProductType> {\n  publish() {\n    return this.patch(`${this._path}publish/`, { is_published: true });\n  }\n\n  unpublish() {\n    return this.patch(`${this._path}publish/`, { is_published: false });\n  }\n\n  postSize(values: any) {\n    return this.post(`${this._path}size/new/`, values);\n  }\n  patchSize(sizeSlug: string, values: any) {\n    return this.patch(`${this._path}size/${sizeSlug}/`, values);\n  }\n  deleteSize(sizeSlug: string) {\n    return this.delete(`${this._path}size/${sizeSlug}/`);\n  }\n  postAttribute(values: any) {\n    return this.post(`${this._path}attribute/new/`, values);\n  }\n  patchAttribute(attrSlug: string, values: any) {\n    return this.patch(`${this._path}attribute/${attrSlug}/`, values);\n  }\n  deleteAttribute(attrSlug: string) {\n    return this.delete(`${this._path}attribute/${attrSlug}/`);\n  }\n  swapCover(slug: string) {\n    return this.patch(`${this._path}swap-cover/`, { slug });\n  }\n}\n\nexport const StaffProduct = (data: ProductType = {}) => {\n  let { dt_published } = data;\n  if (dt_published) dt_published = new Date(dt_published);\n\n  return StaffModel<ProductType, StaffProductService>({ ...data, dt_published }, 'products', StaffProductService);\n};\n","import { useSearchParams } from 'react-router-dom';\n\nimport { useRequest } from '@miq/hookjs';\nimport { StaffProduct } from './models';\n\nexport const useProductListRequest = (orderSlug?: string) => {\n  const [params] = useSearchParams();\n\n  const cat = params.get('cat');\n  const page = params.get('page');\n  const published = params.get('published');\n  const presale = params.get('presale');\n  const sale = params.get('sale');\n\n  let searchParams: any = { page, cat, published, presale, sale };\n  if (orderSlug) searchParams.supplier_order_slug = orderSlug;\n\n  return useRequest(() => StaffProduct().list({ params: searchParams }), {\n    refreshDeps: [page, cat, published, presale, sale, orderSlug],\n  });\n};\n","import React from 'react';\nimport { Button, ButtonProps, Icons, ToastEmitter } from '@miq/componentjs';\n\n// https://www.bennadel.com/blog/3961-having-fun-with-the-horizontal-usage-of-position-sticky-in-angular-11-0-5.htm\n\nimport './component.scss';\n\nimport { StaffCategory } from './Category';\nimport { StaffProduct } from './Product';\nimport { PriceDataType, ProductType } from './types';\nimport { getCN } from '@miq/utiljs';\n\ntype InstanceType = ReturnType<typeof StaffProduct> | ReturnType<typeof StaffCategory>;\n\ninterface UpdateButtonProps extends ButtonProps {\n  instance: InstanceType;\n  onSuccess: (r: any) => void;\n}\n\nexport const PublishButton: React.FC<UpdateButtonProps> = (props) => {\n  const { instance, onClick, onSuccess, onError, ...rest } = props;\n\n  const handleClick = () => {\n    if (instance.is_published) return null;\n    return instance\n      .publish()\n      .then((res: any) => onSuccess?.(res))\n      .catch((err: any) => onError?.(err));\n  };\n\n  return <Button onClick={handleClick} className=\"btn-primary btn-md\" {...rest} disabled={instance.is_published} />;\n};\n\nexport const UnPublishButton: React.FC<UpdateButtonProps> = (props) => {\n  const { instance, onClick, onSuccess, onError, ...rest } = props;\n\n  const handleClick = () => {\n    if (!instance.is_published) return null;\n    return instance\n      .unpublish()\n      .then((res: any) => onSuccess?.(res))\n      .catch((err: any) => onError?.(err));\n  };\n\n  return <Button className=\"btn-danger btn-md\" onClick={handleClick} {...rest} disabled={!instance.is_published} />;\n};\n\n//#region ================================== COMPONENTS =============================================================\n\nexport type PriceDisplayProps = PriceDataType & {\n  className?: string;\n  sale?: string | boolean;\n  lineThrough?: string | boolean;\n};\n\nexport const PriceDisplay = ({ amountWithSymbol, className, sale, lineThrough }: PriceDisplayProps) => (\n  <div className={getCN(['miq-price-display', sale && 'text-danger', lineThrough && 'text-line-through', className])}>\n    {amountWithSymbol}\n  </div>\n);\n\nexport const ProductPriceDisplay = ({\n  retail_price_data,\n  is_on_sale,\n  sale_price_data,\n  ...props\n}: ProductType & { className?: string; style?: any }) => {\n  if (!retail_price_data) return null;\n\n  const isSale = is_on_sale && sale_price_data?.amountWithSymbol != null;\n\n  return (\n    <div className={getCN(['miq-product-price-display', props.className])} style={props.style}>\n      {isSale && <PriceDisplay sale {...sale_price_data} className=\"miq-sale-price me-1\" />}\n      <PriceDisplay {...retail_price_data} lineThrough={isSale} className=\"miq-retail-price\" />\n    </div>\n  );\n};\n\nexport const ProductSupplierData = (props: { instance: InstanceType }) => {\n  // const { instance } = props;\n\n  return (\n    <div className=\"supplier-data\">\n      <div className=\"item\">\n        <span className=\"title\">Supplier</span>\n        {/* <span className=\"value\">{instance.supplier_name}</span> */}\n      </div>\n      <div className=\"item\">\n        <span className=\"title\">Item ID</span>\n        {/* <span className=\"value\">{instance.supplier_item_id}</span> */}\n      </div>\n      <div className=\"item\">\n        <span className=\"title\">Category</span>\n        {/* <span className=\"value\">{instance.supplier_item_category}</span> */}\n      </div>\n      <div className=\"item\">\n        <span className=\"title\"> Item cost</span>\n        <span className=\"value\">{/* {instance.supplier_item_cost} ({instance.supplier_item_cost_currency}) */}</span>\n      </div>\n    </div>\n  );\n};\n\nexport const PublishedIcon = ({ show, ...props }: React.ComponentPropsWithoutRef<'svg'> & { show?: boolean }) =>\n  show ? <Icons.CheckCircle {...props} className=\"published-icon\" /> : null;\n\n//#endregion ===============================================================================================\n\nexport const toast = new ToastEmitter();\n\n{\n  /* <Toaster instance={t}></Toaster> */\n}\n// <button\n//   onClick={() => {\n//     t.info({ message: 'Hello', autoClose: true });\n//   }}\n// >\n//   Click me\n// </button>\n","import * as React from 'react';\nimport EventEmitter from 'events';\n\ninterface IEventStateSyncProps {\n  children?: React.ReactNode;\n}\n\nclass CrudEmitter extends EventEmitter {\n  prefix?: string;\n\n  constructor(...args: any) {\n    const { prefix = '', ...rest } = args;\n    super(rest);\n\n    this.prefix = prefix;\n  }\n\n  create(payload: any) {\n    this.emit(`${this.prefix}-create`, payload);\n  }\n  retrieve(payload: any) {\n    this.emit(`${this.prefix}-retrieve`, payload);\n  }\n  list(payload: any) {\n    this.emit(`${this.prefix}-list`, payload);\n  }\n  update(payload: any) {\n    this.emit(`${this.prefix}-update`, payload);\n  }\n  destroy(payload: any) {\n    this.emit(`${this.prefix}-destroy`, payload);\n  }\n}\n\nexport const emitter = new CrudEmitter();\n\ntype FN<T> = T & { [key: string]: any; slug: string };\n\ntype CallBacksType<T = void> = {\n  onList?: () => void;\n  onRetrieve?: () => void;\n  onCreate?: (payload: FN<T>) => void;\n  onUpdate?: (payload: FN<T>) => void;\n  onDestroy?: (payload: FN<T>) => void;\n};\n\nexport function useCrudEmitter(callbacks: CallBacksType, match?: (p: any) => boolean) {\n  React.useEffect(() => {\n    emitter.on('-create', (payload: any) => {\n      if (match && !match(payload)) return;\n\n      callbacks.onCreate?.(payload);\n    });\n\n    emitter.on('-update', (payload: any) => {\n      if (match && !match(payload)) return;\n\n      callbacks.onUpdate?.(payload);\n    });\n\n    emitter.on('-destroy', (payload: any) => {\n      if (match && !match(payload)) return;\n\n      callbacks.onDestroy?.(payload);\n    });\n  }, []);\n}\n"],"names":["ProductCreateView","React","ProductStaffUpdateView","ProductStaffIndexView","useProductListRequest","res","rest","useCrudEmitter","onUpdate","updateItem","onDestroy","removeItem","r","Response","isSuccess","path","element","UpdateView","response","index","title","back","actions","to","requiredPerms","className","categories","data","ProductStaffTable","items","itempath","props","useSearchParams","params","length","header","renderItem","product","slug","instance","StaffProduct","cover_data","name","show","is_published","category_data","retail_price_data","lineThrough","is_on_sale","sale","sale_price_data","component","Staff","ProductImagesAddButton","productInstance","onSuccess","onError","multiple","onSuccessMulti","resArray","imgsArray","map","filter","images","includes","update","then","catch","err","ProductDeleteButton","label","renderHeader","renderFooter","setOpen","onClick","destroy","emitter","handleDelete","render","getCN","ProductCardItem","name_truncated","export","ProductCardList","item","ProductQuickUpdateForm","form","useForm","category","description","retail_price","is_pre_sale","is_pre_sale_text","errors","fields","ProductUpdateForm","context","ProductForm","NameField","error","DescriptionField","CategoryField","RetailPriceField","PresaleCheckboxField","values","PresaleTextField","placeholder","value","children","isR","onSubmit","e","preventDefault","onWillSubmit","fd","forEach","field","handleError","ProductCreateForm","create","required","text","nullValue","cat","key","SalePriceField","min","step","type","OnSaleCheckboxField","checkbox","StageSelectField","stages","stage","ProductListFilterForm","setParams","action","method","Category","Published","Sale","PreSale","QuerySelectField","emptyLabel","get","onChange","target","set","delete","QueryToggleField","inputId","id","checked","Boolean","htmlFor","StaffProductService","this","patch","_path","post","sizeSlug","attrSlug","StaffService","dt_published","Date","StaffModel","orderSlug","page","published","presale","searchParams","supplier_order_slug","useRequest","list","refreshDeps","PublishButton","publish","disabled","UnPublishButton","unpublish","PriceDisplay","amountWithSymbol","ProductPriceDisplay","isSale","style","PublishedIcon","ToastEmitter","CrudEmitter","args","prefix","payload","emit","EventEmitter","callbacks","match","on","onCreate","call"],"sourceRoot":""}
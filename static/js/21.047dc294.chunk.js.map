{"version":3,"sources":["shop/category/UpdateView.jsx"],"names":["StaffCategoryUpdateView","props","catSlug","match","params","useState","cat","setCat","toast","useContext","ToastCtx","form","useForm","name","description","title","slug_public","is_published","setValues","useEffect","catServices","detail","then","data","page","catch","err","response","status","back","className","slug","cover","cover_data","onCreate","imgData","patch","console","log","onUpdate","onDelete","Section","actions","pill","context","onSubmit","e","preventDefault","values","handleError","Label","value","error","errors","TextAreaX","placeholder","Submit","patchPage","success","message","CheckboxInput","TextInput","required","maxLength"],"mappings":"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","file":"static/js/21.047dc294.chunk.js","sourcesContent":["import { useContext, useEffect, useState } from \"react\";\n\nimport { AdminView, StaffCoverUpdateForm, PublishedStatusSpan } from \"@miq/adminjs\";\nimport Form, { useForm } from \"@miq/form\";\nimport { ToastCtx } from \"@miq/components\";\n\nimport { catServices } from \"./utils\";\nimport { CatNameInput } from \"./components\";\n\nexport default function StaffCategoryUpdateView(props) {\n  const { catSlug } = props.match.params;\n\n  const [cat, setCat] = useState(null);\n  const toast = useContext(ToastCtx);\n\n  const form = useForm({ name: \"\", description: \"\", title: \"\", slug_public: \"\", is_published: false });\n  const { setValues } = form;\n\n  useEffect(() => {\n    catServices\n      .detail(catSlug)\n      .then((data) => {\n        setCat(data);\n\n        setValues({\n          name: data.name || \"\",\n          description: data.description || \"\",\n          title: data.page.title || \"\",\n          slug_public: data?.page?.slug_public || \"\",\n          is_published: data?.page?.is_published || false,\n        });\n      })\n      .catch((err) => {\n        if (err.response) {\n          // toast.error({ message: \"Something went wrong\" });\n          if (err.response.status === 404) {\n            return;\n          }\n        }\n      });\n  }, [catSlug, setValues]);\n\n  if (!cat) return null;\n\n  const handleUpdate = (e) => {\n    e.preventDefault();\n    catServices\n      .patch(cat.slug, { name: form.values.name, description: form.values.description })\n      .then((data) => {})\n      .catch((err) => {\n        form.handleError(err);\n      });\n  };\n\n  return (\n    <AdminView back={props?.back} title=\"Modifier une catégorie\" className=\"cat-update-view\">\n      <div className=\"d-grid grid-md-4 gap-2\">\n        <div className=\"span-md-1\">\n          <StaffCoverUpdateForm\n            slug={cat?.cover}\n            data={cat.cover_data}\n            onCreate={(imgData) => {\n              catServices\n                .patch(cat.slug, { cover: imgData.slug })\n                .then((data) => {\n                  setCat(data);\n                })\n                .catch((err) => {\n                  console.log(err);\n                });\n            }}\n            onUpdate={(cover_data) => {\n              return setCat({ ...cat, cover_data });\n            }}\n            onDelete={() => {\n              return setCat({ ...cat, cover_data: null, cover: null });\n            }}\n          />\n        </div>\n        <AdminView.Section\n          title=\"Details\"\n          actions={<PublishedStatusSpan is_published={cat?.page?.is_published} pill />}\n          className=\"span-md-3\"\n        >\n          <Form context={form} onSubmit={handleUpdate}>\n            <div className=\"mb-1\">\n              <Form.Label value=\"Nom de la catégorie\" className=\"mb-1\" />\n              <CatNameInput error={form.errors.name} />\n            </div>\n\n            <div className=\"mb-1\">\n              <Form.Label value=\"Description de la catégorie\" className=\"mb-1\" />\n              <Form.TextAreaX\n                name=\"description\"\n                error={form.errors.description}\n                placeholder={\"Decrivez la catégorie ...\"}\n              />\n            </div>\n\n            <div className=\"my-2\">\n              <Form.Submit value=\"Sauvegarder\" className=\"btn btn-primary\" />\n            </div>\n          </Form>\n        </AdminView.Section>\n      </div>\n\n      <Form\n        context={form}\n        onSubmit={(e) => {\n          e.preventDefault();\n          const { title, slug_public, is_published } = form.values;\n          return catServices\n            .patchPage(\n              catSlug,\n              { title, slug_public, is_published },\n              { title: cat.page.title, slug_public: cat.page.slug_public, is_published: cat.page.is_published }\n            )\n            .then((data) => {\n              // setCat(data);\n              toast.success({ message: \"Category updated.\" });\n            })\n            .catch((err) => {\n              form.handleError(err);\n              toast.error({ message: \"Could not update item.\" });\n            });\n        }}\n      >\n        <AdminView.Section title=\"Status\">\n          <div className=\"d-flex align-items-center\">\n            <Form.CheckboxInput name=\"is_published\" error={form.errors.is_published} className=\"me-2\" />\n            <Form.Label value=\"Publier cette categorie\" />\n          </div>\n        </AdminView.Section>\n\n        <AdminView.Section title=\"Seo\">\n          <div className=\"mb-1\">\n            <Form.Label value=\"Title\" className=\"mb-1\" />\n            <Form.TextInput\n              required\n              name=\"title\"\n              error={form.errors.title}\n              placeholder=\"Give a name to the item\"\n              maxLength={99}\n            />\n          </div>\n          <div className=\"mb-1\">\n            <Form.Label value=\"Slug\" className=\"mb-1\" />\n            <Form.TextInput\n              required\n              name=\"slug_public\"\n              error={form.errors.slug_public}\n              placeholder={\"Write slug ...\"}\n              maxLength={99}\n            />\n          </div>\n        </AdminView.Section>\n\n        <div className=\"\">\n          <Form.Submit value=\"Save\" className=\"btn btn-primary-3\" />\n        </div>\n      </Form>\n    </AdminView>\n  );\n}\n"],"sourceRoot":""}
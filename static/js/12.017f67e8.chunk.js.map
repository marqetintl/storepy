{"version":3,"sources":["shop/product/components.jsx","shop/product/Attribute.jsx","shop/product/UpdateView.jsx"],"names":["ProductUpdateForm","children","form","props","context","NameInput","onSuccess","onError","product","placeholder","rest","Label","value","className","TextInput","required","name","onSave","slug","productServices","patch","then","data","catch","err","error","errors","maxLength","ProductImageUploadButton","multiple","onCreate","imgsArray","filter","img","images","map","onCreateSuccess","onCreateError","ProductImageAltTextInput","image","useForm","alt_text","SupplierData","supplier_name","supplier_item_id","supplier_item_category","supplier_item_cost","supplier_item_cost_currency","href","supplier_item_url","target","rel","AttrNameInput","minLength","AttrValueInput","AttributeUpdateForm","instance","onSubmit","e","preventDefault","patchAttribute","values","handleError","style","alignItems","Icon","Icons","Trash","render","args","onClick","deleteAttribute","setOpen","toast","message","renderHeader","Submit","AttributeCreateForm","initValues","postAttribute","setValues","type","ViewTabs","tab","prodSlug","setProduct","useState","addAtr","setAddAtr","Section","title","text","actions","productData","attributes","attr","pData","gap","images_data","label","i","fD","slug_public","patchPage","page","success","TextAreaX","description","productFormDefaultValues","category","retail_price","is_pre_sale","is_pre_sale_text","sale_price","is_on_sale","ProductQuickUpdateForm","categories","is_published","pill","SelectInput","nullValue","items","cat","Option","key","id","min","step","CheckboxInput","cover","cover_data","imgData","onUpdate","onDelete","ProductUpdateView","match","params","setTab","useContext","ToastCtx","useEffect","detail","response","console","log","status","back","prev_slug","to","next_slug","getClassName","ProductPublishButton","publish"],"mappings":"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","file":"static/js/12.017f67e8.chunk.js","sourcesContent":["import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nimport Form, { useForm, FormProvider } from \"@miq/form\";\nimport { ImageAltTextInput } from \"@miq/adminjs\";\nimport { ImgUploadButton } from \"@miq/components\";\nimport { productServices } from \"./utils\";\n\n//\n// ========================= FORM COMPONENTS ===================================================================\n//\n\nexport const ProductCategoryInput = ({ onSuccess, onError, ...props }) => {\n  const { placeholder = \"Give a name to the item\", form } = props;\n  if (!form) return null;\n\n  return (\n    <>\n      <Form.Label value=\"Name\" className=\"mb-1\" />\n      <Form.TextInput {...props} name=\"name\" error={form.errors.name} placeholder={placeholder} maxLength={99} />\n    </>\n  );\n};\n\nexport const ProductNameInput = ({ onSuccess, onError, ...props }) => {\n  const { product, placeholder = \"Give a name to the item\", form, ...rest } = props;\n\n  if (!form) return null;\n\n  return (\n    <>\n      <Form.Label value=\"Name\" className=\"mb-1\" />\n      <Form.TextInput\n        {...rest}\n        required\n        name=\"name\"\n        onSave={({ value }) => {\n          if (!value || !product || !product.slug) return;\n\n          return productServices\n            .patch(product.slug, { name: value }, { name: product.name })\n            .then((data) => {\n              if (onSuccess) return onSuccess(data);\n            })\n            .catch((err) => {\n              if (onError) return onError(err);\n            });\n        }}\n        error={form.errors.name}\n        placeholder={placeholder}\n        maxLength={99}\n      />\n    </>\n  );\n};\n\nexport const ProductUpdateForm = ({ children, form, ...props }) => {\n  if (!form) return null;\n  return (\n    <Form {...props} context={form}>\n      {children}\n    </Form>\n  );\n};\n\nProductUpdateForm.NameInput = ProductNameInput;\n\nexport const ProductImageUploadButton = ({ product, ...props }) => {\n  if (!product || !product.slug) return null;\n\n  return (\n    <ImgUploadButton\n      multiple={true}\n      className=\"btn-primary-3\"\n      onCreate={(imgsArray) => {\n        imgsArray = imgsArray.filter((img) => img && img.slug);\n        return productServices\n          .patch(product.slug, { images: [...product.images, ...imgsArray.map((img) => img.slug)] })\n          .then((data) => {\n            if (props.onCreateSuccess) props.onCreateSuccess(data);\n          })\n          .catch((err) => {\n            if (props.onCreateError) props.onCreateError(err);\n          });\n      }}\n    />\n  );\n};\n\nexport const ProductImageAltTextInput = ({ image, ...props }) => {\n  const form = useForm({ alt_text: image?.alt_text || \"\" });\n\n  if (!image || !image.slug) return null;\n\n  return (\n    <FormProvider value={form} className={props.className}>\n      <ImageAltTextInput\n        required\n        image={image}\n        onSuccess={props.onSuccess}\n        onError={props.onError}\n        placeholder=\"Add an alternative text ...\"\n      />\n    </FormProvider>\n  );\n};\n\nProductImageAltTextInput.propTypes = {\n  image: PropTypes.shape({\n    slug: PropTypes.string.isRequired,\n  }),\n\n  onUpdate: PropTypes.func,\n  onError: PropTypes.func,\n};\n\nexport const ProductCoverUploadButton = ({ children, product, ...props }) => {\n  if (!product || !product.slug) return null;\n\n  const handleCoverCreate = ({ slug }) => {\n    productServices\n      .patch(product.slug, { cover: slug })\n      .then((data) => {\n        if (props.onCreateSuccess) props.onCreateSuccess(data);\n      })\n      .catch((err) => {\n        if (props.onCreateError) props.onCreateError(err);\n      });\n  };\n  const handleCoverUpdate = (imgData) => {\n    if (props.onUpdateSuccess) props.onUpdateSuccess(imgData);\n  };\n\n  return (\n    <ImgUploadButton\n      slug={product.cover_data ? product.cover_data.slug : null}\n      onCreate={handleCoverCreate}\n      onUpdate={handleCoverUpdate}\n      className=\"product-cover-upload-button\"\n    >\n      {children}\n    </ImgUploadButton>\n  );\n};\n\nProductCoverUploadButton.propTypes = {\n  children: PropTypes.any.isRequired,\n  product: PropTypes.shape({ slug: PropTypes.string.isRequired }).isRequired,\n  onCreateSuccess: PropTypes.func,\n  onCreateError: PropTypes.func,\n  onUpdateSuccess: PropTypes.func,\n  onUpdateError: PropTypes.func,\n};\n\nexport const SupplierData = ({ product, ...props }) => {\n  if (!product) return null;\n\n  return (\n    <div className=\"product-supplier-data\">\n      <ul>\n        <li>\n          <span className=\"\">Supplier</span>\n          <span className=\"\">{product.supplier_name}</span>\n        </li>\n        <li>\n          <span className=\"\">Item id</span>\n          <span className=\"\">{product.supplier_item_id}</span>\n        </li>\n        <li>\n          <span className=\"\">Category</span>\n          <span className=\"\">{product.supplier_item_category}</span>\n        </li>\n\n        <li>\n          <span className=\"\">Item cost</span>\n          <span className=\"\">\n            {product.supplier_item_cost} ({product.supplier_item_cost_currency})\n          </span>\n        </li>\n        <li>\n          <a href={product.supplier_item_url} className=\"text-underline\" target=\"_blank\" rel=\"noopener noreferrer\">\n            View supplier page\n          </a>\n        </li>\n      </ul>\n    </div>\n  );\n};\n","import { IBtnSave, ConfirmIconButton, Icons, Button } from \"@miq/components\";\n\nimport Form, { useForm } from \"@miq/form\";\nimport { productServices } from \"./utils\";\n\nconst AttrNameInput = (props) => (\n  <Form.TextInput placeholder=\"Nom de l'attribut\" {...props} required name=\"name\" maxLength={30} minLength={3} />\n);\n\nconst AttrValueInput = (props) => (\n  <Form.TextInput placeholder=\"Valeur de l'attribut\" {...props} required name=\"value\" maxLength={99} minLength={3} />\n);\n\nexport const AttributeUpdateForm = ({ instance, product, ...props }) => {\n  const form = useForm({ name: instance?.name || \"\", value: instance?.value || \"\" });\n\n  if (!instance || !instance.slug || !product || !product.slug) return null;\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n\n    return productServices\n      .patchAttribute(product.slug, instance.slug, form.values)\n      .then((data) => {\n        return props?.onSuccess(data);\n      })\n      .catch((err) => {\n        return form.handleError(err);\n      });\n  };\n\n  return (\n    <Form context={form} onSubmit={handleSubmit}>\n      <div className=\"d-flex flex-column flex-md-row\" style={{ alignItems: \"end\" }}>\n        <div className=\"me-md-1\">\n          <AttrNameInput error={form.errors.name} />\n        </div>\n\n        <div className=\"w-100 me-md-1\">\n          <AttrValueInput error={form.errors.value} />\n        </div>\n\n        <div className=\"d-flex ms-md-1\">\n          <ConfirmIconButton\n            Icon={Icons.Trash}\n            render={(args) => (\n              <div className=\"p-3 w-100 d-flex justify-content-center\">\n                <div className=\"w-md-50 d-flex align-items-center justify-content-between\">\n                  <div>\n                    <Button\n                      onClick={() =>\n                        productServices\n                          .deleteAttribute(product.slug, instance.slug)\n                          .then((data) => {\n                            args?.setOpen(false);\n                            return props?.onSuccess(data);\n                          })\n                          .catch(() => {\n                            props?.toast?.error({ message: \"Could not delete attribute.\" });\n                          })\n                      }\n                      className=\"btn-danger\"\n                    >\n                      Supprimer\n                    </Button>\n                  </div>\n                  <div>\n                    <Button onClick={() => args?.setOpen(false)}>Annuler</Button>\n                  </div>\n                </div>\n              </div>\n            )}\n            renderHeader={(args) => {\n              return (\n                <div className=\"p-3\">\n                  <div className=\"fw-bold\">Supprimer l'attribut \"{instance.name}\"</div>\n                </div>\n              );\n            }}\n            className=\"btn-danger-3 me-1\"\n          />\n          <Form.Submit value=\"Save\" className=\"btn btn-primary-2\" />\n        </div>\n      </div>\n    </Form>\n  );\n};\n\nexport function AttributeCreateForm({ product, ...props }) {\n  const initValues = { name: \"\", value: \"\" };\n  const form = useForm(initValues);\n\n  if (!product || !product.slug) return null;\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    // if (form.hasErrors()) return;\n\n    return productServices\n      .postAttribute(product.slug, form.values)\n      .then((data) => {\n        form.setValues(initValues);\n        return props?.onSuccess(data);\n      })\n      .catch((err) => {\n        return form.handleError(err);\n      });\n  };\n\n  // const invalidAttrNames = product?.attributes?.map((at) => at.name) || [];\n\n  return (\n    <Form context={form} onSubmit={handleSubmit}>\n      <div className=\"d-flex flex-column flex-md-row\" style={{ alignItems: \"end\" }}>\n        <div className=\"me-md-1\">\n          <Form.Label value=\"Name\" />\n          <AttrNameInput error={form.errors.name} />\n        </div>\n\n        <div className=\"w-100 me-md-1\">\n          <Form.Label value=\"Value\" />\n          <AttrValueInput error={form.errors.value} />\n        </div>\n\n        <div className=\"ms-md-1\">\n          <IBtnSave type=\"submit\" className=\"btn-primary-3\" />\n        </div>\n      </div>\n    </Form>\n  );\n}\n","import { useContext, useEffect, useState } from \"react\";\nimport { Link } from \"react-router-dom\";\n\nimport { AdminView, StaffCoverUpdateForm, PublishedStatusSpan } from \"@miq/adminjs\";\nimport Form, { useForm } from \"@miq/form\";\nimport { getClassName } from \"@miq/utils\";\nimport { ToastCtx, Button, Img, ImgDeleteIconButton } from \"@miq/components\";\n\nimport { productServices } from \"./utils\";\nimport { ProductImageAltTextInput, ProductUpdateForm, ProductImageUploadButton, SupplierData } from \"./components\";\nimport { AttributeCreateForm, AttributeUpdateForm } from \"./Attribute\";\n\nconst ViewTabs = ({ tab, ...props }) => {\n  const { prodSlug, product, setProduct, form, toast } = props;\n  const [addAtr, setAddAtr] = useState(false);\n\n  switch (tab) {\n    case \"inventory\":\n      return (\n        <div className=\"d-flex flex-column flex-md-row\">\n          <div className=\"flex-1\">\n            <AdminView.Section title=\"Sizes\" text=\"Add sizes\"></AdminView.Section>\n            <AdminView.Section\n              title=\"Attributes\"\n              actions={\n                <Button onClick={() => setAddAtr(!addAtr)} className=\"btn-primary-3\">\n                  Ajouter attribut\n                </Button>\n              }\n            >\n              {addAtr && (\n                <div className=\"border-bottom mb-2 pb-3\">\n                  <p className=\"text-center mb-3\">Ajouter un attribut au produit.</p>\n                  <AttributeCreateForm\n                    product={product}\n                    onSuccess={(productData) => setProduct({ ...product, ...productData })}\n                  />\n                </div>\n              )}\n\n              <div className=\"my-3\">\n                {product.attributes.map((attr) => (\n                  <div className=\"mb-1\" key={attr.slug}>\n                    <AttributeUpdateForm\n                      instance={attr}\n                      product={product}\n                      onSuccess={(pData) => setProduct({ ...product, ...pData })}\n                    />\n                  </div>\n                ))}\n              </div>\n            </AdminView.Section>\n          </div>\n\n          <div className=\"w-md-35 ms-md-2\">\n            <SupplierData product={product} />\n          </div>\n        </div>\n      );\n    case \"imgs\":\n      return (\n        <AdminView.Section\n          title=\"Images\"\n          text=\"Add images to your product\"\n          actions={\n            <ProductImageUploadButton\n              product={product}\n              onCreateSuccess={(data) => {\n                setProduct({ ...product, ...data });\n              }}\n            />\n          }\n        >\n          <div className=\"d-grid grid-md-3 grid-lg-4\" style={{ gap: 4 }}>\n            {product.images_data.map((img) => (\n              <div className=\"mb-1\" key={img.slug}>\n                <Img {...img} className=\"product-img\" />\n\n                <div className=\"d-flex\">\n                  <ProductImageAltTextInput image={img} />\n                  <ImgDeleteIconButton\n                    slug={img.slug}\n                    label=\"\"\n                    className=\"btn-danger-3 ms-1\"\n                    onSuccess={() => {\n                      setProduct({\n                        ...product,\n                        images_data: product.images_data.filter((i) => i.slug !== img.slug),\n                        images: product.images.filter((i) => i !== img.slug),\n                      });\n                    }}\n                  />\n                </div>\n              </div>\n            ))}\n          </div>\n        </AdminView.Section>\n      );\n\n    case \"seo\":\n      return (\n        <Form\n          context={form}\n          onSubmit={(e) => {\n            e.preventDefault();\n            const fD = { title: form.values.title, slug_public: form.values.slug_public };\n\n            return productServices\n              .patchPage(prodSlug, fD, { title: product?.page?.title, slug_public: product?.page?.slug_public })\n              .then((data) => {\n                setProduct({ ...product, ...data });\n                toast.success({ message: \"Product page updated.\" });\n              })\n              .catch((err) => {\n                form.handleError(err);\n                toast.error({ message: \"Could not update.\" });\n              });\n          }}\n        >\n          <AdminView.Section title=\"Seo\">\n            <div className=\"mb-1\">\n              <Form.Label value=\"Meta title\" className=\"mb-1\" />\n              <Form.TextInput\n                required\n                name=\"title\"\n                error={form.errors.title}\n                placeholder=\"Give a name to the item\"\n                maxLength={99}\n              />\n            </div>\n            <div className=\"mb-1\">\n              <Form.Label value=\"Slug\" className=\"mb-1\" />\n              <Form.TextInput\n                required\n                name=\"slug_public\"\n                error={form.errors.slug_public}\n                placeholder={\"Write slug ...\"}\n                maxLength={99}\n              />\n            </div>\n\n            <div className=\"my-2\">\n              <Form.Submit value=\"Update\" className=\"btn btn-primary-3\" />\n            </div>\n          </AdminView.Section>\n        </Form>\n      );\n\n    default:\n      return (\n        <div>\n          <AdminView.Section title=\"Description\">\n            <ProductUpdateForm form={form}>\n              <Form.TextAreaX\n                name=\"description\"\n                onSave={({ name, value }) =>\n                  productServices\n                    .patch(product.slug, { [name]: value }, { [name]: product[name] })\n                    .then((data) => {\n                      setProduct({ ...product, ...data });\n                      toast.success({ message: \"Product updated.\" });\n                    })\n                    .catch((err) => {\n                      form.handleError(err);\n                      toast.error({ message: \"Could not update item.\" });\n                    })\n                }\n                error={form.errors.description}\n                placeholder=\"Give a description to the item\"\n              />\n            </ProductUpdateForm>\n          </AdminView.Section>\n\n          <div className=\"\">\n            <ProductPublishButton product={product} setProduct={setProduct} toast={toast} />\n          </div>\n        </div>\n      );\n  }\n};\n\nexport const productFormDefaultValues = {\n  name: \"\",\n  description: \"\",\n  title: \"\",\n  category: \"\",\n  slug_public: \"\",\n  retail_price: 0.0,\n  is_pre_sale: false,\n  is_pre_sale_text: \"\",\n  sale_price: 0.0,\n  is_on_sale: false,\n};\n\nexport const ProductQuickUpdateForm = ({ form, product, ...props }) => {\n  const { setProduct, toast, categories } = props;\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    const fD = {\n      retail_price: form.values.retail_price,\n      is_on_sale: form.values.is_on_sale,\n    };\n\n    if (form.values.category) fD.category = form.values.category;\n    if (form.values.is_on_sale) fD.sale_price = form.values.sale_price;\n\n    if (form.values.is_pre_sale) {\n      fD.is_pre_sale = form.values.is_pre_sale;\n      fD.is_pre_sale_text = form.values.is_pre_sale_text;\n    }\n\n    return productServices\n      .patch(product.slug, fD)\n      .then((data) => {\n        setProduct?.({ ...product, ...data });\n        toast?.success({ message: \"Product updated.\" });\n      })\n      .catch((err) => {\n        toast?.error({ message: \"Could not update product.\" });\n        return form.handleError(err);\n      });\n  };\n\n  return (\n    <Form context={form} onSubmit={handleSubmit}>\n      <div className=\"d-flex flex-column-reverse flex-md-row mb-2\">\n        <div className=\"flex-1\">\n          <AdminView.Section\n            title=\"Details\"\n            actions={<PublishedStatusSpan is_published={product?.page?.is_published} pill />}\n          >\n            <div className=\"mb-1\">\n              <ProductUpdateForm.NameInput\n                product={product}\n                form={form}\n                onSuccess={(data) => {\n                  setProduct?.({ ...product, ...data });\n                  toast?.success({ message: \"Item updated.\" });\n                }}\n                onError={(err) => {\n                  form.handleError(err);\n                  toast?.error({ message: \"Could not update item.\" });\n                }}\n              />\n            </div>\n\n            {categories && (\n              <div className=\"mb-1\">\n                <Form.Label value=\"Category\" />\n                <Form.SelectInput required name=\"category\" nullValue={{ label: \"Select category\" }}>\n                  {categories?.items?.map((cat) => {\n                    return <Form.SelectInput.Option {...cat} key={cat.value} />;\n                  })}\n                </Form.SelectInput>\n              </div>\n            )}\n\n            <div className=\"mb-1\">\n              <div className=\"mb-1\">\n                <Form.Label value=\"Retail price\" id=\"retail_price_label\" />\n                <Form.TextInput\n                  required\n                  type=\"number\"\n                  name=\"retail_price\"\n                  error={form.errors.retail_price}\n                  aria-describedby=\"retail_price_label\"\n                  min=\"0\"\n                  step=\"0.01\"\n                />\n              </div>\n\n              {/* PRE SALE */}\n              <div className=\"mb-1\">\n                <div className=\"d-flex align-items-center mb-1\">\n                  <Form.CheckboxInput name=\"is_pre_sale\" error={form.errors.is_pre_sale} className=\"me-2\" />\n                  <Form.Label value=\"Pre-sale\" />\n                </div>\n\n                {form.values.is_pre_sale && (\n                  <div className=\"mb-2\">\n                    <Form.Label value=\"Pre sale text\" id=\"is_pre_sale_text_label\" className=\"miq-checkbox-label\" />\n                    <Form.TextAreaX\n                      name=\"is_pre_sale_text\"\n                      error={form.errors.is_pre_sale_text}\n                      aria-describedby=\"is_pre_sale_text_label\"\n                    />\n                  </div>\n                )}\n              </div>\n\n              {/* SALE  */}\n              <div className=\"d-flex align-items-center mb-1\">\n                <Form.CheckboxInput name=\"is_on_sale\" error={form.errors.is_on_sale} className=\"me-2\" />\n                <Form.Label value=\"On Sale\" />\n              </div>\n\n              {form.values.is_on_sale && (\n                <div className=\"mb-2\">\n                  <Form.Label value=\"Sale price\" id=\"sale_price_label\" className=\"miq-checkbox-label\" />\n                  <Form.TextInput\n                    required\n                    type=\"number\"\n                    name=\"sale_price\"\n                    error={form.errors.sale_price}\n                    aria-describedby=\"sale_price_label\"\n                    min=\"0\"\n                    step=\"0.01\"\n                  />\n                </div>\n              )}\n            </div>\n\n            <div className=\"my-3\">\n              <Form.Submit value=\"Update product\" className=\"btn btn-primary-3\" />\n            </div>\n          </AdminView.Section>\n        </div>\n\n        <div className=\" ms-md-2 mb-2 w-md-35 w-lg-25\">\n          <StaffCoverUpdateForm\n            slug={product?.cover}\n            data={product.cover_data}\n            onCreate={(imgData) => {\n              productServices\n                .patch(product.slug, { cover: imgData.slug })\n                .then((data) => {\n                  setProduct?.({ ...product, ...data });\n                  toast?.success({ message: \"Product cover updated.\" });\n                })\n                .catch((err) => {\n                  toast?.error({ message: \"Could not upload cover image.\" });\n                });\n            }}\n            onUpdate={(cover_data) => {\n              toast?.success({ message: \"Product cover updated.\" });\n              return setProduct?.({ ...product, cover_data });\n            }}\n            onDelete={() => {\n              return setProduct?.({ ...product, cover_data: null, cover: null });\n            }}\n            className=\"mb-1\"\n          />\n          <ProductImageAltTextInput image={product?.cover_data} />\n        </div>\n      </div>\n    </Form>\n  );\n};\n\nexport default function ProductUpdateView(props) {\n  const { prodSlug } = props.match.params;\n\n  const [product, setProduct] = useState(null);\n  const [tab, setTab] = useState(\"info\");\n  const toast = useContext(ToastCtx);\n\n  const form = useForm(productFormDefaultValues);\n  const { setValues } = form;\n\n  useEffect(() => {\n    productServices\n      .detail(prodSlug)\n      .then((data) => {\n        setProduct(data);\n        setValues({\n          name: data.name || \"\",\n          description: data.description || \"\",\n          category: data.category || \"\",\n          retail_price: data?.retail_price || 0.0,\n          // PRESALE\n          is_pre_sale: data.is_pre_sale || false,\n          is_pre_sale_text: data.is_pre_sale_text || \"\",\n          // SALE\n          is_on_sale: data.is_on_sale || false,\n          sale_price: data?.sale_price || 0.0,\n          // SEO\n          title: data.page.title || \"\",\n          slug_public: data?.page?.slug_public || \"\",\n        });\n      })\n      .catch((err) => {\n        if (err.response) {\n          // toast.error({ message: \"Something went wrong\" });\n          console.log(err.response);\n          if (err.response.status === 404) {\n            return;\n          }\n        }\n      });\n  }, [prodSlug, setValues]);\n\n  if (!product) return null;\n\n  console.log(product);\n\n  return (\n    <AdminView\n      back={props?.back}\n      actions={\n        <div>\n          {product?.prev_slug && (\n            <Link to={`${props?.back}${product?.prev_slug}`} className=\"btn me-1\" title=\"Voir le produit précédent\">\n              Previous\n            </Link>\n          )}\n          {product?.next_slug && (\n            <Link to={`${props?.back}${product?.next_slug}`} className=\"btn\" title=\"Voir le produit suivant\">\n              Next\n            </Link>\n          )}\n        </div>\n      }\n      className=\"product-update-view\"\n    >\n      <ProductQuickUpdateForm\n        form={form}\n        product={product}\n        categories={product?.categories}\n        setProduct={setProduct}\n        toast={toast}\n      />\n\n      <div className=\"my-2\">\n        <div className=\"d-flex justify-content-center mb-3\">\n          <div className=\"d-flex align-items-center\">\n            <Button\n              onClick={() => setTab(\"info\")}\n              className={getClassName([\"me-1\", tab === \"info\" && \"btn-primary-3\"])}\n            >\n              Info\n            </Button>\n            <Button\n              onClick={() => setTab(\"inventory\")}\n              className={getClassName([\"me-1\", tab === \"inventory\" && \"btn-primary-3\"])}\n            >\n              Inventory\n            </Button>\n            <Button\n              onClick={() => setTab(\"imgs\")}\n              className={getClassName([\"me-1\", tab === \"imgs\" && \"btn-primary-3\"])}\n            >\n              Images\n            </Button>\n            <Button onClick={() => setTab(\"seo\")} className={getClassName([tab === \"seo\" && \"btn-primary-3\"])}>\n              Settings\n            </Button>\n          </div>\n        </div>\n        <ViewTabs tab={tab} prodSlug={prodSlug} product={product} setProduct={setProduct} form={form} toast={toast} />\n      </div>\n    </AdminView>\n  );\n}\n\nexport const ProductPublishButton = ({ product, setProduct, toast }) => {\n  return (\n    <Button\n      onClick={() => {\n        productServices\n          .publish(product.slug)\n          .then((data) => {\n            setProduct?.({ ...product, ...data });\n          })\n          .catch(({ response = {} }) => {\n            if (!response.data) {\n              return toast?.error({ message: \"Something went awfully wrong!\" });\n            }\n            const { retail_price, category, page } = response.data;\n\n            if (retail_price) {\n              return toast?.error({ message: \"You can not publish a product without price\" });\n            }\n            if (category) {\n              return toast?.error({ message: \"You can not publish a product without category\" });\n            }\n            if (page) {\n              return toast?.error({ message: \"You can not publish a product without page\" });\n            }\n            // console.log(response.data);\n          });\n      }}\n      className=\"btn-primary\"\n    >\n      Publish product\n    </Button>\n  );\n};\n"],"sourceRoot":""}
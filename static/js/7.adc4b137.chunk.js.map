{"version":3,"sources":["../../../../packages/miq-sharedjs/src/editor/src/Section/MarkdownSection/index.jsx"],"names":["MdSectionPreview","props","context","isEdit","className","TextAreaX","autoFocus","clearFocus","name","placeholder","dangerouslySetInnerHTML","__html","data","html","MarkdownSection","forwardRef","ref","form","useForm","text","value","id","getClassName","Icon","Icons","Markdown","label","onSave","type","sectionServices","patch","slug","values","render","then","res","setEdit","IS_DEV","displayName"],"mappings":"4QAiBMA,EAAmB,SAACC,GACxB,OAAIA,EAAMC,QAAQC,OAEd,qBAAKC,UAAU,GAAf,SACE,cAAC,IAAKC,UAAN,CAAgBC,WAAS,EAACC,YAAU,EAACC,KAAK,OAAOC,YAAY,iCAKjE,qBAAKL,UAAU,GAAf,SACE,qBAAKM,wBAAyB,CAAEC,OAAQV,EAAMW,KAAKC,MAAQ,2BAK3DC,EAAkBC,sBAAW,SAACd,EAAOe,GACzC,IAAMC,EAAOC,YAAQ,CAAEC,KAAMlB,EAAMW,KAAKO,MAAQ,KACxCP,EAASX,EAATW,KAkBR,OACE,cAAC,IAAD,CAAcQ,MAAOH,EAArB,SACE,sBAAKI,GAAIpB,EAAMoB,GAAUL,MAAOZ,UAAWkB,YAAa,CAACrB,EAAMG,UAAW,eAA1E,UACE,cAAC,IAAD,CAAemB,KAAMC,IAAMC,WAE3B,cAAC,IAAD,UACE,cAACzB,EAAD,eAAsBC,MAGxB,cAAC,IAAD,UACE,sBAAKG,UAAU,UAAf,UACE,cAAC,IAAD,2BAAyBH,GAAzB,IAAgCyB,MAAM,YAEtC,qBAAKtB,UAAU,kBAAf,SACE,cAAC,IAAD,CAAmBF,QAASD,EAAMC,QAASe,KAAMA,EAAML,KAAMX,EAAMW,KAAMe,OA9BlE,WACjB,GAAKf,EAAL,CAEA,IAAQgB,EAAShB,EAATgB,KAERC,IACGC,MACC7B,EAAMW,KAAKmB,KACX,CAAEH,OAAMT,KAAMF,EAAKe,OAAOb,KAAMN,KAAMoB,YAAO,2BAAKhB,EAAKe,QAAX,IAAmBJ,WAC/D,CAAEA,OAAMT,KAAMP,EAAKO,OAEpBe,MAAK,SAACC,GACLlC,EAAMC,QAAQkC,SAAQ,yBA2BftB,YAMXuB,MACFvB,EAAgBwB,YAAc","file":"static/js/7.adc4b137.chunk.js","sourcesContent":["import { getClassName, IS_DEV } from '@miq/utils';\nimport { forwardRef } from 'react';\n\nimport 'highlight.js/styles/atelier-cave-dark.css';\nimport './md-section.scss';\n\nimport { Icons } from '@miq/components';\nimport Form, { FormProvider, useForm } from '@miq/form';\nimport { SectionFooter, SectionHeader, SectionBody } from '../section-ui';\nimport { SectionDeleteButton, SectionEditButton } from '../section-components';\nimport render from '../section-renderers';\nimport { sectionRequiredProps, sectionServices } from '../utils';\n\n/**\n * MARKDOWN SECTION\n */\n\nconst MdSectionPreview = (props) => {\n  if (props.context.isEdit)\n    return (\n      <div className=\"\">\n        <Form.TextAreaX autoFocus clearFocus name=\"text\" placeholder=\"# Mardown is supported ...\" />\n      </div>\n    );\n\n  return (\n    <div className=\"\">\n      <div dangerouslySetInnerHTML={{ __html: props.data.html || 'Nothing to preview' }} />\n    </div>\n  );\n};\n\nconst MarkdownSection = forwardRef((props, ref) => {\n  const form = useForm({ text: props.data.text || '' });\n  const { data } = props;\n\n  const handleSave = () => {\n    if (!data) return;\n\n    const { type } = data;\n\n    sectionServices\n      .patch(\n        props.data.slug,\n        { type, text: form.values.text, html: render({ ...form.values, type }) },\n        { type, text: data.text }\n      )\n      .then((res) => {\n        props.context.setEdit(false);\n      });\n  };\n\n  return (\n    <FormProvider value={form}>\n      <div id={props.id} {...{ ref }} className={getClassName([props.className, 'section-md'])}>\n        <SectionHeader Icon={Icons.Markdown} />\n\n        <SectionBody>\n          <MdSectionPreview {...props} />\n        </SectionBody>\n\n        <SectionFooter>\n          <div className=\"actions\">\n            <SectionDeleteButton {...props} label=\"Delete\" />\n\n            <div className=\"actions-primary\">\n              <SectionEditButton context={props.context} form={form} data={props.data} onSave={handleSave} />\n            </div>\n          </div>\n        </SectionFooter>\n      </div>\n    </FormProvider>\n  );\n});\n\nexport default MarkdownSection;\n\nMarkdownSection.propTypes = {\n  ...sectionRequiredProps,\n};\n\nif (IS_DEV) {\n  MarkdownSection.displayName = 'MarkdownSection';\n}\n"],"sourceRoot":""}
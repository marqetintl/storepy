{"version":3,"file":"static/js/67.554e6a48.chunk.js","mappings":"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","sources":["../../../../packages/miq-formjs/src/Inputs.tsx","../../../../packages/miq-formjs/src/context.tsx","../../../../packages/miq-formjs/src/components.tsx","../../../../packages/miq-formjs/src/Fields.tsx","../../../../packages/miq-formjs/src/Form.tsx","../../../../packages/miq-formjs/src/index.tsx","../../../../packages/miq-staffjs/src/Img/index.tsx","../../../../packages/miq-staffjs/src/Setting/index.tsx","../../../../packages/miq-staffjs/src/Account/index.tsx","../../../../packages/miq-staffjs/src/Layout.tsx","../../../../packages/miq-staffjs/src/utils.tsx","../../../../packages/miq-staffjs/src/Views.tsx","../../../../packages/miq-staffjs/src/components.tsx","../../../../packages/miq-calendarjs/src/components.tsx","../../../../packages/miq-calendarjs/src/datepicker.tsx","../../../../packages/miq-calendarjs/src/index.tsx","../../../../packages/miq-staffjs/src/analytics/models.tsx","../../../../packages/miq-staffjs/src/analytics/utils.tsx","../../../../packages/miq-staffjs/src/analytics/components.tsx","../../../../packages/miq-staffjs/src/analytics/views.CampaignIndex.tsx","../../../../packages/miq-staffjs/src/analytics/views.tsx","../../../../packages/miq-staffjs/src/analytics/index.tsx","../../../../packages/miq-staffjs/src/index.tsx","../../../../.yarn/cache/@babel-runtime-npm-7.17.2-ec60bc114d-a48702d271.zip/node_modules/@babel/runtime/helpers/esm/superPropBase.js","../../../../.yarn/cache/@babel-runtime-npm-7.17.2-ec60bc114d-a48702d271.zip/node_modules/@babel/runtime/helpers/esm/get.js","../../../../packages/miq-staffjs/src/models.tsx","../../../../packages/miq-staffjs/src/service.tsx","../../../../shopy/shopy-orderjs/src/models.tsx","../../../../shopy/shopy-orderjs/src/forms/fields.tsx","../../../../shopy/shopy-orderjs/src/forms/index.tsx","../../../../shopy/shopy-orderjs/src/components/index.tsx","../../../../shopy/shopy-orderjs/src/CartCreateView.tsx","../../../../shopy/shopy-orderjs/src/CartUpdateView.tsx","../../../../shopy/shopy-orderjs/src/IndexView.tsx","../../../../shopy/shopy-orderjs/src/index.tsx","../../../../shopy/shopy-storejs/src/Product/Size/index.tsx","../../../../shopy/shopy-storejs/src/Product/components.tsx","../../../../shopy/shopy-storejs/src/Product/forms.tsx","../../../../shopy/shopy-storejs/src/Product/models.tsx","../../../../shopy/shopy-storejs/src/Product/utils.ts","../../../../shopy/shopy-storejs/src/Supplier/forms.tsx","../../../../shopy/shopy-storejs/src/Supplier/SupplierProductList.tsx","../../../../shopy/shopy-storejs/src/Supplier/OrderUpdateView.tsx","../../../../shopy/shopy-storejs/src/Supplier/components.tsx","../../../../shopy/shopy-storejs/src/Supplier/index.tsx","../../../../shopy/shopy-storejs/src/Supplier/models.tsx","../../../../shopy/shopy-storejs/src/components.tsx","../../../../shopy/shopy-storejs/src/events/index.tsx","../../../../shopy/shopy-storejs/src/types.ts","../../../../shopy/shopy-storejs/src/index.tsx"],"sourcesContent":["import * as React from 'react';\n\nimport { Icons } from '@miq/componentjs';\nimport { getCN, isFunction, debounce, isRequired } from '@miq/utiljs';\nimport FormCtx, { TFormCtx } from './context';\n\nexport interface InputProps extends React.ComponentPropsWithoutRef<'input'> {}\n\nexport interface InputRefProps extends React.ComponentPropsWithRef<'input'> {}\n\nexport type FormInputProps = InputProps & {\n  error?: any;\n  mirror?: string;\n  onDebounce?: (p: { name: string; value: string; e: React.ChangeEvent<HTMLInputElement> }) => void;\n  wait?: number;\n};\n\nconst withFormTextInput = (Component: any, args: any = {}) =>\n  React.forwardRef<HTMLInputElement, FormInputProps>((props, ref) => {\n    const ctx: TFormCtx = React.useContext(FormCtx) || isRequired('FormCtx');\n\n    let { name, error, onDebounce, wait, ...rest } = props;\n\n    const debounceOnSave = React.useRef(\n      debounce((e: React.ChangeEvent<HTMLInputElement>) => {\n        if (props.required && !e.target.value) return;\n        if (!onDebounce || !isFunction(onDebounce)) return;\n        return onDebounce({ name: e.target.name, value: e.target.value, e });\n      }, wait || 500)\n    );\n\n    const onChange = (e: React.ChangeEvent<HTMLInputElement>) => {\n      ctx.handleChange(e);\n\n      //\n      if (!debounceOnSave.current) return;\n      debounceOnSave.current(e);\n    };\n\n    error = error || ctx.errors[name!];\n    const className = getCN([args.className, props.className, error && 'is-invalid']);\n\n    return (\n      <Component\n        value={ctx.values[name!]}\n        onChange={onChange}\n        {...args.input}\n        {...rest}\n        name={name}\n        className={className}\n        ref={ref}\n      />\n    );\n  });\n\nexport const FormTextInput = withFormTextInput('input', { className: 'miq-form-input' });\nexport const FormTextArea = withFormTextInput('textarea', { className: 'miq-form-textarea' });\n\nexport type SearchInputProps = InputProps & {\n  inputClassName?: string;\n};\n\nexport const SearchInput = React.forwardRef<HTMLInputElement, SearchInputProps>((props, ref) => {\n  const { id, className, inputClassName, ...rest } = props;\n  return (\n    <div {...{ id }} className={getCN(['miq-search-input-wrapper d-flex align-items-center', className])}>\n      <div className=\"icon-wrapper\">\n        <Icons.Search className=\"miq-search-icon\" />\n      </div>\n\n      <input\n        name=\"q\"\n        placeholder=\"Search ...\"\n        minLength={3}\n        maxLength={99}\n        className={getCN(['miq-form-input miq-search-input', inputClassName])}\n        {...rest}\n        type=\"search\"\n        ref={ref}\n      />\n    </div>\n  );\n});\n\n//#region PhoneInput\n\n/**\n * Phone input\n * Usage:\n * ```js\n * <PhoneInput onchange={(e)=>setState(e.target.value)} minLength={7} maxLength={16} pattern=\"[0-9]*\"/>\n * ```\n */\n\nexport const FormPhoneInput = withFormTextInput('input', {\n  className: 'miq-form-input',\n  input: {\n    minLength: 7,\n    maxLength: 16,\n    pattern: '[0-9]*',\n    type: 'tel',\n    onKeyPress: (e: React.KeyboardEvent) => !/[0-9]/.test(e.key) && e.preventDefault(),\n  },\n});\n\n//#endregion PhoneInput\n\nexport type TextAreaXProps = InputProps & {\n  clearFocus?: string | boolean;\n  mirror?: string;\n};\n\nexport const TextAreaX = React.forwardRef<HTMLTextAreaElement, TextAreaXProps>((props, ref) => {\n  const { id, clearFocus, value, onChange, placeholder = 'Start typing ...', mirror, ...rest } = props;\n  const style = props.style;\n\n  return (\n    <div id={id} className={getCN(['miq-textareax', clearFocus && 'clear-focus'])}>\n      {mirror ? (\n        <span\n          className=\"miq-textareax-input-mirror\"\n          {...{ style }}\n          dangerouslySetInnerHTML={{ __html: `${mirror}\\n` }}\n        />\n      ) : (\n        <span className=\"miq-textareax-input-mirror\" {...{ style }}>{`${value}\\n`}</span>\n      )}\n\n      <div className=\"miq-textareax-input-wrapper\">\n        <textarea {...rest} {...{ value, onChange, placeholder, style }} ref={ref} />\n      </div>\n    </div>\n  );\n});\n\nexport const FormTextAreaX = withFormTextInput(TextAreaX);\n\n//#region SelectInput\n\nexport type FormSelectInputProps = FormInputProps & {\n  clearFocus?: string | boolean;\n  nullValue?: any;\n};\n\nexport const FormSelectInput = React.forwardRef<HTMLInputElement, FormSelectInputProps>(\n  ({ children, ...props }, ref) => {\n    const ctx: TFormCtx = React.useContext(FormCtx) || isRequired('FormCtx');\n    let { name, error, nullValue, ...rest } = props;\n\n    error = error || ctx?.errors?.[name!];\n\n    return (\n      <select\n        value={ctx?.values?.[name!]}\n        onChange={ctx.handleChange}\n        {...rest}\n        name={name}\n        className={getCN(['miq-form-select', error && 'is-invalid', rest.className])}\n        ref={ref}\n      >\n        {nullValue?.label && <Option {...nullValue} value={nullValue?.value || ''} />}\n        {children}\n      </select>\n    );\n  }\n);\n\ninterface OptionProps extends React.ComponentPropsWithoutRef<'option'> {\n  value: string | number;\n  // label?: string | any;\n}\n\nexport const Option = ({ label, children, ...props }: OptionProps) => (\n  <option {...props} value={props.value}>\n    {children || label}\n  </option>\n);\n\n//#endregion SelectInput\n\n//#region CheckboxInput\n\nexport type FormCheckboxInputProps = FormInputProps & {};\n\nexport const FormCheckboxInput = React.forwardRef<HTMLInputElement, FormCheckboxInputProps>((props, ref) => {\n  const ctx: TFormCtx = React.useContext(FormCtx) || isRequired('FormCtx');\n  let { name = isRequired('Name prop'), error } = props;\n\n  error = error || ctx?.errors?.[name];\n\n  return (\n    <input\n      onChange={ctx.toggleCheck}\n      checked={ctx.values[name]}\n      {...props}\n      type=\"checkbox\"\n      className={getCN(['miq-form-checkbox', error && 'is-invalid', props.className])}\n      ref={ref}\n    />\n  );\n});\n\n//#endregion CheckboxInput\n","import React, { createContext, useState, useMemo } from 'react';\n\nimport { IS_DEV } from '@miq/utiljs';\n\nexport const FormCtx = createContext(null);\n\nexport const FormProvider = FormCtx.Provider;\n\nexport default FormCtx;\n\nexport interface useFormState {\n  values: any;\n  setValue: (key: string, val: any) => void;\n  setValues: React.Dispatch<any>;\n  handleChange: (e: React.ChangeEvent<HTMLInputElement>) => void;\n  toggleCheck: (e: React.ChangeEvent<HTMLInputElement>) => void;\n  errors: any;\n  setError: (key: string, val: any) => void;\n  setErrors: React.Dispatch<any>;\n  handleError: (err: any, log?: boolean) => void;\n  hasErrors: () => boolean;\n}\n\nexport function useForm<T = any>(defaultValues: any = {}): useFormState {\n  const [values, setValues] = useState<T>({ ...defaultValues });\n  const [errors, setErrors] = useState<any>({});\n\n  const context = useMemo(() => {\n    const handleError = (err: any, log = true) => {\n      if (!err || !err.response) {\n        return;\n      }\n\n      const { response } = err;\n      if (response.status !== 400) {\n        IS_DEV && log && console.error(`Request error status: ${response.status}`);\n        return err;\n      }\n\n      let newData = {};\n      const { data } = response;\n\n      if (IS_DEV && log) {\n        console.error('ERROR=>', data);\n      }\n\n      Object.keys(data).forEach((key) => {\n        let e = data[key];\n        if (Array.isArray(e) && e.length > 0) {\n          e = e[0];\n        }\n        newData = { ...newData, [key]: e.message || e };\n      });\n\n      setErrors({ ...newData });\n    };\n\n    const setError = (key: string, value: any) => {\n      setErrors({ ...errors, [key]: value });\n    };\n\n    const handleChange = (e: React.ChangeEvent<HTMLInputElement>) => {\n      const { name, type, value } = e.target;\n\n      if (Object.keys(errors).includes(name)) {\n        setErrors({ ...errors, [name]: null });\n      }\n\n      switch (type) {\n        case 'checkbox':\n          return toggleCheck(e);\n\n        default:\n          return setValue(name, value);\n      }\n    };\n\n    const setValue = (key: string, value: any) => {\n      setValues({ ...values, [key]: value });\n    };\n\n    const toggleCheck = ({ target }: React.ChangeEvent<HTMLInputElement>) => {\n      const { name, checked } = target;\n      return setValue(name, checked);\n    };\n\n    return {\n      values,\n      setValue,\n      setValues,\n      handleChange,\n      toggleCheck,\n      errors,\n      setError,\n      setErrors,\n      handleError,\n      hasErrors: () => Object.keys(errors).join() !== '',\n    };\n  }, [values, errors]);\n\n  return context;\n}\n\nexport type TFormCtx = ReturnType<typeof useForm>;\n","import * as React from 'react';\n\nexport type FormLabelProps = React.PropsWithChildren<{ value?: React.ReactNode | string }>;\n\nexport const FormLabel = ({ children, value, ...props }: FormLabelProps) => {\n  const Comp = children ? children : typeof value === 'string' ? <label {...props}>{value}</label> : value;\n  return <div className=\"miq-form-label\">{Comp}</div>;\n};\n\nexport type FormErrorProps = { error?: any };\n\nexport const FormError = ({ error }: FormErrorProps) => {\n  if (!error) return null;\n  return <div className=\"miq-form-error\">{error}</div>;\n};\n","import React from 'react';\n\nimport { getCN } from '@miq/utiljs';\n\nimport { FormLabel, FormError, FormErrorProps } from './components';\nimport { FormCheckboxInputProps, FormInputProps, FormSelectInputProps, FormTextAreaX, FormTextInput } from './Inputs';\n\ntype TField = FormFieldProps & { fieldCN?: string };\nexport type TextFieldProps = TField & FormInputProps;\nexport type SelectFieldProps = TField & FormSelectInputProps;\nexport type CheckboxFieldProps = TField & FormCheckboxInputProps;\n\nexport const FirstNameField = ({ label = 'Prénom', text, error, fieldCN, ...props }: TextFieldProps) => (\n  <Field {...{ label, error, text }} className={fieldCN}>\n    <FormTextInput name=\"first_name\" {...props} maxLength={99} minLength={2} />\n  </Field>\n);\n\nexport const LastNameField = ({ label = 'Nom', text, error, fieldCN, ...props }: TextFieldProps) => (\n  <Field {...{ label, error, text }} className={fieldCN}>\n    <FormTextInput name=\"last_name\" {...props} maxLength={99} minLength={2} />\n  </Field>\n);\n\nexport const NameField = (props: TextFieldProps) => {\n  const { label, text, error, ...rest } = props;\n\n  return (\n    <Field {...{ label, text, error }}>\n      <FormTextInput {...rest} name=\"name\" maxLength={99} />\n    </Field>\n  );\n};\n\nexport const EmailField = ({ label = 'Email', text, error, fieldCN, ...props }: TextFieldProps) => (\n  <Field {...{ label, text, error }} className={fieldCN}>\n    <FormTextInput type={'email'} {...props} name=\"email\" />\n  </Field>\n);\n\nexport const DescriptionField = (props: TextFieldProps) => {\n  const { label, text, error, ...rest } = props;\n  return (\n    <Field {...{ label, text, error }}>\n      <FormTextAreaX {...rest} name=\"description\" />\n    </Field>\n  );\n};\n\n/**\n * Meta fields\n */\n\nexport const MetaTitleField = (props: TextFieldProps) => {\n  const { label = 'Meta title', text, error, ...rest } = props;\n\n  return (\n    <Field {...{ label, text, error }}>\n      <FormTextInput required maxLength={99} {...rest} name=\"meta_title\" />\n    </Field>\n  );\n};\n\nexport const MetaSlugField = (props: TextFieldProps) => {\n  const { label = 'Meta slug', text, error, ...rest } = props;\n\n  return (\n    <Field {...{ label, text, error }}>\n      <FormTextInput required maxLength={99} {...rest} name=\"meta_slug\" />\n    </Field>\n  );\n};\n\nexport const MetaDescriptionField = (props: TextFieldProps) => {\n  const { label = 'Meta description', text, error, ...rest } = props;\n  return (\n    <Field {...{ label, text, error }}>\n      <FormTextAreaX {...rest} name=\"meta_description\" />\n    </Field>\n  );\n};\n\nexport type FormFieldProps = FormErrorProps &\n  React.PropsWithChildren<{\n    label?: React.ReactNode | string;\n    text?: React.ReactNode | string;\n    checkbox?: string | boolean;\n    className?: string;\n  }>;\n\nexport default function Field({ children, label, text, error, checkbox, ...props }: FormFieldProps) {\n  const hasLabel = label || text;\n\n  if (checkbox) {\n    return (\n      <div className={getCN(['miq-form-field', props.className])}>\n        <div className=\"d-flex align-items-center\">\n          <div className=\"me-1\">{children}</div>\n          <FormLabel value={label} />\n        </div>\n        {text && <div className=\"miq-form-field-text\">{text}</div>}\n        <FormError error={error} />\n      </div>\n    );\n  }\n\n  return (\n    <div className={getCN(['miq-form-field', props.className])}>\n      {hasLabel && (\n        <div className=\"miq-form-field-header\">\n          {label && <FormLabel value={label} />}\n          {text && <div className=\"miq-form-field-text\">{text}</div>}\n        </div>\n      )}\n      {children}\n      <FormError error={error} />\n    </div>\n  );\n}\n","import * as React from 'react';\n\nimport { getCN } from '@miq/utiljs';\nimport { ButtonProps, Button } from '@miq/componentjs';\n\nimport Field from './Fields';\nimport * as Inputs from './Inputs';\nimport * as Comps from './components';\nimport { FormProvider } from './context';\nimport { FormProps, IFormCallbackProps } from './types';\n\ntype FormStatic = {\n  Provider: typeof FormProvider;\n\n  Error: typeof Comps.FormError;\n  Label: typeof Comps.FormLabel;\n\n  Field: typeof Field;\n  Text: typeof Inputs.FormTextInput;\n  TextArea: typeof Inputs.FormTextArea;\n  TextAreaX: typeof Inputs.FormTextAreaX;\n  Phone: typeof Inputs.FormPhoneInput;\n  Checkbox: typeof Inputs.FormCheckboxInput;\n  Option: typeof Inputs.Option;\n  Select: typeof Inputs.FormSelectInput;\n\n  Submit: typeof Button;\n};\n\nexport type FormType = React.ForwardRefExoticComponent<FormProps> & FormStatic;\n\nconst Form = React.forwardRef<HTMLFormElement, FormProps & IFormCallbackProps>(\n  ({ children, context, ...props }, ref) => {\n    return (\n      <form {...props} ref={ref} className={getCN(['miq-form', props.className])}>\n        <FormProvider value={context}>{children}</FormProvider>\n      </form>\n    );\n  }\n) as FormType;\n\nForm.Provider = FormProvider;\n\nForm.Error = Comps.FormError;\nForm.Label = Comps.FormLabel;\n\nForm.Field = Field;\n\n//#region Inputs\n\nForm.Submit = ({ children, value, ...props }: ButtonProps) => (\n  <Button {...props} type=\"submit\">\n    {children || value}\n  </Button>\n);\n\nForm.Text = Inputs.FormTextInput;\nForm.TextArea = Inputs.FormTextArea;\nForm.TextAreaX = Inputs.FormTextAreaX;\nForm.Phone = Inputs.FormPhoneInput;\nForm.Checkbox = Inputs.FormCheckboxInput;\nForm.Option = Inputs.Option;\nForm.Select = Inputs.FormSelectInput;\n\nexport default Form;\nexport * from './types';\n","// import * as React from 'react';\n\nimport './form.scss';\n\nimport Form from './Form';\nexport * from './Form';\nexport * from './Fields';\nexport * as Inputs from './Inputs';\n\n// export { Inputs };\n\nexport default Form;\nexport { useForm } from './context';\n\n//\n\nexport type TextChoicesType = { key: string; value: string }[];\n","import * as React from 'react';\nimport * as Axios from 'axios';\n\nimport Form from '@miq/formjs';\nimport { getCN } from '@miq/utiljs';\nimport { FileInput, Button, ButtonProps } from '@miq/componentjs';\nimport { StaffImg } from '../models';\n\n//#region COMPONENTS\n\nconst ACCEPT = 'image/*';\nconst MAX_UPLOAD_COUNT = 10;\n\ntype ImgCrudProps = ButtonProps & {\n  accept?: string;\n  onUpload?: (e: React.ChangeEvent<HTMLInputElement>) => void;\n  onSuccess?: (r?: Axios.AxiosResponse) => void;\n  onError?: (r?: Axios.AxiosResponse) => void;\n};\n\nexport interface ImgAddButtonProps extends ImgCrudProps {\n  label?: string;\n  multiple?: boolean;\n  onSuccessMulti?: (rs: Promise<Axios.AxiosResponse>[]) => void;\n  onErrorMulti?: (rs: Promise<Axios.AxiosResponse>[]) => void;\n}\n\nexport const StaffImgAddButton = React.forwardRef<HTMLButtonElement, ImgAddButtonProps>(\n  ({ children, ...props }, ref) => {\n    let uploadRef = React.useRef<HTMLInputElement | null>(null);\n\n    const instance = StaffImg();\n\n    const { label, multiple, accept = ACCEPT, ...func } = props;\n    const { onUpload, onSuccess, onSuccessMulti, onError, onErrorMulti, ...rest } = func;\n\n    const uploadFile = (e: React.ChangeEvent<HTMLInputElement>) => {\n      if (onUpload) return onUpload(e);\n\n      const { files } = e.target;\n      if (!files) return;\n\n      const file = Array.from(files)[0];\n      return instance\n        .create(file)\n        .then((res: any) => onSuccess?.(res))\n        .catch((err: any) => onError?.(err));\n    };\n\n    const uploadFiles = (e: React.ChangeEvent<HTMLInputElement>) => {\n      if (onUpload) return onUpload(e);\n\n      const { files } = e.target;\n      if (!files) return;\n\n      const promises: Promise<Axios.AxiosResponse | number>[] = [];\n      const errors: Promise<Axios.AxiosResponse>[] = [];\n\n      Array.from(files)\n        .splice(0, MAX_UPLOAD_COUNT)\n        .forEach((file, i) => {\n          promises.push(instance.create(file).catch((err: any) => errors.push(err)));\n        });\n\n      if (errors && onErrorMulti) onErrorMulti(errors);\n\n      Promise.all(promises).then((responses: any) => {\n        if (onSuccessMulti) return onSuccessMulti(responses);\n      });\n    };\n\n    return (\n      <>\n        <Button className=\"miq-img-create-btn\" {...rest} onClick={() => uploadRef?.current?.click()} ref={ref}>\n          {children || label || `Upload image${multiple ? 's' : ''}`}\n        </Button>\n        <FileInput\n          accept={accept}\n          multiple={multiple}\n          onChange={multiple ? uploadFiles : uploadFile}\n          ref={(file) => (uploadRef.current = file)}\n        />\n      </>\n    );\n  }\n);\n\nexport type StaffImgUpdateButtonProps = ImgAddButtonProps & {\n  instance: ReturnType<typeof StaffImg>;\n  field?: string;\n};\n\nexport const StaffImgUpdateButton = React.forwardRef<HTMLButtonElement, StaffImgUpdateButtonProps>((props, ref) => {\n  let uploadRef = React.useRef<HTMLInputElement | null>(null);\n\n  const { instance, accept = ACCEPT, ...func } = props;\n  let { field = 'src', onUpload, onSuccess, onError, ...rest } = func;\n\n  if (field === 'picture') return <div className=\"miq-img-update-btn\" children={props.children} />;\n\n  const uploadFile = (e: React.ChangeEvent<HTMLInputElement>) => {\n    if (field === 'picture') return null;\n    if (onUpload) return onUpload(e);\n\n    const { files } = e.target;\n    if (!files) return;\n\n    const file = Array.from(files)[0];\n    return instance\n      .update(file, undefined, field)\n      .then((res) => onSuccess?.(res))\n      .catch((err) => onError?.(err));\n  };\n\n  return (\n    <>\n      <Button className=\"miq-img-update-btn\" {...rest} onClick={() => uploadRef?.current?.click()} ref={ref} />\n      <FileInput accept={accept} onChange={uploadFile} ref={(file) => (uploadRef.current = file)} />\n    </>\n  );\n});\n\nexport type StaffImgDeleteButtonProps = StaffImgUpdateButtonProps & {};\n\nexport const StaffImgDeleteButton = React.forwardRef<HTMLButtonElement, StaffImgDeleteButtonProps>(\n  ({ children, ...props }, ref) => {\n    const { instance, label, ...func } = props;\n    const { onSuccess, onError, ...rest } = func;\n\n    const handleDelete = () =>\n      instance\n        .destroy()\n        .then((res) => onSuccess?.(res))\n        .catch((err) => onError?.(err));\n    return (\n      <Button {...rest} onClick={handleDelete} className={getCN(['miq-img-delete-btn', props.className])} ref={ref}>\n        {children || label || `Delete Image`}\n      </Button>\n    );\n  }\n);\n\n//#endregion COMPONENTS\n\n//#region EXPORTS\n\nexport const StaffImgViewSelect = React.forwardRef<HTMLInputElement, any>((props, ref) => (\n  <Form.Select name=\"view\" {...props} ref={ref}>\n    <Form.Option value=\"src\" label=\"Desktop\" />\n    <Form.Option value=\"mobile\" label=\"Mobile\" />\n    <Form.Option value=\"thumb\" label=\"Thumbnail\" />\n    <Form.Option value=\"square\" label=\"Square\" />\n    <Form.Option value=\"picture\" label=\"Picture\" />\n  </Form.Select>\n));\n\n//#endregion EXPORTS\n","import * as React from 'react';\nimport { Routes, Route } from 'react-router-dom';\n\nimport Staff from '..';\n\nconst GeneralSettingUpdateView = React.lazy(() => import('./GeneralUpdateView'));\nconst IndexSettingUpdateView = React.lazy(() => import('./IndexUpdateView'));\nconst PagesSettingUpdateView = React.lazy(() => import('./PagesUpdateView'));\n\nexport default function SettingLayout() {\n  return (\n    <Routes>\n      <Route path=\"pages/\" element={<PagesSettingUpdateView />} />\n      <Route path=\"general/\" element={<GeneralSettingUpdateView />} />\n      <Route path=\"index/\" element={<IndexSettingUpdateView />} />\n\n      <Route\n        path=\"/\"\n        element={\n          <Staff.View title=\"Settings\" back=\"/staff/\" requiredPerms={['core.view_sitesetting']}>\n            <div className=\"d-grid grid-sm-3 grid-md-4\">\n              <SettingLink to=\"general/\" label=\"General\" text=\"Site settings and branding\" />\n              <SettingLink to=\"index/\" label=\"Index\" text=\"Homepage settings\" />\n              <SettingLink to=\"pages/\" label=\"Pages\" text=\"Site pages settings\" />\n            </div>\n          </Staff.View>\n        }\n      />\n    </Routes>\n  );\n}\n\nconst SettingLink = ({ label, text, ...rest }: any) => {\n  return (\n    <Staff.Link {...rest} className=\"d-block\">\n      <span className=\"text-md\">{label}</span>\n      <p className=\"text-muted text-sm pb-3\">{text}</p>\n    </Staff.Link>\n  );\n};\n","import * as React from 'react';\nimport * as Axios from 'axios';\nimport { Routes, Route } from 'react-router-dom';\n\nimport './account.scss';\n\nimport Form, { useForm } from '@miq/formjs';\nimport { FirstNameField, LastNameField } from '@miq/formjs';\n\nimport { SharedDataCtx, SharedDataState } from '@miq/contextjs';\n\nimport Staff from '..';\nimport { StaffUser } from '../models';\n\nexport default function AccountStaffLayout() {\n  return (\n    <Routes>\n      <Route path=\"/\" element={<ProfileUpdateView />} />\n    </Routes>\n  );\n}\n\n//#region UserModel\n\n//#endregion UserModel\n\n//#region ProfileUpdateView\n\nconst ProfileUpdateView = () => {\n  const { user, updateUser, apps } = React.useContext<SharedDataState>(SharedDataCtx);\n  const { employee } = user;\n\n  const formInitData: any = { first_name: user.first_name, last_name: user.last_name, gender: user.gender };\n  if (employee) formInitData.position = employee.position;\n\n  const form = useForm(formInitData);\n\n  if (!user) return null;\n\n  const instance = StaffUser(user);\n\n  const handleSubmit = (e: React.FormEvent) => {\n    e.preventDefault();\n\n    return instance\n      .update(form.values)\n      .then(({ data }: Axios.AxiosResponse) => updateUser(data))\n      .catch((err: Axios.AxiosResponse) => form.handleError(err));\n  };\n\n  return (\n    <Staff.View title=\"Account\">\n      <Form context={form} onSubmit={handleSubmit}>\n        <div className=\"d-grid grid-md-4 gap-2\">\n          <Staff.Section\n            title=\"Profile information\"\n            text=\"Update your profile information.\"\n            className=\"span-md-3\"\n            footer={<Form.Submit value=\"Save\" />}\n          >\n            <FirstNameField\n              required\n              label=\"First name\"\n              error={form.errors.first_name}\n              placeholder=\"First name\"\n              className=\"span-md-3\"\n              fieldCN=\"d-grid grid-md-5\"\n            />\n\n            {/* <Form.Field label=\"First name\" error={form.errors.first_name} className=\"d-grid grid-md-5\">\n              <Form.Text\n                required\n                name=\"first_name\"\n                // onSave={saveAccount}\n                // isValid={validate}\n                placeholder=\"First name\"\n                className=\"span-md-3\"\n                minLength={2}\n              />\n            </Form.Field> */}\n\n            <LastNameField\n              required\n              label=\"Last name\"\n              error={form.errors.last_name}\n              placeholder=\"Last name\"\n              className=\"span-md-3\"\n              fieldCN=\"d-grid grid-md-5\"\n            />\n\n            {/* <Form.Field label=\"Last name\" error={form.errors.last_name} className=\"d-grid grid-md-5\">\n              <Form.Text\n                required\n                name=\"last_name\"\n                // onSave={saveAccount}\n                // isValid={validate}\n                placeholder=\"Last name\"\n                className=\"span-md-3\"\n                minLength={2}\n              />\n            </Form.Field> */}\n\n            <Form.Field label=\"Gender\" className=\"d-grid grid-md-5\">\n              <Form.Select\n                required\n                name=\"gender\"\n                nullValue={{ label: 'Select gender' }}\n                // onChange={({ target }) => saveAccount(target)}\n                className=\"span-md-3\"\n              >\n                <option value=\"OTHER\">Other</option>\n                <option value=\"MALE\">Male</option>\n                <option value=\"FEMALE\">Female</option>\n              </Form.Select>\n            </Form.Field>\n\n            {\n              //#region HRM\n            }\n            {Object.keys(apps).includes('miq_hrm') && (\n              <Form.Field label=\"Role\" error={form.errors.position} className=\"d-grid grid-md-5 mb-1\">\n                <Form.Text\n                  required\n                  name=\"position\"\n                  // onSave={({ value }) =>\n                  //   services\n                  //     .patch(\n                  //       'account/current/position/',\n                  //       { position: value }\n                  //       // { position: employee.position }\n                  //     )\n                  //     .catch((err) => {\n                  //       form.handleError(err);\n                  //     })\n                  // }\n                  // isValid={validate}\n                  placeholder=\"Role\"\n                  className=\"span-md-3\"\n                  minLength={2}\n                />\n              </Form.Field>\n            )}\n            {\n              //#endregion HRM\n            }\n          </Staff.Section>\n\n          <Staff.Section\n            title=\"Avatar\"\n            text=\"Update your profile picture. Images must be .png, .jpg or .gif format.\"\n            // actions={\n            //   <ImgDeleteIconButton\n            //     slug={user.img}\n            //     onSuccess={() => updateUser({ img: null, img_data: null })}\n            //     // onError={() => toast.error({ message: 'Something went wrong.' })}\n            //     label=\"\"\n            //     className=\"btn-danger-3\"\n            //   />\n            // }\n            className=\"avatar-section\"\n          >\n            {/* <div className=\"d-flex\">{user.img ? <Avatar {...user.img_data} /> : <AvatarUploadButton />}</div> */}\n          </Staff.Section>\n        </div>\n\n        <Staff.Section title=\"Email\" text=\"Please contact support to change your email.\">\n          <p className=\"text-muted text-sm\">{user.email}</p>\n        </Staff.Section>\n\n        <Staff.Section\n          title=\"Password\"\n          text=\"Please contact support to change your password. Password must be at least 6 characters long.\"\n        />\n      </Form>\n    </Staff.View>\n  );\n};\n\n//#endregion ProfileUpdateView\n","import * as React from 'react';\nimport { Route, Routes } from 'react-router-dom';\n\nimport './layout.scss';\n\nimport { SharedDataCtx } from '@miq/contextjs';\nimport { addForwardSlash, getCN } from '@miq/utiljs';\nimport { BaseLayout, IBaseLayoutProps, Icons, Loading } from '@miq/componentjs';\n\nimport SettingLayout from './Setting';\nimport AccountStaffLayout from './Account';\n\nexport interface IStaffBaseLayoutProps extends Omit<IBaseLayoutProps, 'children'> {\n  links: TSidebarLinkProps<{ element: React.ReactNode; mobile?: boolean }>[];\n  sidebarCN?: string;\n  mainCN?: string;\n  mobileNavCN?: string;\n}\n\nconst StaffBaseLayout: React.FC<IStaffBaseLayoutProps> = (props) => {\n  const ctx = React.useContext(SharedDataCtx);\n\n  if (!ctx) return null;\n\n  const { className, fallback = <Loading />, ...viewProps } = props;\n\n  if (!ctx.isLoaded) return fallback;\n\n  const { user, site } = ctx;\n  if (!user || !user.is_staff) return fallback;\n\n  let { links, sidebarCN, children, mainCN, mobileNavCN, ...rest } = viewProps;\n\n  const sidebarLinks = links.filter((i) => i.href && i);\n  const mobileLinks = sidebarLinks.filter((i) => i.mobile && i);\n  const routes = links.filter((i) => i.element && i);\n\n  return (\n    <BaseLayout {...rest} className={getCN([className, prefix])}>\n      <nav className={getCN([`${prefix}-sidebar`, sidebarCN])}>\n        <header className={`${prefix}-sidebar-header`}>\n          <div className=\"text-md text-ellipsis p-1\">{site.name}</div>\n        </header>\n\n        <section className={`${prefix}-sidebar-body`}>\n          {sidebarLinks && (\n            <div className={`${prefix}-sidebar-body-content`}>\n              {sidebarLinks.map((i, v) => (\n                <SidebarLink {...i} key={v} />\n              ))}\n            </div>\n          )}\n\n          <div className={`${prefix}-sidebar-body-footer`}>\n            <SidebarLink href=\"account/\" label={user.first_name} icon={<Icons.Person />} />\n            <SidebarLink href=\"settings/\" label=\"Settings\" icon={<Icons.Gear />} />\n          </div>\n        </section>\n      </nav>\n\n      <div className={getCN([`${prefix}-main`, mainCN])} role=\"main\">\n        <div className=\"miq-container-fluid\">\n          <Routes>\n            {routes.map((i, v) => (\n              <Route path={`${addForwardSlash(i.href)}/*`} element={i.element} key={v} />\n            ))}\n\n            <Route path=\"account/*\" element={<AccountStaffLayout />} />\n            <Route path=\"settings/*\" element={<SettingLayout />} />\n          </Routes>\n        </div>\n      </div>\n\n      {mobileLinks && (\n        <nav className={getCN([`${prefix}-mobile-nav`, mobileNavCN])}>\n          {mobileLinks.map((i, v) => (\n            <SidebarLink {...i} key={v} />\n          ))}\n        </nav>\n      )}\n    </BaseLayout>\n  );\n};\n\n//#region StaffLayout\n\ntype TSidebarLinkProps<T = any> = {\n  href: string;\n  label: string;\n  icon?: ReturnType<typeof Icons.Gear>;\n} & T;\n\nconst SidebarLink = (props: TSidebarLinkProps) => {\n  return (\n    <a href={`/staff/${addForwardSlash(props.href)}`} className=\"miq-staff-nav-link\">\n      {props?.icon}\n      <span className=\"label\">{props.label}</span>\n    </a>\n  );\n};\n\nexport default StaffBaseLayout;\n\n//#endregion StaffLayout\n\nconst prefix = 'miq-staff-layout';\n","import * as React from 'react';\n\nimport { SharedDataCtx } from '@miq/contextjs';\nimport { getCN } from '@miq/utiljs';\n\nconst isArray = Array.isArray;\n\nexport function withHasPerms<Props = void>(Component: React.ComponentType | any, args: any = {}) {\n  return function ({\n    requiredPerms,\n    fallback,\n    ...props\n  }: Props & { requiredPerms?: string[]; fallback?: React.ReactNode; className?: string | any }) {\n    const { user, perms } = React.useContext(SharedDataCtx);\n    if (!user || !user.is_staff || (requiredPerms && !hasPerms(perms.perms, requiredPerms))) {\n      return fallback || args.fallback || null;\n    }\n    return <Component {...props} className={getCN([args.className, props?.className])} />;\n  };\n}\n\nexport const hasPerms = (perms: any, requiredPerms: string[]) => {\n  if (!isArray(perms) || !isArray(requiredPerms)) return false;\n  return perms.filter((perm) => requiredPerms.includes(perm)).length === requiredPerms.length;\n};\n","import * as React from 'react';\n\nimport './view.scss';\n\nimport { getCN } from '@miq/utiljs';\nimport { withHasPerms } from './utils';\nimport { IViewProps, View } from '@miq/componentjs';\n\nconst SView = (props: IViewProps) => (\n  <View\n    {...props}\n    className={getCN(['miq-staff-view', props.className])}\n    mainCN=\"miq-staff-view-main\"\n    footerCN=\"miq-staff-view-footer\"\n  />\n);\n\nconst StaffView = withHasPerms<IViewProps>(SView);\n\nexport default StaffView;\n","import { Button, ButtonProps, IViewSectionProps, ViewSection } from '@miq/componentjs';\nimport { Link, LinkProps, NavLink, NavLinkProps } from 'react-router-dom';\nimport { withHasPerms } from './utils';\n\nexport const StaffNavLink = withHasPerms<NavLinkProps>(NavLink, { className: 'miq-staff-nav-link' });\nexport const StaffLink = withHasPerms<LinkProps>(Link, { className: 'miq-staff-link' });\nexport const StaffButton = withHasPerms<ButtonProps>(Button, { className: 'miq-staff-btn' });\nexport const StaffSection = withHasPerms<IViewSectionProps>(ViewSection);\n","import * as React from 'react';\n\nimport { uuid, getCN } from '@miq/utiljs';\n\ntype CommonProps = {\n  id?: string;\n  className?: string;\n};\n\ntype DtProps = {\n  dt: Date;\n  /** Display Week days: short(Mon) long(Monday) */\n  short?: string | boolean;\n};\n\nexport type RenderDayProps = { renderDay?: (props: DayProps) => JSX.Element };\n\nexport type MonthProps = DtProps &\n  RenderDayProps & {\n    activeDt?: Date;\n    endDate?: Date;\n    children?: React.ReactNode;\n    showWeekDay?: string | boolean;\n  };\n\nexport const Month: React.FC<MonthProps> = (props) => {\n  const { dt = new Date(), showWeekDay = true, short, ...rest } = props;\n\n  let monthWeeks = dt.getMonthWeeks();\n\n  return (\n    <div className=\"miq-month\">\n      {showWeekDay && <WeekDays short={short} />}\n      <div id=\"Weeks\" className=\"miq-month-weeks\">\n        {monthWeeks.map((w: Date[]) => (\n          <Week {...rest} dt={w[0]} showWeekDay={false} key={uuid()} />\n        ))}\n      </div>\n    </div>\n  );\n};\n\nexport type WeekProps = DtProps &\n  RenderDayProps & {\n    activeDt?: Date;\n    children?: React.ReactNode;\n    showWeekDay?: string | boolean;\n    endDate?: Date;\n  };\n\nexport const Week: React.FC<WeekProps> = (props: WeekProps) => {\n  const { dt = new Date(), endDate, renderDay, ...rest } = props;\n\n  let weekDates: Date[] = dt.getWeekDates();\n  if (endDate) weekDates = weekDates.filter((d) => d <= endDate);\n\n  return (\n    <div className=\"miq-week\" id=\"Week\">\n      <div id=\"Dates\" className=\"miq-week-dates d-grid grid-md-7\">\n        {weekDates.map((d: Date) => (\n          <Day {...rest} dt={d} render={renderDay} key={uuid()} />\n        ))}\n      </div>\n    </div>\n  );\n};\n\nexport type DayProps = CommonProps &\n  DtProps & {\n    activeDt?: Date;\n    showWeekDay?: string | boolean;\n  };\n\nexport const Day = (props: DayProps & { render?: (props: DayProps) => JSX.Element }) => {\n  const { render, ...rest } = props;\n\n  if (render) return render(rest);\n\n  const { dt, short, showWeekDay = true } = rest;\n\n  return (\n    <div className={getCN(['miq-day', props.className])}>\n      {showWeekDay && <WeekDay dt={dt} short={short} />}\n      <DateNum dt={dt} />\n    </div>\n  );\n};\n\nexport type WeekDayProps = DtProps & {};\n\nexport const WeekDay = ({ dt, short }: WeekDayProps) => {\n  const wd = WEEKDAYS.find((i) => i.index === dt.getDay());\n  return <div className=\"miq-weekday\">{short ? wd?.short : wd?.long}</div>;\n};\n\nexport const WeekDays = ({ short, ...props }: any) => (\n  <div className=\"miq-weekdays d-grid grid-md-7\">\n    {WEEKDAYS.map((wd) => {\n      return (\n        <div className=\"miq-weekday\" key={wd.index}>\n          {short ? wd?.short : wd?.long}\n        </div>\n      );\n    })}\n  </div>\n);\n\nexport type DateNumProps = CommonProps & DtProps & {};\n\n/** Display Date Number equivalent to date.getDate() */\nexport const DateNum = ({ dt, className }: DateNumProps) => (\n  <div className={getCN(['miq-day-date-num', dt.isToday() && 'today', className])}>{dt?.getDate?.()}</div>\n);\n\nexport type YearNumProps = DtProps & {};\n\nexport const YearNum = ({ dt }: YearNumProps) => {\n  return <div className=\"miq-year-num\">{dt.getFullYear()}</div>;\n};\n\nexport const WEEKDAYS: { index: number; short: string; long: string }[] = [\n  { short: 'Sun', long: 'Sunday' },\n  { short: 'Mon', long: 'Monday' },\n  { short: 'Tue', long: 'Tuesday' },\n  { short: 'Wed', long: 'Wednesday' },\n  { short: 'Thu', long: 'Thursday' },\n  { short: 'Fri', long: 'Friday' },\n  { short: 'Sat', long: 'Saturday' },\n].map((d, i) => ({ ...d, index: i }));\n","import * as React from 'react';\n\nimport { Button } from '@miq/componentjs';\nimport { getCN } from '@miq/utiljs';\n\nimport { Month, DayProps, DateNum } from './components';\n\nexport type DatepickerProps = {\n  activeDt?: Date;\n  onDateClick?: (dt?: Date) => void;\n  dt: Date;\n  id?: string;\n  className?: string;\n};\n\nexport default function DatePicker(props: DatepickerProps) {\n  const { onDateClick, ...rest } = props;\n  const { dt } = rest;\n\n  return (\n    <div className={getCN(['miq-datepicker', props.className])}>\n      <Month\n        {...props}\n        short\n        dt={dt}\n        renderDay={(args) => <DatePickerDay {...args} onClick={onDateClick} />}\n        endDate={dt.getMonthLastDt()}\n      />\n    </div>\n  );\n}\n\ntype DatePickerDayProps = DayProps & {\n  onClick?: (dt?: Date) => void;\n};\n\nconst DatePickerDay = (props: DatePickerDayProps) => {\n  const { dt, activeDt, onClick } = props;\n  const isToday = dt.isToday();\n  const isActive = dt.isSameDay(activeDt);\n\n  const handleClick = () => {\n    if (!onClick) return;\n    return onClick(dt);\n  };\n\n  return (\n    <div className={getCN(['miq-day miq-datepicker-day'])}>\n      <Button onClick={handleClick} className={getCN(['miq-datepicker-btn', isToday && 'today', isActive && 'active'])}>\n        <DateNum dt={dt} />\n      </Button>\n    </div>\n  );\n};\n","import * as React from 'react';\n\nimport './calendar.scss';\n\nimport { Button } from '@miq/componentjs';\nimport { DateNum, Day, Week, WeekDays, WeekDay, YearNum } from './components';\nimport DatePicker from './datepicker';\n\n//#region Calendar\n\ntype CalendarProps = {\n  currentDate?: Date;\n};\n\nexport default function Calendar(props?: CalendarProps) {\n  const currentDate: Date = props?.currentDate || new Date();\n\n  return Object.assign({}, props, { currentDate });\n}\n\nCalendar.DatePicker = DatePicker;\n\nCalendar.Week = Week;\nCalendar.WeekDay = WeekDay;\nCalendar.WeekDays = WeekDays;\nCalendar.Day = Day;\n\nCalendar.DateNum = DateNum;\nCalendar.YearNum = YearNum;\n\n//#endregion Calendar\n\n//#region BUTTONS\n\nexport type CalendarButtonProps = {\n  children: React.ReactNode;\n  dt: Date;\n  onClick: (dt: Date) => void;\n};\n\nCalendar.PrevWeekButton = ({ children, dt, ...props }: CalendarButtonProps) => {\n  return (\n    <Button {...props} onClick={() => props?.onClick(dt.subDays(7))}>\n      {children}\n    </Button>\n  );\n};\nCalendar.NextWeekButton = ({ children, dt, ...props }: CalendarButtonProps) => {\n  return (\n    <Button {...props} onClick={() => props?.onClick(dt.addDays(7))}>\n      {children}\n    </Button>\n  );\n};\n\n//#endregion BUTTONS\n","import { StaffModel, StaffService } from '../service';\n\nimport { TCampaign, THit, TSearchTerm } from './types';\n\nclass HitService extends StaffService<THit> {\n  deleteSlugs(slugs: string[]) {\n    return this.post(`${this._endpoint}batch/`, { slugs, action: 'destroy' });\n  }\n\n  getSummary() {\n    return this.get(`${this._endpoint}summary/`);\n  }\n}\n\nexport const Hit = (data: THit = {}) => {\n  return StaffModel<THit, HitService>(data, 'hits', HitService);\n};\n\nexport type THitInstance = ReturnType<typeof Hit>;\n\n//\n//\n//\n\nclass CampaignService extends StaffService<TCampaign> {}\n\nexport const Campaign = (data: TCampaign = {}) => {\n  return StaffModel<TCampaign, CampaignService>(data, 'campaigns', CampaignService);\n};\n\nexport type TCampaignInstance = ReturnType<typeof Campaign>;\n\n//\n//\n//\n\nclass SearchTermService extends StaffService<TSearchTerm> {}\n\nexport const SearchTerm = (data: TSearchTerm = {}) => {\n  return StaffModel<TSearchTerm, SearchTermService>(data, 'search', SearchTermService);\n};\n\nexport type TSearchTermInstance = ReturnType<typeof SearchTerm>;\n","import { useSearchParams } from 'react-router-dom';\n\nimport { useRequest } from '@miq/hookjs';\n\nimport { Campaign, Hit } from './models';\nimport { TCampaign, THit } from './types';\n\nexport const useCampaignListRequest = () => {\n  const [params] = useSearchParams();\n\n  const summary = params.get('summary');\n\n  return useRequest<TCampaign>(() => Campaign({}).list({ params: { summary } }), {\n    refreshDeps: [summary],\n  });\n};\n\nexport const useHitListRequest = (filterPath?: string) => {\n  const [params] = useSearchParams();\n\n  const q = params.get('q');\n\n  let searchParams: any = { q };\n  if (filterPath) searchParams['path'] = filterPath;\n\n  return useRequest<THit>(() => Hit({}).list({ params: searchParams }), {\n    refreshDeps: [q],\n  });\n};\n\nexport const hitsByPath = (hitList: THit[]) => {\n  const data: Record<string, any> = {};\n\n  hitList.forEach((hit) => {\n    const { path } = hit;\n\n    if (!Object.keys(data).includes(path)) data[path] = [];\n    data[path] = [...data[path], hit];\n  });\n\n  return data;\n};\n\nexport const hitsByIp = (hitList: THit[]) => {\n  const data: Record<string, any> = {};\n\n  hitList.forEach((hit) => {\n    const { ip } = hit;\n    if (!ip) return;\n\n    if (!Object.keys(data).includes(ip)) data[ip] = [];\n    data[ip] = [...data[ip], hit];\n  });\n\n  return data;\n};\n\nexport const hitIsMobile = (data: THit) => {\n  let { user_agent: ua } = data;\n  if (!ua) return true;\n  ua = ua.toLowerCase();\n  return ua.includes('mobile') || ua.includes('iphone') || ua.includes('android');\n};\n\nexport const hitIsBot = (data: THit) => {\n  let { user_agent: ua, path } = data;\n  if (!ua) return true;\n  ua = ua.toLowerCase();\n  return path.toLowerCase().includes('robot') || ua.includes('bot') || ua.includes('robot') || ua.includes('ahrefsbot');\n};\n\nexport const hitIsIg = (data: THit) => {\n  let { referrer: ref, user_agent: ua } = data;\n  if (!ref || !ua) return false;\n\n  ref = ref.toLowerCase();\n  ua = ua.toLowerCase();\n  return ref.includes('instagram') || ref.includes('ig') || ua.includes('instagram') || ua.includes('ig');\n};\n\nexport const hitIsFb = (data: THit) => {\n  let { referrer: ref = '', user_agent: ua = '' } = data;\n  if (!ref || !ua) return false;\n\n  ref = ref.toLowerCase();\n  ua = ua.toLowerCase();\n\n  return ref.includes('facebook') || ref.includes('fb') || ua.includes('facebook') || ua.includes('fb');\n};\n","import * as React from 'react';\n\nimport { getCN, truncateStr } from '@miq/utiljs';\nimport { Button, ConfirmButton, Icons } from '@miq/componentjs';\n\nimport { StaffSection } from '../components';\n\nimport { THit } from './types';\nimport { Hit, THitInstance } from './models';\nimport { hitIsBot, hitIsFb, hitIsIg, hitsByIp } from './utils';\n\nexport const HitSummarySection = (props: { title?: string }) => {\n  // const { res } = useRequest(() => Hit({}).getSummary());\n  const { title = 'Summary' } = props;\n\n  return (\n    <StaffSection {...{ title }} requiredPerms={['analytics.view_hit']}>\n      Here goes a summary\n    </StaffSection>\n  );\n};\n\nconst HitListItem = ({ item }: { item: THit }) => {\n  const [isDeleted, setDeleted] = React.useState(false);\n\n  if (isDeleted) return null;\n\n  const instance = Hit(item);\n  const { url, referrer, response_status, created } = instance;\n\n  return (\n    <div className=\"hit-list-item d-grid grid-md-5 text-sm py-1\">\n      <div className=\"span-md-2\">\n        <a href={url} target=\"_blank\" title={url}>\n          {item.path}\n        </a>\n\n        <div className=\"text-muted\" title=\"session key\">\n          {item.session}\n        </div>\n\n        <span className={getCN([response_status! > 299 ? 'text-danger' : 'text-success'])} title=\"response status\">\n          {response_status}\n        </span>\n\n        <span title=\"Date created\">{` / ${new Date(created!).formatDateToStr()} | ${new Date(\n          created!\n        ).formatTime()}`}</span>\n        {item.debug && <span>{` / Debug`}</span>}\n      </div>\n\n      <div className=\"\" title={`Referrer: ${referrer}`}>\n        {truncateStr(referrer || '')}\n      </div>\n\n      <div className=\"\" title={`User agent: ${item.user_agent}`}>\n        {truncateStr(item?.user_agent || '')}\n      </div>\n\n      <div className=\"\">\n        <HitDeleteButton instance={instance} onDelete={() => setDeleted(true)} />\n      </div>\n    </div>\n  );\n};\n\nexport const HitList = ({ items }: { items: THit[] }) => {\n  return (\n    <div className=\"hit-list\">\n      {Object.entries(hitsByIp(items)).map((item) => {\n        let [ip, h] = item;\n        const hits = h.reverse();\n        const isFb = Boolean(hits.filter((item: THit) => hitIsFb(item)).length);\n        const isIg = hits.find((item: THit) => hitIsIg(item));\n        const isBot = hits.find((item: THit) => hitIsBot(item));\n        let user = hits[0]?.source_id?.match(/-(\\w+)___/gm)?.[0]?.slice(1, -3);\n\n        return (\n          <StaffSection\n            border\n            title={\n              <div className=\"d-flex align-items-center\">\n                <span className=\"d-flex\">\n                  {isBot && <Icons.Robot className=\"me-1 text-muted\" width={20} height={20} />}\n                  {isIg && <Icons.Instagram className=\"me-1\" />}\n                  {isFb && <Icons.Facebook className=\"text-primary me-1\" />}\n                </span>\n                <span className=\"text-sm fw-bold\">{user || ip}</span>\n              </div>\n            }\n            actions={\n              <div className=\"\">\n                <HitListDeleteButton slugs={hits.map((i: THit) => i?.slug)} onDelete={() => {}} />\n              </div>\n            }\n            className=\"mb-1\"\n            bodyCN=\"p-0\"\n            key={ip}\n          >\n            {hits\n              .sort((a: THit, b: THit) => (new Date(a.created!) > new Date(b.created!) ? -1 : 1))\n              .map((i: THit) => (\n                <HitListItem item={i} key={i.slug} />\n              ))}\n          </StaffSection>\n        );\n      })}\n    </div>\n  );\n};\n\nexport const HitDeleteButton = ({\n  instance,\n  ...props\n}: {\n  label?: string;\n  instance: THitInstance;\n  onDelete?: (payload?: any) => void;\n}) => {\n  const { label = '', onDelete } = props;\n\n  const handleDelete = () => {\n    instance\n      .destroy()\n      .then((res) => {\n        onDelete?.(res.data);\n      })\n      .catch((err) => {\n        console.log(err);\n      });\n  };\n\n  return (\n    <ConfirmButton\n      renderHeader={() => (\n        <div className=\"d-flex align-items-center\">\n          <Icons.ExclamationTriangleFill />\n          <span className=\"ms-1\">Please confirm</span>\n        </div>\n      )}\n      renderFooter={({ setOpen }) => (\n        <div className=\"d-flex justify-content-between align-items-center\">\n          <Button onClick={() => setOpen(false)}>Annuler</Button>\n\n          <Button onClick={handleDelete} className=\"btn-danger\">\n            Supprimer\n          </Button>\n        </div>\n      )}\n      render={() => (\n        <div className=\"p-3\">\n          <div>You're about to delete this hit: {`${instance.slug}`}</div>\n          <div>You cannot undo this action</div>\n        </div>\n      )}\n      className={getCN(['btn-danger-3'])}\n    >\n      <Icons.Trash />\n      {label && <span className=\"label\">{label}</span>}\n    </ConfirmButton>\n  );\n};\n\nexport const HitListDeleteButton = ({\n  slugs,\n  ...props\n}: {\n  label?: string;\n  slugs: string[];\n  onDelete?: (payload?: any) => void;\n}) => {\n  const { label = '', onDelete } = props;\n\n  const handleDelete = (setOpen: any) => {\n    Hit({})\n      .deleteSlugs(slugs)\n      .then((res) => {\n        onDelete?.(res.data);\n        setOpen(false);\n      })\n      .catch((err) => {\n        console.log(err);\n      });\n  };\n\n  return (\n    <ConfirmButton\n      renderHeader={() => (\n        <div className=\"d-flex align-items-center\">\n          <Icons.ExclamationTriangleFill />\n          <span className=\"ms-1\">Please confirm</span>\n        </div>\n      )}\n      renderFooter={({ setOpen }) => (\n        <div className=\"d-flex justify-content-between align-items-center\">\n          <Button onClick={() => setOpen(false)}>Annuler</Button>\n\n          <Button onClick={() => handleDelete(setOpen)} className=\"btn-danger\">\n            Supprimer\n          </Button>\n        </div>\n      )}\n      render={() => (\n        <div className=\"p-3\">\n          <div>You're about to delete {`${slugs.length} hits.`}</div>\n          <div>You cannot undo this action</div>\n        </div>\n      )}\n      className={getCN(['btn-danger-3'])}\n      title=\"Delete group\"\n    >\n      <Icons.Trash />\n      {label && <span className=\"label\">{label}</span>}\n    </ConfirmButton>\n  );\n};\n","import { useSearchParams } from 'react-router-dom';\n\nimport { Table } from '@miq/componentjs';\nimport { Response, uuid } from '@miq/utiljs';\n\nimport StaffView from '../Views';\n\nimport { TCampaign } from './types';\nimport { useCampaignListRequest } from './utils';\n\nexport default function CampaignIndexView() {\n  const [params] = useSearchParams();\n  //   const { summary } = params.get('summary');\n\n  const { res } = useCampaignListRequest();\n  const r = new Response(res);\n  if (!r.isSuccess) return null;\n\n  return (\n    <StaffView title=\"Campaigns\" text={`${r.data.count} items`}>\n      <Table\n        className=\"w-100\"\n        items={r.items}\n        header={\n          <>\n            <Table.Th />\n            <Table.Th>Value</Table.Th>\n            <Table.Th>Count</Table.Th>\n          </>\n        }\n        renderItem={(i: TCampaign) => {\n          return (\n            <Table.Tr key={uuid()}>\n              <Table.Td>{i.key}</Table.Td>\n              <Table.Td>{i.value}</Table.Td>\n              <Table.Td>{i.count}</Table.Td>\n            </Table.Tr>\n          );\n        }}\n      />\n    </StaffView>\n  );\n}\n","import { Response } from '@miq/utiljs';\nimport { Route, Routes } from 'react-router-dom';\nimport Staff from '..';\nimport { StaffSection } from '../components';\nimport StaffView from '../Views';\nimport { HitList, HitSummarySection } from './components';\nimport { useHitListRequest } from './utils';\nimport CampaignIndexView from './views.CampaignIndex';\n\nexport const SearchRoutes = () => {\n  return (\n    <Routes>\n      <Route path=\"/\" element={<StaffView title=\"Search\"></StaffView>} />\n    </Routes>\n  );\n};\n\nexport const CampaignRoutes = () => {\n  return (\n    <Routes>\n      <Route path=\"/\" element={<CampaignIndexView />} />\n    </Routes>\n  );\n};\n\nexport const IndexView = () => {\n  const { res } = useHitListRequest();\n\n  const r = new Response(res);\n\n  if (!r.isSuccess) return null;\n\n  return (\n    <StaffView title=\"Hits\">\n      <HitSummarySection />\n\n      <StaffSection title=\"Last 100 hits\">\n        <HitList items={r.items} />\n      </StaffSection>\n    </StaffView>\n  );\n};\n","import { getCN } from '@miq/utiljs';\nimport * as React from 'react';\nimport { Routes, Route, NavLink, NavLinkProps } from 'react-router-dom';\n\nimport StaffView from '../Views';\n\nimport * as Views from './views';\n\nexport default function AnalyticsRoutes() {\n  return (\n    <StaffView\n      title=\"Analytics\"\n      back=\"/staff/\"\n      actions={\n        <>\n          <TabLink to=\"/staff/analytics/\" className=\"me-1\">\n            Hits\n          </TabLink>\n\n          <TabLink to=\"/staff/analytics/search/\" className=\"me-1\">\n            Search\n          </TabLink>\n\n          <TabLink to=\"/staff/analytics/campaigns/\" className=\"\">\n            Campaigns\n          </TabLink>\n        </>\n      }\n    >\n      <Routes>\n        <Route path=\"/search/*\" element={<Views.SearchRoutes />} />\n        <Route path=\"/campaigns/*\" element={<Views.CampaignRoutes />} />\n        <Route path=\"/\" element={<Views.IndexView />} />\n      </Routes>\n    </StaffView>\n  );\n}\n\nconst TabLink = ({ className, ...props }: NavLinkProps) => (\n  <NavLink\n    className={({ isActive }: { isActive?: boolean }) =>\n      getCN(['btn', `${className}`, isActive ? 'btn-primary' : 'btn-primary-3'])\n    }\n    {...props}\n  />\n);\n\nexport * from './utils';\nexport * from './types';\nexport * from './models';\n","// import * as React from 'react';\n\nimport './staff.scss';\n\nimport Layout from './Layout';\nimport StaffView from './Views';\n\nimport { StaffButton, StaffLink, StaffNavLink, StaffSection } from './components';\nimport { StaffImg } from './models';\n\nexport type StaffType = {};\n\nconst Staff = (args: any) => {\n  return Object.assign({}, args);\n};\n\nStaff.Layout = Layout;\n\nStaff.View = StaffView;\nStaff.Section = StaffSection;\n\nStaff.Button = StaffButton;\nStaff.Link = StaffLink;\nStaff.NavLink = StaffNavLink;\n\nStaff.Img = StaffImg;\n\nexport default Staff;\n\nexport { default as DashboardView } from './DashboardView';\n\nexport { default as AnalyticsRoutes } from './analytics';\n\nexport * from './analytics';\n\nexport * from './service';\nexport * from './models';\nexport * from './Img';\n","import getPrototypeOf from \"./getPrototypeOf.js\";\nexport default function _superPropBase(object, property) {\n  while (!Object.prototype.hasOwnProperty.call(object, property)) {\n    object = getPrototypeOf(object);\n    if (object === null) break;\n  }\n\n  return object;\n}","import superPropBase from \"./superPropBase.js\";\nexport default function _get() {\n  if (typeof Reflect !== \"undefined\" && Reflect.get) {\n    _get = Reflect.get;\n  } else {\n    _get = function _get(target, property, receiver) {\n      var base = superPropBase(target, property);\n      if (!base) return;\n      var desc = Object.getOwnPropertyDescriptor(base, property);\n\n      if (desc.get) {\n        return desc.get.call(arguments.length < 3 ? target : receiver);\n      }\n\n      return desc.value;\n    };\n  }\n\n  return _get.apply(this, arguments);\n}","import * as Axios from 'axios';\n\nimport { Img, ImgType } from '@miq/componentjs';\nimport { StaffModel, StaffService } from './service';\n\nexport type UserType = { first_name?: string; last_name?: string; gender?: string; employee?: any };\n\nexport class StaffUserService extends StaffService<UserType> {}\n\nexport const StaffUser = (data: UserType = {}) =>\n  StaffModel<UserType, StaffUserService>(data, 'account/', StaffUserService);\n\nclass StaffImgService extends StaffService<ImgType> {\n  createFromUrl(url: string, alt_text: string = '') {\n    return super.create({ src: url, alt_text });\n  }\n\n  // @ts-ignore\n  create(\n    file: File,\n    alt_text?: string,\n    config: Axios.AxiosRequestConfig<any> = {}\n  ): Promise<Axios.AxiosResponse<any, any>> {\n    if (file.name.length > 499) {\n      return Promise.reject('Filename too long');\n    }\n    const fd = new FormData();\n    fd.append('src', file, file.name);\n    if (alt_text) fd.append('alt_text', alt_text);\n\n    return super.create(fd, { ...config, headers: { 'content-type': 'multipart/form-data' } });\n  }\n\n  updateMobile(file: File) {\n    return this.update(file, undefined, 'mobile');\n  }\n  updateSquare(file: File) {\n    return this.update(file, undefined, 'square');\n  }\n  updateThumb(file: File) {\n    const { name } = file;\n    return this.update(file, undefined, 'thumb');\n  }\n  updateValues(values: any) {\n    return super.update(values);\n  }\n\n  // @ts-ignore\n  update(file: File, alt_text?: string, field?: string) {\n    if (file.name.length > 499) {\n      return Promise.reject('Filename too long');\n    }\n\n    const fd = new FormData();\n\n    if (!field) field = 'src';\n    switch (field) {\n      case 'mobile':\n        fd.append('src_mobile', file, file.name);\n        break;\n      case 'thumb':\n        fd.append('thumb', file, file.name);\n        break;\n      case 'square':\n        fd.append('thumb_sq', file, file.name);\n        break;\n      default:\n        fd.append('src', file, file.name);\n        break;\n    }\n\n    if (alt_text) fd.append('alt_text', alt_text);\n\n    return super.update(fd, { headers: { 'content-type': 'multipart/form-data' } });\n  }\n}\n\nexport const StaffImg = (data: ImgType = {}) => {\n  // @ts-ignore\n  return StaffModel<ImgType, StaffImgService>(data, 'staffimages', StaffImgService);\n};\n\nStaffImg.HorizontalGallery = Img.HorizontalGallery;\nStaffImg.VerticalGallery = Img.VerticalGallery;\nStaffImg.Mobile = Img.Mobile;\nStaffImg.Thumb = Img.Thumb;\nStaffImg.Square = Img.Square;\nStaffImg.Picture = Img.Picture;\nStaffImg.Image = Img.Image;\n","import axios, { AxiosInstance } from 'axios';\n\nimport { DOMAIN, CrudService } from '@miq/utiljs';\n\naxios.defaults.xsrfCookieName = 'csrftoken';\naxios.defaults.xsrfHeaderName = 'X-CSRFTOKEN';\naxios.defaults.headers.post['Content-Type'] = 'application/json';\n\nexport const API_ENDPOINT: string = `${DOMAIN}${process.env.REACT_APP_API_ENDPOINT}`;\nexport const STAFF_PATH: string = process.env.REACT_STAFF_PATH || '/staff/';\n\nexport const API = axios.create({\n  baseURL: API_ENDPOINT,\n  timeout: 3000,\n  withCredentials: true,\n  headers: { 'Content-type': 'application/json' },\n});\n\nexport class StaffService<T> extends CrudService<T> {\n  constructor(public data: T, endpoint: string, s: AxiosInstance = API) {\n    super(data, endpoint, s);\n    Object.assign(this, data);\n  }\n}\n\nexport function StaffModel<T, V = StaffService<T>>(\n  data: T,\n  endpoint: string,\n  TargetServiceClass: new (...args: any[]) => StaffService<T> = StaffService\n) {\n  const instance = new TargetServiceClass(data, endpoint);\n  return instance as T & typeof instance & V;\n}\n","import { StaffModel, StaffService } from '@miq/staffjs';\nimport { TCart, TCustomer } from './types';\n\nconst timeout = 5000;\n\nclass CustomerService extends StaffService<TCustomer> {\n  find(q: string) {\n    return this.list({ params: { q } });\n  }\n}\n\nexport const Customer = (data: TCustomer = {}) => {\n  return StaffModel<TCustomer, CustomerService>(data, 'customers', CustomerService);\n};\n\nexport type TCustomerInstance = ReturnType<typeof Customer>;\n\n/**\n * CART\n */\n\nclass CartService extends StaffService<TCart> {\n  addItem(prodSlug: string, size: string, qty?: string) {\n    return this.post(`${this._path}item/${prodSlug}/`, { size, qty });\n  }\n\n  updateItem(prodSlug: string, values: Record<string, any>) {\n    return this.post(`${this._path}item/${prodSlug}/`, { ...values }, { timeout });\n  }\n\n  destroyItem(prodSlug: string) {\n    return this.delete(`${this._path}item/${prodSlug}/`, { timeout });\n  }\n}\n\nexport const Cart = (data: TCart = {}) => {\n  return StaffModel<TCart, CartService>(data, 'carts', CartService);\n};\n\nexport type TCartInstance = ReturnType<typeof Cart>;\n\n// export const Cart = (data: any) => {\n//   getIsValid(data: Record<string, any>): boolean {\n//     return data && data.slug && data.products && Boolean(data.items.length);\n//   }\n\n//   getItem(meta_slug: string) {\n//     return;\n//     // return this.items?.find((i: any) => i.product.meta_slug === meta_slug);\n//   }\n\n//   postItem(prod_meta_slug: string, values: any) {\n//     // values may contain size and other info\n\n//     if (this.slug && values) values.cart_slug = this.slug;\n//     return this.postPath(`${this._endpoint}items/`, { ...values, prod_meta_slug });\n//   }\n\n//   patchItem(itemSlug: string, values: any) {\n//     return this.patchPath(`${this._path}/item/${itemSlug}/`, values);\n//   }\n//   deleteItem(itemSlug: string) {\n//     return this.deletePath(`${this._path}/item/${itemSlug}/`);\n//   }\n\n//   patchCustomer(values: any) {\n//     if (values && this?.customer?.slug) values.cust_slug = this.customer.slug;\n//     return this.patchPath(`${this._path}/customer/`, values);\n//   }\n//   postCustomer(values: any) {\n//     return this._s.post(`${this._path}/customer/`, values);\n//   }\n// }\n\n// //   const methods = {\n// //     getItem,\n// //     postItem,\n// //     patchItem,\n// //     deleteItem,\n// //     patchCustomer,\n// //     postCustomer,\n// //   };\n\n// //   return Object.assign({ isValid: getIsValid() }, CrudModel(data, 'api/carts/'), methods);\n// // };\n\n// export const Customer = (data: any) => {\n//   // return Object.assign({}, CrudModel(data, 'api/carts/'), methods);\n// };\n","import * as React from 'react';\n\nimport Form, { EmailField, FirstNameField, TextFieldProps } from '@miq/formjs';\nimport { Customer } from '../models';\nimport { TCustomer } from '../types';\nimport { Response } from '@miq/utiljs';\nimport { CustomerCard } from '../components';\nimport { Button } from '@miq/componentjs';\n\nconst CustomerSelect = ({ customers, onItemClick }: { customers: TCustomer[]; onItemClick: (p) => void }) => {\n  return (\n    <div className=\"mt-1 border-1 rounded bg-white\">\n      {customers.map((cust) => {\n        return (\n          <div\n            className=\"d-flex justify-content-between p-1 border-bottom\"\n            onClick={() => onItemClick(cust)}\n            key={cust?.slug}\n          >\n            <div className=\"fw-bold\">{`${cust.first_name} ${cust.last_name}`}</div>\n            <div className=\"text-muted text-sm\">{cust.phone}</div>\n          </div>\n        );\n      })}\n    </div>\n  );\n};\n\nexport const CustomerLNameField = ({\n  label = 'Nom',\n  text,\n  error,\n  fieldCN,\n  ...props\n}: TextFieldProps & { allowSuggestions?: boolean; onCustomerSelect?: (p: TCustomer) => void }) => {\n  const [customers, setCustomers] = React.useState<TCustomer[]>([]);\n\n  const handleDebounce = ({ value }) => {\n    if (!allowSuggestions || !value || value.length < 3) return;\n\n    Customer()\n      .find(value)\n      .then((r) => {\n        const items = new Response(r).items;\n\n        if (items.length > 0) setCustomers(items);\n        else setCustomers([]);\n      })\n      .catch((err) => {});\n  };\n\n  const { onCustomerSelect, allowSuggestions, ...rest } = props;\n\n  return (\n    <div className=\"\">\n      <Form.Field {...{ label, error, text }} className={fieldCN}>\n        <div className=\"span-md-3\">\n          <Form.Text required name=\"last_name\" {...rest} maxLength={99} minLength={2} onDebounce={handleDebounce} />\n\n          {allowSuggestions && Boolean(customers.length) && (\n            <CustomerSelect\n              customers={customers}\n              onItemClick={(p) => {\n                onCustomerSelect?.(p);\n              }}\n            />\n          )}\n        </div>\n      </Form.Field>\n    </div>\n  );\n};\n\nexport const CustomerFNameField = (props: TextFieldProps) => <FirstNameField required {...props} />;\nexport const CustomerEmailField = (props: TextFieldProps) => <EmailField {...props} />;\n\nexport const CustomerPhoneField = ({\n  label = 'Numéro de téléphone',\n  text,\n  error,\n  fieldCN,\n  ...props\n}: TextFieldProps) => (\n  <Form.Field {...{ label, error, text }} className={fieldCN}>\n    <Form.Phone required name=\"phone\" {...props} />\n  </Form.Field>\n);\n\nexport const CustomerFields = {\n  LName: CustomerLNameField,\n  FName: CustomerFNameField,\n  Email: CustomerEmailField,\n  Phone: CustomerPhoneField,\n};\n","import * as React from 'react';\nimport Form, { FormProps, IFormUpdateProps, useForm } from '@miq/formjs';\nimport { TCustomer } from './types';\nimport { TCustomerInstance } from './models';\nimport { CustomerEmailField, CustomerFNameField, CustomerLNameField, CustomerPhoneField } from './fields';\n\ntype TFormUpdateProps<T, I> = IFormUpdateProps<T> & {\n  fields: string[];\n  instance?: I;\n};\n\ntype TCustomerFormProps = Omit<TFormUpdateProps<TCustomer, TCustomerInstance>, 'context'> & {\n  onCustomerSelect?: (p: TCustomer) => void;\n};\n\nexport const CustomerForm = ({\n  children,\n  instance,\n  onSuccess,\n  onError,\n  onCustomerSelect,\n  ...props\n}: TCustomerFormProps) => {\n  const { fields } = props;\n  const form = useForm<TCustomer>(getCustomerFD(instance?.export(), fields));\n\n  const { errors } = form;\n  const sharedProps = { className: 'span-md-3', fieldCN: 'd-grid grid-md-5' };\n\n  return (\n    <Form {...props} context={form} className=\"customer-form\">\n      <div className=\"base-fields\">\n        {fields?.includes('last_name') && (\n          <CustomerLNameField\n            allowSuggestions\n            error={errors.last_name}\n            {...sharedProps}\n            onCustomerSelect={onCustomerSelect}\n            className=\"\"\n          />\n        )}\n\n        {fields?.includes('first_name') && <CustomerFNameField error={errors.first_name} {...sharedProps} />}\n\n        {fields?.includes('phone') && <CustomerPhoneField error={errors.phone} {...sharedProps} />}\n        {fields?.includes('email') && <CustomerEmailField error={errors.email} {...sharedProps} />}\n      </div>\n\n      {children}\n    </Form>\n  );\n};\nconst getCustomerFD = (data?: TCustomer, fields?: string[]) => {\n  if (!data) data = { first_name: '', last_name: '', email: '', phone: '' };\n  const fd: TCustomer = {};\n  fields?.forEach((field) => {\n    fd[field] = data![field];\n  });\n\n  return fd;\n};\nconst CustomerSearchInput = (props) => {\n  return <Form.Text {...props} />;\n};\n","import * as React from 'react';\nimport { TCustomer } from '../types';\n\nexport const CustomerCard = ({ data, ...props }: { data: TCustomer }) => {\n  if (!data || !data.slug) return null;\n\n  const { first_name, last_name, email, phone } = data;\n\n  return (\n    <div className=\"customer-card\">\n      <div className=\"fw-bold\">{`${first_name} ${last_name}`}</div>\n      <div className=\"\">{phone}</div>\n      <div className=\"text-muted text-sm\">{email}</div>\n    </div>\n  );\n};\n","import * as React from 'react';\n\nimport Staff from '@miq/staffjs';\nimport { CustomerForm } from './forms';\nimport { Cart } from './models';\nimport { Button, Icons } from '@miq/componentjs';\nimport { TCustomer } from './types';\nimport { CustomerCard } from './components';\nimport { useNavigate } from 'react-router-dom';\n\nexport default function CartCreateView() {\n  const navigate = useNavigate();\n  const [customer, setCustomer] = React.useState<TCustomer>();\n\n  const createCart = (customer: TCustomer) => {\n    Cart()\n      .create({ customer: customer.slug })\n      .then(({ data }) => {\n        return navigate(`${data.slug}/`);\n      })\n      .catch((err) => {\n        console.log(err);\n      });\n  };\n\n  return (\n    <Staff.View title=\"Ajouter une commande\">\n      <div className=\"d-flex justify-content-center my-3\">\n        <div className=\"w-md-65\">\n          <Staff.Section title=\"Client\" text=\"Selectionez ou ajoutez un noubeau client\" headerCN=\"mb-4\">\n            {customer && customer.slug ? (\n              <div className=\"\">\n                <CustomerCard data={customer} />\n\n                <div className=\"d-flex justify-content-between mt-4\">\n                  <Button className=\"btn btn-round\" onClick={() => setCustomer(undefined)}>\n                    <Icons.ArrowLeft />\n                  </Button>\n\n                  <Button\n                    onClick={() => {\n                      createCart(customer);\n                    }}\n                    className=\"btn btn-primary-3\"\n                  >{`Continuer »`}</Button>\n                </div>\n              </div>\n            ) : (\n              <CustomerForm\n                fields={['first_name', 'last_name', 'phone', 'email']}\n                onSuccess={({ data }) => {}}\n                onCustomerSelect={setCustomer}\n              >\n                <div className=\"d-flex justify-content-center my-4\">\n                  <Button type=\"submit\" className=\"btn btn-md btn-primary fw-bold\">\n                    {`Continuer »`}\n                  </Button>\n                </div>\n              </CustomerForm>\n            )}\n          </Staff.Section>\n        </div>\n      </div>\n    </Staff.View>\n  );\n}\n","import * as React from 'react';\nimport { useParams, useSearchParams } from 'react-router-dom';\n\nimport Staff from '@miq/staffjs';\nimport { useRequest } from '@miq/hookjs';\nimport { Cart } from './models';\nimport { Response, truncateStr } from '@miq/utiljs';\nimport { Loading } from '@miq/componentjs';\nimport { CustomerCard } from './components';\nimport Form, { useForm } from '@miq/formjs';\nimport {\n  useProductListRequest,\n  ProductListFilterForm,\n  SizeQuantityField,\n  SizeSelectField,\n  TProduct,\n  ProductPriceDisplay,\n} from '@shopy/storejs';\nimport { TOrder } from './types';\n\nexport default function CartUpdateView() {\n  const [params] = useSearchParams();\n  const { cartSlug } = useParams();\n\n  const qForm = useForm({ q: '' });\n  const { res: productRes } = useProductListRequest(undefined, { published: 'include', atc: 1 });\n\n  const { res, setRes, loading, ...request } = useRequest(() => Cart({ slug: cartSlug }).retrieve(), {\n    refreshDeps: [cartSlug],\n    // onSuccess: ({ data }) => form.setValues(mapData2Values(data)),\n    onError: ({ response }) => {\n      // if (response?.status === 404) return navigate('../');\n    },\n  });\n\n  const r = new Response(res);\n  if (!r.isSuccess) return null;\n\n  if (loading) return <Loading />;\n\n  const cart = Cart(r.data);\n  const products = new Response(productRes).items || [];\n\n  console.log(r.data);\n\n  return (\n    <Staff.View title=\"Modifier une commande\" className=\"\">\n      <div className=\"d-grid grid-md-6 gap-2\">\n        <div className=\"span-md-3\">\n          <Staff.Section\n            title=\"Ajouter des produits\"\n            header={\n              <>\n                <ProductListFilterForm />\n              </>\n            }\n          >\n            {products\n              .filter((i) => !cart.data.products.includes(i.slug))\n              .map((product) => {\n                return (\n                  <div className=\"\" key={product.slug}>\n                    <ProductAddForm\n                      item={product}\n                      onItemClick={(product, size, qty) => {\n                        return cart.addItem(product.slug!, size, qty).then((r) => {\n                          setRes(r);\n                          return r;\n                        });\n                      }}\n                    />\n                  </div>\n                );\n              })}\n          </Staff.Section>\n        </div>\n\n        <div className=\"span-md-3\">\n          <div className=\"\">\n            <Staff.Section border title=\"Client\" actions={<>Modifier</>}>\n              <CustomerCard data={cart.customer_data} />\n            </Staff.Section>\n\n            <Staff.Section border title=\"Panier\" actions={cart.items.length} footer={<>Confirmer</>}>\n              {cart.items.map((i) => {\n                const { product, size, quantity } = i;\n                return (\n                  <div className=\"\" key={i.slug}>\n                    <div className=\"p\">{product.name}</div>\n                    <div className=\"d-flex justify-content-between\">\n                      <span className=\"\">{size}</span>\n\n                      <span className=\"\">{quantity}</span>\n                    </div>\n                    <div className=\"\">{}</div>\n                  </div>\n                );\n              })}\n\n              <div className=\"mt-4\">\n                <div className=\"\">\n                  <span className=\"\">Subtotal</span>\n                </div>\n                <div className=\"\">\n                  <span className=\"\">Total</span>\n                </div>\n              </div>\n            </Staff.Section>\n          </div>\n        </div>\n      </div>\n    </Staff.View>\n  );\n}\n\nexport const ProductAddForm = ({\n  item,\n  onItemClick,\n  ...props\n}: {\n  item: TProduct;\n  onItemClick: (p: TProduct, size: string, qty: string) => Promise<TOrder>;\n}) => {\n  const form = useForm({ quantity: 1, size: '' });\n\n  if (!item?.slug) return null;\n\n  const { sizes = [], is_oos, category_data, cover_data, name, size_count = 0 } = item;\n\n  const canAdd = !is_oos && size_count > 0;\n\n  return (\n    <Form\n      context={form}\n      onSubmit={(e) => {\n        e.preventDefault();\n        onItemClick(item, form.values.size, form.values.quantity).catch((err) => {\n          form.handleError(err);\n        });\n      }}\n    >\n      <Staff.Section\n        border\n        header={\n          <div className=\"d-flex\">\n            <div style={{ minWidth: 34, maxWidth: 50 }} className=\"me-1\">\n              <Staff.Img.Thumb src=\"src\" {...cover_data} className=\"rounded\" />\n            </div>\n\n            <div className=\"flex-1\" title={name}>\n              <div className=\"text-ellipsis text-sm\">\n                <span className=\"me-1 fw-bold\">{truncateStr(name!, 0, 45)}</span>\n              </div>\n\n              <div className=\"d-flex flex-column flex-md-ro justify-content-between\">\n                <div className=\"d-grid grid-md-2 gap-1 flex-1\">\n                  <SizeSelectField required sizes={sizes.filter((i) => i.quantity > 0)} error={form.errors.size} />\n                  <SizeQuantityField max={sizes.find((i) => i.slug === form.values.size)?.quantity || 0} min={1} />\n                </div>\n                <div className=\"text-right\">\n                  <Form.Submit className=\"btn btn-primary-2 btn-md fw-bold\">Ajouter</Form.Submit>\n                </div>\n              </div>\n            </div>\n          </div>\n        }\n        actions={<ProductPriceDisplay {...item} className=\"d-flex flex-wrap\" />}\n        className=\"mb-1\"\n      ></Staff.Section>\n    </Form>\n  );\n};\n","import { ViewSection } from '@miq/componentjs';\nimport { useRequest } from '@miq/hookjs';\nimport Staff from '@miq/staffjs';\nimport { Response } from '@miq/utiljs';\nimport * as React from 'react';\nimport { Link } from 'react-router-dom';\nimport { CustomerCard } from './components';\nimport { Cart } from './models';\nimport { TCart } from './types';\n\nexport default function SalesIndexView() {\n  const { res, setRes, loading, ...request } = useRequest(() => Cart().list());\n\n  const r = new Response<TCart>(res);\n\n  return (\n    <Staff.View\n      title=\"Sales\"\n      actions={\n        <>\n          <Staff.Link to=\"cart/\" className=\"btn btn-primary\">\n            Ajouter une commande\n          </Staff.Link>\n        </>\n      }\n    >\n      {r.items?.map((i) => {\n        const { customer, items = [] } = i || {};\n\n        return (\n          <ViewSection key={i.slug}>\n            <Link to={`cart/${i.slug}/`}>\n              <CustomerCard data={customer} />\n              {items.map((i) => {\n                return (\n                  <>\n                    <div>{i?.product?.name}</div>\n                  </>\n                );\n              })}\n            </Link>\n          </ViewSection>\n        );\n      })}\n    </Staff.View>\n  );\n}\n","import * as React from 'react';\nimport { Routes, Route } from 'react-router-dom';\nimport CartCreateView from './CartCreateView';\nimport CartUpdateView from './CartUpdateView';\nimport SalesIndexView from './IndexView';\n\n// const ProductsView = lazy(() => import('./ProductsView'));\n// const CartDetailView = React.lazy(() => import('./CartDetailView'));\n// const OrderCreateView = React.lazy(() => import('./OrdCreateView'));\n\nexport default function SalesStaffRoutes() {\n  return (\n    <Routes>\n      {/* <Route path=\":catMetaSlug/:prodMetaSlug/\" element={<ProductView />} /> */}\n      {/* <Route path=\"cart/\" element={<CartDetailView />} /> */}\n      <Route path=\"cart/:cartSlug/\" element={<CartUpdateView />} />\n      <Route path=\"cart/\" element={<CartCreateView />} />\n      <Route path=\"/\" element={<SalesIndexView />} />\n    </Routes>\n  );\n}\n\nexport { CustomerFields } from './forms/fields';\nexport * from './types';\n","import * as React from 'react';\nimport Form, { FormFieldProps, IFormCallbackProps, SelectFieldProps, TextFieldProps, useForm } from '@miq/formjs';\nimport { Button, ConfirmButton, Icons } from '@miq/componentjs';\nimport { StaffProduct } from '../models';\nimport { TProductSize } from '../../types';\n\ntype UpdateFormProps = IFormCallbackProps & {\n  data: any;\n  productInstance: ReturnType<typeof StaffProduct>;\n};\n\nexport const SizeUpdateForm = ({ data, productInstance, ...props }: UpdateFormProps & { data: TProductSize }) => {\n  const form = useForm<TProductSize>({\n    name: data.name || '',\n    code: data.code || '',\n    quantity: data.quantity || 0,\n  });\n\n  if (!data?.slug || !productInstance?.slug) return null;\n\n  const { onSuccess, onError } = props;\n\n  return (\n    <Form\n      context={form}\n      onSubmit={(e) => {\n        e.preventDefault();\n\n        productInstance\n          .patchSize(data.slug, form.values)\n          .then((res: any) => onSuccess?.(res))\n          .catch((err: any) => {\n            form.handleError(err);\n            return props?.onError?.(err);\n          });\n      }}\n    >\n      <div className=\"d-grid grid-5 gap-1\">\n        <SizeNameField error={form.errors.name} />\n        <SizeCodeField error={form.errors.code} />\n        <SizeQuantityField error={form.errors.quantity} />\n\n        <div className=\"span-md-2\">\n          <Form.Submit value=\"Save\" className=\"btn-primary-2 me-2\" />\n          <SizeDeleteButton {...{ productInstance, data, onSuccess, onError }} />\n        </div>\n      </div>\n    </Form>\n  );\n};\n\nconst commonSizes: { [k: string]: any } = {\n  xs: { name: 'Extra-small', code: 'XS' },\n  s: { name: 'Small', code: 'S' },\n  m: { name: 'Medium', code: 'M' },\n  l: { name: 'Large', code: 'L' },\n  xl: { name: 'Extra-large', code: 'XL' },\n};\nconst formDefaultValues: TProductSize = { name: '', code: '', quantity: 1 };\n\nexport const SizeAddForm = ({ productInstance, ...props }: Omit<UpdateFormProps, 'data'>) => {\n  const form = useForm<TProductSize>(formDefaultValues);\n\n  if (!productInstance?.slug) return null;\n\n  return (\n    <Form\n      context={form}\n      onSubmit={(e) => {\n        e.preventDefault();\n\n        productInstance\n          .postSize(form.values)\n          .then((res: any) => {\n            form.setValues(formDefaultValues);\n            return props?.onSuccess?.(res);\n          })\n          .catch((err: any) => {\n            form.handleError(err);\n            return props?.onError?.(err);\n          });\n      }}\n    >\n      <div className=\"d-flex my-2\">\n        <Button\n          onClick={() => form.setValues({ ...form.values, name: 'One-size', code: 'ONESIZE' })}\n          className=\"size-select-btn me-1\"\n        >\n          One/size\n        </Button>\n\n        {Object.keys(commonSizes).map((key: string) => {\n          const data = commonSizes[key];\n          return (\n            <Button\n              onClick={() => form.setValues({ ...form.values, ...data })}\n              className=\"size-select-btn me-1\"\n              key={key}\n            >\n              {key}\n            </Button>\n          );\n        })}\n      </div>\n      <div className=\"d-grid grid-5 gap-1\">\n        <SizeNameField error={form.errors.name} />\n        <SizeCodeField error={form.errors.code} />\n        <SizeQuantityField error={form.errors.quantity} />\n\n        <div className=\"span-md-2\">\n          <Form.Submit value=\"Save\" className=\"btn-primary-2 me-2\" />\n        </div>\n      </div>\n    </Form>\n  );\n};\n\nconst SizeNameField = (props: FormFieldProps) => {\n  const { label, text, error, ...rest } = props;\n\n  return (\n    <Form.Field {...{ label, text, error }}>\n      <Form.Text\n        placeholder=\"Entrez le nom de la taille ...\"\n        {...rest}\n        required\n        name=\"name\"\n        maxLength={20}\n        minLength={2}\n      />\n    </Form.Field>\n  );\n};\nconst SizeCodeField = (props: FormFieldProps) => {\n  const { label, text, error, ...rest } = props;\n\n  return (\n    <Form.Field {...{ label, text, error }}>\n      <Form.Text placeholder=\"Entrez le code de la taille ...\" {...rest} required name=\"code\" maxLength={10} />\n    </Form.Field>\n  );\n};\n\nexport const SizeQuantityField = (props: TextFieldProps) => {\n  const { label, text, error, ...rest } = props;\n\n  return (\n    <Form.Field {...{ label, text, error }}>\n      <Form.Text placeholder=\"Entrez la quantité ...\" {...rest} required type=\"number\" name=\"quantity\" min={0} />\n    </Form.Field>\n  );\n};\n\nexport const SizeSelectField = (props: SelectFieldProps & { sizes: TProductSize[] }) => {\n  const { label, text, error, sizes, ...rest } = props;\n\n  return (\n    <Form.Field {...{ label, text, error }}>\n      <Form.Select {...rest} required name=\"size\" nullValue={{ label: 'Sélectionnez une taille ...' }}>\n        {sizes?.map((size) => {\n          return <Form.Option label={size.code?.toUpperCase()} value={size.slug!} key={size.slug} />;\n        })}\n      </Form.Select>\n    </Form.Field>\n  );\n};\n\nconst SizeSkuField = (props: FormFieldProps) => {\n  const { label, text, error, ...rest } = props;\n\n  return (\n    <Form.Field {...{ label, text, error }}>\n      <Form.Text placeholder=\"Sku\" {...rest} name=\"sku\" maxLength={99} minLength={2} />\n    </Form.Field>\n  );\n};\n\nconst SizeDeleteButton = ({ data, productInstance, ...props }: UpdateFormProps & { data: TProductSize }) => {\n  if (!data?.slug || !productInstance?.slug) return null;\n  const { onSuccess, onError, ...rest } = props;\n\n  return (\n    <ConfirmButton\n      {...rest}\n      renderHeader={() => <div>Supprimer une taille</div>}\n      renderFooter={({ setOpen }) => (\n        <div className=\"d-flex justify-content-between align-items-center\">\n          <Button onClick={() => setOpen(false)}>Annuler</Button>\n\n          <Button\n            onClick={() =>\n              productInstance\n                .deleteSize(data.slug)\n                .then((res) => {\n                  setOpen(false);\n                  return onSuccess?.(res);\n                })\n                .catch((err) => onError?.(err))\n            }\n            className=\"btn-danger\"\n          >\n            Supprimer\n          </Button>\n        </div>\n      )}\n      render={() => (\n        <div className=\"p-3\">\n          Are you sure you want to delete this size:\n          <div className=\"fw-bold\">{data.name}</div>\n        </div>\n      )}\n      className=\"size-delete-button btn-danger-3\"\n    >\n      <Icons.Trash />\n    </ConfirmButton>\n  );\n};\n","import * as React from 'react';\nimport { NavLink, useParams, useSearchParams } from 'react-router-dom';\n\nimport { getCN } from '@miq/utiljs';\nimport { IFormUpdateProps } from '@miq/formjs';\nimport { Button, ConfirmButton, Icons, ViewSection } from '@miq/componentjs';\nimport Staff, { ImgAddButtonProps, StaffImg, StaffImgAddButton } from '@miq/staffjs';\n\nimport { emitter } from '../events';\nimport { TSupplierOrderInstance } from '../Supplier';\nimport { TProduct, TProductStageData } from '../types';\nimport { ProductPriceDisplay, PublishedIcon } from '../components';\n\nimport { StaffProduct, TStaffProductInstance } from './models';\n\n//#region ============================== BUTTONS\n\nexport type ProductImagesAddButtonProps = Omit<ImgAddButtonProps, 'onSuccessMulti' | 'onErrorMulti'> & {\n  productInstance: TStaffProductInstance;\n};\n\n/**\n * Button component for adding images to a product\n * ```js\n * <ProductImagesAddButton productInstance={instance} onSuccess={(res: any) => onUpdate?.(res.data)} />\n * ```\n */\n\nexport const ProductImagesAddButton = (props: ProductImagesAddButtonProps) => {\n  const { productInstance, onSuccess, onError, ...rest } = props;\n  return (\n    <StaffImgAddButton\n      className=\"btn-primary-3\"\n      {...rest}\n      multiple={true}\n      onSuccessMulti={(resArray) => {\n        const imgsArray = resArray\n          .map(({ data }: any) => data?.slug)\n          .filter((slug) => !productInstance.images?.includes(slug));\n        return productInstance\n          .update({ images: [...productInstance.images!, ...imgsArray] })\n          .then((res) => onSuccess?.(res))\n          .catch((err) => onError?.(err));\n      }}\n    />\n  );\n};\n\nexport const ProductDeleteButton: React.FC<\n  Omit<IFormUpdateProps<TStaffProductInstance>, 'context'> & { label?: string }\n> = (props) => {\n  const { instance, onSuccess, onError, label } = props;\n\n  const handleDelete = (setOpen: any) => {\n    instance\n      .destroy()\n      .then((res: any) => {\n        setOpen?.(false);\n        onSuccess?.(res);\n        emitter.destroy({ slug: instance.slug });\n      })\n      .catch((err: any) => onError?.(err));\n  };\n  return (\n    <ConfirmButton\n      renderHeader={() => <div>Supprimer '{instance.name}'</div>}\n      renderFooter={({ setOpen }) => (\n        <div className=\"d-flex justify-content-between align-items-center\">\n          <Button onClick={() => setOpen(false)}>Annuler</Button>\n\n          <Button onClick={() => handleDelete(setOpen)} className=\"btn-danger\">\n            Supprimer\n          </Button>\n        </div>\n      )}\n      render={() => <div className=\"p-3\">Are you sure you want to delete this</div>}\n      className={getCN(['product-delete-button btn-danger-3', props.className])}\n    >\n      <Icons.Trash />\n      {label && <span className=\"label\">{label}</span>}\n    </ConfirmButton>\n  );\n};\n\n//#endregion ============================== BUTTONS\n\nexport const ProductListItem = ({\n  item,\n  ...props\n}: {\n  item: TProduct;\n  orderInstance?: TSupplierOrderInstance;\n  stages: TProductStageData[];\n  params?: URLSearchParams;\n}) => {\n  const [open, setOpen] = React.useState(false);\n\n  if (!item?.slug) return null;\n  const { params, orderInstance, stages = [] } = props;\n\n  const instance = StaffProduct(item);\n  const to = `${instance.slug}/${`${params}` ? `?${params}` : ''}`;\n  const { supplier_item = { cost: 0 }, stage } = instance;\n\n  const stageData = stages?.find((i) => i.value === stage);\n\n  return (\n    <ViewSection\n      border\n      title={\n        <div className=\"d-flex align-itemscenter\" onClick={() => setOpen(!open)}>\n          <div style={{ width: 48 }}>\n            <Staff.Img.Thumb src=\"src\" {...instance.cover_data} className=\"rounded\" />\n          </div>\n\n          <div className=\"ms-1 d-grid grid-md-3\">\n            <div className=\"span-md-2\">\n              {item.is_oos && <span className=\"text-sm text-danger\">Out of stock</span>}\n              <div className=\"text-ellipsis text-sm\">\n                <span className=\"me-1 fw-bold\">{item.name_truncated}</span>\n                <PublishedIcon show={item.is_published || false} />\n              </div>\n\n              <div className=\"d-flex text-sm\">\n                <ProductPriceDisplay {...instance.export()} className=\"d-flex flex-wrap\" />\n                <div className=\"text-muted px-1\">{`|`}</div>\n                {supplier_item && supplier_item?.cost && (\n                  <div className=\"text-muted\">{`${supplier_item?.cost} ${orderInstance?.currency || 'USD'}`}</div>\n                )}\n              </div>\n            </div>\n\n            <div className=\"text-sm\">\n              <div>\n                <span className=\"\">\n                  {instance?.category_data?.name || \"' - '\"}\n                  {supplier_item && <span className=\"text-muted\">{` | ${supplier_item.category}`}</span>}\n                </span>\n              </div>\n\n              <span>{`Sizes: ${instance.size_count}`}</span>\n              {stageData && <span className=\"text-muted\">{` - ${stageData.label}`}</span>}\n\n              {supplier_item && (\n                <a className=\"ms-1\" href={supplier_item.url} target=\"_blank\" rel=\"noopener noreferrer\">{`↗️`}</a>\n              )}\n            </div>\n          </div>\n        </div>\n      }\n      actions={\n        <div className=\"d-flex\">\n          <Staff.Link to={`./${to}`} className=\"btn btn-square btn-primary-3\">\n            <Icons.PencilSquare />\n          </Staff.Link>\n        </div>\n      }\n      className=\"mb-1\"\n    >\n      {open && <div className=\"\"></div>}\n    </ViewSection>\n  );\n};\n\nexport const ProductCardItem = ({ data, ...props }: { data: TProduct }) => {\n  const instance = StaffProduct(data);\n\n  return (\n    <div className=\"p-card-list-item p-1 mb-1\">\n      <div className=\"d-flex align-items-center\">\n        <div className=\"p-name text-ellipsis\">{instance.name_truncated}</div>\n        <div className=\"ms-1\">\n          <PublishedIcon show={instance.is_published} />\n        </div>\n      </div>\n\n      <div className=\"d-flex\">\n        <StaffImg.Square {...instance?.cover_data} />\n        <div className=\"p-info ps-1\">\n          <ProductPriceDisplay {...instance.export()} className=\"d-flex flex-wrap\" />\n          <div className=\"p-category\">{instance.category_data?.name}</div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport type ProductCardListProps = {\n  items: TProduct[];\n  itempath: string;\n};\nexport const ProductCardList = ({ items, itempath }: ProductCardListProps) => {\n  const [params] = useSearchParams();\n  const { prodSlug } = useParams();\n\n  return (\n    <div className=\"p-card-list-items\">\n      {items.map((item: TProduct) => {\n        let to = `${itempath}${item.slug}/?${params}`;\n        return (\n          <NavLink to={to} key={item.slug} className={getCN([prodSlug === item.slug && 'active'])}>\n            <ProductCardItem data={item} />\n          </NavLink>\n        );\n      })}\n    </div>\n  );\n};\n","import * as React from 'react';\n\nimport Form, {\n  CheckboxFieldProps,\n  DescriptionField,\n  FormProps,\n  IFormCallbackProps,\n  IFormUpdateProps,\n  NameField,\n  SelectFieldProps,\n  TextChoicesType,\n  TextFieldProps,\n  useForm,\n} from '@miq/formjs';\nimport { getCN, isRequired as isR } from '@miq/utiljs';\n\nimport { emitter } from '../events';\nimport { CategoryChoicesType } from '../types';\n\nimport { StaffProduct, TStaffProductInstance } from './models';\nimport { URLSearchParamsInit, useSearchParams } from 'react-router-dom';\nimport { Button } from '@miq/componentjs';\nimport { SupplierOrder } from '../Supplier';\n\n/**\n *\n */\n\ninterface IProductUpdateFormProps extends IFormUpdateProps<TStaffProductInstance> {\n  onWillSubmit?: () => void;\n  fields?: string[];\n}\n\nexport const ProductQuickUpdateForm = (\n  props: Omit<IProductUpdateFormProps, 'context'> & { categories: CategoryChoicesType; orderSlug?: string }\n) => {\n  const { instance, categories, orderSlug, ...rest } = props;\n\n  const form = useForm({\n    name: instance.name || '',\n    category: instance.category || '',\n    description: instance.description || '',\n    retail_price: instance?.retail_price || 0.0,\n    is_pre_sale: instance.is_pre_sale || false,\n    is_pre_sale_text: instance.is_pre_sale_text || '',\n  });\n\n  const { errors } = form;\n  const { fields = ['name', 'category', 'description', 'retail_price', 'is_pre_sale', 'is_pre_sale_text'] } = props;\n\n  return (\n    <ProductUpdateForm {...rest} context={form} instance={instance} fields={fields}>\n      <ProductForm.NameField error={errors.name} />\n\n      <ProductForm.DescriptionField error={errors.description} />\n\n      <div className=\"d-grid grid-md-3 gap-2\">\n        {categories && <ProductForm.CategoryField categories={categories} error={errors.category} />}\n        <ProductForm.RetailPriceField error={errors.retail_price} />\n      </div>\n\n      <ProductForm.PresaleCheckboxField label=\"En pré-vente\" error={errors.is_pre_sale} />\n      {form.values.is_pre_sale && (\n        <ProductForm.PresaleTextField label=\"Pre-sale text\" placeholder=\"Explain ...\" error={errors.is_pre_sale_text} />\n      )}\n\n      <div className=\"d-flex align-items-center justify-content-between\">\n        <div>\n          {orderSlug && instance?.slug && (\n            <Button\n              onClick={() => {\n                SupplierOrder({ slug: orderSlug }).destroyItem(instance.slug!);\n              }}\n            >\n              Remove from order\n            </Button>\n          )}\n        </div>\n\n        <Form.Submit value=\"Sauvegarder\" className=\"btn-primary-3 btn-md\" />\n      </div>\n    </ProductUpdateForm>\n  );\n};\n\nexport function ProductUpdateForm({ children, ...props }: IProductUpdateFormProps) {\n  const {\n    instance = isR('StaffProduct instance'),\n    fields = isR('fields instance'),\n    onSuccess,\n    onError,\n    ...rest\n  } = props;\n\n  const { context } = rest;\n\n  const handleSubmit = (e: React.FormEvent) => {\n    e.preventDefault();\n    props?.onWillSubmit?.();\n\n    const fd: any = {};\n    fields.forEach((field) => {\n      const value = context.values[field];\n      if (value == null) return;\n      if (field == 'is_pre_sale_dt' && !value) return;\n\n      fd[field] = value;\n    });\n\n    return instance\n      .update(fd)\n      .then(({ data }: any) => {\n        onSuccess?.(data);\n        emitter.update(data);\n      })\n      .catch((err: any) => {\n        if (onError) return onError(err);\n        return context.handleError(err);\n      });\n  };\n\n  return (\n    <ProductForm {...rest} onSubmit={handleSubmit}>\n      {children}\n    </ProductForm>\n  );\n}\n\n/**\n *\n */\n\nexport interface ProductCreateFormProps extends IFormCallbackProps {}\n\nexport const ProductCreateForm: React.FC<ProductCreateFormProps> = (props) => {\n  const form = useForm({ name: '', retail_price: '', description: '' });\n\n  const { errors } = form;\n\n  const handleCreate = (e: React.FormEvent) => {\n    e.preventDefault();\n    StaffProduct()\n      .create(form.values)\n      .then((res: any) => props?.onSuccess?.(res))\n      .catch((err: any) => form.handleError(err));\n  };\n\n  return (\n    <ProductForm context={form} onSubmit={handleCreate}>\n      <ProductForm.NameField label=\"Nom du produit\" error={errors.name} />\n      <ProductForm.RetailPriceField required={false} label=\"Prix du produit\" error={errors.retail_price} />\n      <ProductForm.DescriptionField label=\"Description du produit\" error={errors.description} />\n\n      <Form.Submit value=\"Sauvegarder\" className=\"btn-primary-3\" />\n    </ProductForm>\n  );\n};\n\n/**\n *\n */\n\nexport const ProductForm = (props: FormProps) => <Form {...props} />;\n\n/**\n *\n */\n\nProductForm.NameField = (props: TextFieldProps) => (\n  <NameField placeholder=\"Entrez un titre clair et concis ...\" {...props} />\n);\nProductForm.DescriptionField = (props: TextFieldProps) => (\n  <DescriptionField placeholder=\"Décrivez les caractéristiques et les avantages ...\" {...props} />\n);\n\nProductForm.CategoryField = (props: SelectFieldProps & { categories: CategoryChoicesType }) => {\n  const { label, text, error, categories, ...rest } = props;\n\n  return (\n    <Form.Field {...{ label, text, error }}>\n      <Form.Select {...rest} required name=\"category\" nullValue={{ label: 'Sélectionnez une catégorie ...' }}>\n        {categories?.items?.map((cat) => {\n          return <Form.Option {...cat} key={cat.value} />;\n        })}\n      </Form.Select>\n    </Form.Field>\n  );\n};\n\nProductForm.SalePriceField = (props: TextFieldProps) => {\n  const { label, text, error, ...rest } = props;\n  return (\n    <Form.Field {...{ label, text, error }}>\n      <Form.Text\n        aria-describedby=\"sale_price_label\"\n        min=\"0\"\n        step=\"0.01\"\n        required\n        placeholder=\"Prix réduit\"\n        {...rest}\n        type=\"number\"\n        name=\"sale_price\"\n      />\n    </Form.Field>\n  );\n};\n\nProductForm.OnSaleCheckboxField = (props: CheckboxFieldProps) => {\n  const { label, text, error, ...rest } = props;\n\n  return (\n    <Form.Field {...{ label, text, error }} checkbox>\n      <Form.Checkbox {...rest} name=\"is_on_sale\" />\n    </Form.Field>\n  );\n};\n\nProductForm.PresaleCheckboxField = (props: CheckboxFieldProps) => {\n  const { label, text, error, ...rest } = props;\n\n  return (\n    <Form.Field {...{ label, text, error }} checkbox>\n      <Form.Checkbox {...rest} name=\"is_pre_sale\" />\n    </Form.Field>\n  );\n};\n\nProductForm.OosCheckboxField = (props: CheckboxFieldProps) => {\n  const { label = 'En rupture de stock', text, error, ...rest } = props;\n\n  return (\n    <Form.Field {...{ label, text, error }} checkbox>\n      <Form.Checkbox {...rest} name=\"is_oos\" />\n    </Form.Field>\n  );\n};\n\nProductForm.PresaleTextField = (props: TextFieldProps) => {\n  const { label, text, error, ...rest } = props;\n  return (\n    <Form.Field {...{ label, text, error }}>\n      <Form.TextAreaX placeholder=\"\" {...rest} name=\"is_pre_sale_text\" aria-describedby=\"is_pre_sale_text_label\" />\n    </Form.Field>\n  );\n};\n\nProductForm.RetailPriceField = (props: TextFieldProps) => {\n  const { label, text, error, ...rest } = props;\n\n  return (\n    <Form.Field {...{ label, text, error }}>\n      <Form.Text\n        required\n        placeholder=\"Prix\"\n        aria-describedby=\"retail_price_label\"\n        min=\"0\"\n        step=\"0.01\"\n        {...rest}\n        type=\"number\"\n        name=\"retail_price\"\n      />\n    </Form.Field>\n  );\n};\n\nexport type ProductStageSelectField = SelectFieldProps & { stages: TextChoicesType };\n\nProductForm.StageSelectField = (props: ProductStageSelectField) => {\n  const { label, text, error, required = true, stages, ...rest } = props;\n\n  return (\n    <Form.Field {...{ label, text, error }}>\n      <Form.Select required={required} name={'stage'} nullValue={{ label: 'Select stage' }} {...rest}>\n        {stages?.map?.((stage) => {\n          return <Form.Option {...stage} key={stage.value} />;\n        })}\n      </Form.Select>\n    </Form.Field>\n  );\n};\n\ntype ProductListFilterFormProps = {\n  children?: React.ReactNode;\n  categories?: CategoryChoicesType;\n};\n\nexport const ProductListFilterForm = ({ children, ...props }: ProductListFilterFormProps) => {\n  const [params, setParams] = useSearchParams();\n  const [q, setQ] = React.useState<string>(params.get('q') || '');\n  const { categories, ...rest } = props;\n\n  return (\n    <form\n      {...rest}\n      action=\".\"\n      method=\"GET\"\n      onSubmit={(e) => {\n        e.preventDefault();\n\n        if (!q) params.delete('q');\n        else params.set('q', q);\n        params.delete('page');\n\n        setParams(params);\n      }}\n    >\n      {children || (\n        <>\n          <div className=\"mb-2 d-flex\">\n            <input\n              type=\"text\"\n              name=\"q\"\n              value={q}\n              onChange={(e) => {\n                const { value } = e.target;\n                setQ(value);\n                if (!value && params.get('q')) params.delete('q');\n              }}\n              className=\"miq-form-input flex-1\"\n              placeholder=\"Cherchez un produit par nom, categorie ou numero de serie ...\"\n            />\n            <Form.Submit value={'Search'} className=\"btn-primary-3 ms-1\" />\n          </div>\n\n          {categories && <ProductListFilterForm.Category {...{ params, setParams, categories }} />}\n\n          <ProductListFilterForm.Published {...{ params, setParams }} className=\"mb-1\" />\n          <ProductListFilterForm.Sale {...{ params, setParams }} className=\"mb-1\" />\n          <ProductListFilterForm.PreSale {...{ params, setParams }} className=\"mb-1\" />\n        </>\n      )}\n    </form>\n  );\n};\n\ntype TParamsProps = {\n  params: URLSearchParams;\n  setParams: (\n    nextInit: URLSearchParamsInit,\n    navigateOptions?:\n      | {\n          replace?: boolean | undefined;\n          state?: any;\n        }\n      | undefined\n  ) => void;\n};\n\ntype QuerySelectFieldProps = TParamsProps & {\n  emptyLabel?: string;\n  name: string;\n  children?: React.ReactNode;\n  className?: string;\n};\n\nProductListFilterForm.Category = (props: Omit<QuerySelectFieldProps, 'name'> & { categories: CategoryChoicesType }) => {\n  const { categories, ...rest } = props;\n\n  return (\n    <QuerySelectField emptyLabel=\"Categorie ...\" {...rest} name=\"cat\">\n      {categories.items.map((cat) => {\n        return (\n          <option value={cat.value} key={cat.slug}>\n            {cat.label}\n          </option>\n        );\n      })}\n    </QuerySelectField>\n  );\n};\n\nProductListFilterForm.Published = (props: Omit<QuerySelectFieldProps, 'name'>) => {\n  return (\n    <QuerySelectField emptyLabel=\"Tous les produits ...\" {...props} name=\"published\">\n      <option value=\"include\">Produits publiés</option>\n      <option value=\"exclude\">Produits non publiés</option>\n    </QuerySelectField>\n  );\n};\n\nconst QuerySelectField = ({ children, ...props }: QuerySelectFieldProps) => {\n  const { name, params, setParams, emptyLabel } = props;\n  return (\n    <select\n      className={getCN(['miq-select', props.className])}\n      name={name}\n      value={params.get(name) || ''}\n      onChange={(e) => {\n        const { value } = e.target;\n\n        if (!value) params.delete(name);\n        else params.set(name, value);\n        params.delete('page');\n\n        setParams(params);\n      }}\n    >\n      {emptyLabel && <option value=\"\">{emptyLabel}</option>}\n      {children}\n    </select>\n  );\n};\n\nProductListFilterForm.PreSale = (props: Omit<QueryToggleFieldProps, 'name' | 'label'>) => {\n  return <QueryToggleField {...props} name=\"presale\" label=\"En pré-vente\" />;\n};\n\nProductListFilterForm.Sale = (props: Omit<QueryToggleFieldProps, 'name' | 'label'>) => {\n  return <QueryToggleField {...props} name=\"sale\" label=\"En promo\" />;\n};\n\ntype QueryToggleFieldProps = Omit<QuerySelectFieldProps, 'emptyLabel'> & { label: string; inputId?: string };\n\nconst QueryToggleField = (props: QueryToggleFieldProps) => {\n  const { label, name, params, setParams, inputId } = props;\n\n  return (\n    <div className={getCN(['miq-query-filter-toggle d-flex align-items-center', props.className])}>\n      <input\n        type=\"checkbox\"\n        className=\"miq-checkbox me-1\"\n        id={inputId}\n        onChange={(e) => {\n          const { checked } = e.target;\n          if (!checked) params.delete(name);\n          else params.set(name, `${checked}`);\n          params.delete('page');\n          setParams(params);\n        }}\n        checked={Boolean(params.get(name)) || false}\n      />\n      <label htmlFor={inputId}>{label}</label>\n    </div>\n  );\n};\n","import { StaffModel, StaffService } from '@miq/staffjs';\nimport { TProduct } from '../types';\n\nclass StaffProductService extends StaffService<TProduct> {\n  publish() {\n    return this.patch(`${this._path}publish/`, { is_published: true });\n  }\n\n  unpublish() {\n    return this.patch(`${this._path}publish/`, { is_published: false });\n  }\n\n  postSize(values: any) {\n    return this.post(`${this._path}size/new/`, values);\n  }\n  patchSize(sizeSlug: string, values: any) {\n    return this.patch(`${this._path}size/${sizeSlug}/`, values);\n  }\n  deleteSize(sizeSlug: string) {\n    return this.delete(`${this._path}size/${sizeSlug}/`);\n  }\n  postAttribute(values: any) {\n    return this.post(`${this._path}attribute/new/`, values);\n  }\n  patchAttribute(attrSlug: string, values: any) {\n    return this.patch(`${this._path}attribute/${attrSlug}/`, values);\n  }\n  deleteAttribute(attrSlug: string) {\n    return this.delete(`${this._path}attribute/${attrSlug}/`);\n  }\n  swapCover(slug: string) {\n    return this.patch(`${this._path}swap-cover/`, { slug });\n  }\n}\n\nexport const StaffProduct = (data: TProduct) => {\n  let { dt_published } = data;\n  if (dt_published) dt_published = new Date(dt_published);\n\n  return StaffModel<TProduct, StaffProductService>({ ...data, dt_published }, 'products', StaffProductService);\n};\n\nexport type TStaffProductInstance = ReturnType<typeof StaffProduct>;\n","import { useSearchParams } from 'react-router-dom';\n\nimport { useRequest } from '@miq/hookjs';\nimport { StaffProduct } from './models';\n\nexport const useProductListRequest = (\n  orderSlug?: string,\n  filter?: { published?: 'include' | 'exclude'; atc?: 0 | 1 }\n) => {\n  const [params] = useSearchParams();\n\n  const q = params.get('q');\n  const cat = params.get('cat');\n  const page = params.get('page');\n  const published = params.get('published');\n  const presale = params.get('presale');\n  const sale = params.get('sale');\n\n  let searchParams: any = { page, cat, published, presale, sale, q, ...filter };\n  if (orderSlug) searchParams.supplier_order_slug = orderSlug;\n\n  return useRequest(() => StaffProduct({}).list({ params: searchParams }), {\n    refreshDeps: [q, page, cat, published, presale, sale, orderSlug],\n  });\n};\n","import * as React from 'react';\nimport Form, {\n  DescriptionField,\n  NameField,\n  FormProps,\n  IFormCallbackProps,\n  IFormUpdateProps,\n  useForm,\n  TextFieldProps,\n  CheckboxFieldProps,\n  SelectFieldProps,\n  TextChoicesType,\n} from '@miq/formjs';\nimport { SupplierOrder } from './models';\nimport { ProductForm, ProductStageSelectField } from '../Product/forms';\n\ninterface ISupplierOrderUpdateFormProps extends IFormUpdateProps {\n  instance: ReturnType<typeof SupplierOrder>;\n  fields: string[];\n}\n\nexport const SupplierOrderUpdateForm: React.FC<ISupplierOrderUpdateFormProps> = ({ instance, fields, ...props }) => {\n  const { onSuccess, onError, ...rest } = props;\n  const { context } = rest;\n\n  const handleSubmit = (e: React.FormEvent) => {\n    e.preventDefault();\n\n    const fd: any = {};\n    fields.forEach((field) => {\n      const value = context.values[field];\n      if (value == null) return;\n      fd[field] = value;\n    });\n\n    return instance\n      .update(fd)\n      .then((res: any) => onSuccess?.(res))\n      .catch((err: any) => {\n        if (onError) return onError(err);\n        return context?.handleError?.(err);\n      });\n  };\n  return <SupplierOrderForm {...rest} onSubmit={handleSubmit} />;\n};\n\n//#region ==================================== SUPPLIER ORDER FORM\n\nexport const SupplierOrderForm = (props: FormProps) => <Form {...props} />;\n\nSupplierOrderForm.NameField = (props: TextFieldProps) => {\n  const { label = 'Name', text = 'Write a name to help remember your order.', error, ...rest } = props;\n  return (\n    <Form.Field label={label} text={text} error={error}>\n      <Form.Text placeholder=\"Nom\" maxLength={99} {...rest} name=\"name\" />\n    </Form.Field>\n  );\n};\n\nSupplierOrderForm.OrderIDField = (props: TextFieldProps) => {\n  const { label = 'Order ID', text, error, ...rest } = props;\n  return (\n    <Form.Field label={label} text={text} error={error}>\n      <Form.Text placeholder=\"Order ID\" maxLength={99} {...rest} name=\"order_id\" />\n    </Form.Field>\n  );\n};\n\nSupplierOrderForm.IsPaidField = (props: CheckboxFieldProps) => {\n  const { label = 'Payé', text, error, ...rest } = props;\n  return (\n    <Form.Field label={label} text={text} error={error} checkbox>\n      <Form.Checkbox {...rest} name=\"is_paid\" />\n    </Form.Field>\n  );\n};\n\nSupplierOrderForm.TotalCostField = (props: TextFieldProps) => {\n  const { label = 'Coût total', text, error, ...rest } = props;\n  return (\n    <Form.Field label={label} text={text} error={error}>\n      <Form.Text min=\"0\" step=\"0.01\" {...rest} required type=\"number\" name=\"total_cost\" />\n    </Form.Field>\n  );\n};\n\nSupplierOrderForm.CurrencyField = (props: SelectFieldProps & { currencies: TextChoicesType }) => {\n  const { label, text = 'Select the supplier currency.', error, currencies, ...rest } = props;\n\n  return (\n    <Form.Field {...{ label, text, error }}>\n      <Form.Select {...rest} required name=\"currency\" nullValue={{ label: 'Sélectionnez une monnaie ...' }}>\n        {currencies?.map((curr) => {\n          return <Form.Option {...curr} key={curr.value} />;\n        })}\n      </Form.Select>\n    </Form.Field>\n  );\n};\n\nSupplierOrderForm.SupplierField = (props: SelectFieldProps & { suppliers: TextChoicesType }) => {\n  const { label, text = 'Select the supplier.', error, suppliers, ...rest } = props;\n\n  return (\n    <Form.Field {...{ label, text, error }}>\n      <Form.Select {...rest} required name=\"supplier\" nullValue={{ label: 'Sélectionnez le supplier ...' }}>\n        {suppliers?.map((supplier) => {\n          return <Form.Option {...supplier} key={supplier.value} />;\n        })}\n      </Form.Select>\n    </Form.Field>\n  );\n};\n\nSupplierOrderForm.StageSelectField = (props: ProductStageSelectField) => (\n  <ProductForm.StageSelectField required={false} {...props} />\n);\n\n//#endregion ==================================== SUPPLIER ORDER FORM\n\ninterface ISupplierOrderProductAddFormProps extends IFormCallbackProps {\n  orderInstance: ReturnType<typeof SupplierOrder>;\n  children?: React.ReactNode;\n}\n\nexport const SupplierOrderProductAddForm = ({ children, ...props }: ISupplierOrderProductAddFormProps) => {\n  const { orderInstance, onSuccess, onError } = props;\n  const supplier = orderInstance?.supplier?.toLowerCase();\n\n  const form = useForm({ supplier_name: supplier, url: '' });\n  const [isLoading, setLoading] = React.useState(false);\n\n  const handleSubmit = (e: React.FormEvent) => {\n    e.preventDefault();\n\n    const { url } = form.values;\n\n    const handleSuccess = (res: any) => {\n      setLoading(false);\n      form.setValue('url', '');\n      return onSuccess?.(res);\n    };\n\n    const handleError = (err: any) => {\n      form.setErrors({ ...form.errors, url: 'Something went wrong.' });\n      setLoading(false);\n      return onError?.(err);\n    };\n\n    const urlErrMsg = `Invalid Url: does not match supplier ${orderInstance.supplier}`;\n\n    switch (supplier) {\n      case 'fnova':\n        if (!url.includes('fashionnova')) return form.setErrors({ url: urlErrMsg });\n\n        setLoading(true);\n        return orderInstance.postFnova(url).then(handleSuccess).catch(handleError);\n      case 'plt':\n        if (!url.includes('prettylittlething')) return form.setErrors({ url: urlErrMsg });\n\n        setLoading(true);\n        return orderInstance.postPlt(url).then(handleSuccess).catch(handleError);\n\n      default:\n        if (!url.includes(supplier)) return form.setErrors({ url: urlErrMsg });\n\n        setLoading(true);\n        return orderInstance.postShein(url).then(handleSuccess).catch(handleError);\n    }\n  };\n\n  return (\n    <Form context={form} onSubmit={handleSubmit} className=\"supplier-product-add-form\">\n      <Form.Field error={form.errors.url}>\n        <div className=\"d-flex flex-column flex-md-row align-items-center\">\n          <Form.Text\n            required\n            autoFocus\n            name=\"url\"\n            type=\"url\"\n            placeholder={`Add ${supplier} product source url ...`}\n            className=\"me-1\"\n            disabled={isLoading}\n          />\n\n          <div className=\"mt-1 mt-md-0\">\n            <Form.Submit value=\"Add product\" className=\"btn btn-primary-3\" disabled={isLoading} />\n          </div>\n        </div>\n      </Form.Field>\n\n      {isLoading && <div className=\"my-3\">Getting product data. Please wait ...</div>}\n    </Form>\n  );\n};\n\nconst u = 'https://www.fashionnova.com/products/jessa-denim-mini-dress-white';\nconst shein404 = 'https://us.shein.com/Clear-Acrylic-Frame-Glasses-p-1792787-cat-2842.html';\nconst fnovavariant = 'https://www.fashionnova.com/products/kayla-seamless-bandeau-olive?variant=12191869272188';\n","import * as React from 'react';\nimport { useParams } from 'react-router-dom';\n\nimport './supplier-product-list.scss';\n\nimport Staff from '@miq/staffjs';\nimport { Button, HorizontalScrollGridLayout, Icons, Pagination, ViewSection } from '@miq/componentjs';\n\nimport { StaffProduct } from '../Product';\nimport { useProductListRequest } from '../Product';\nimport { ProductForm, ProductQuickUpdateForm } from '../Product/forms';\nimport { ProductDeleteButton } from '../Product/components';\nimport { CategoryChoicesType, TProduct, TProductStageData } from '../types';\n\nimport { SupplierOrder } from './models';\nimport Form, { useForm } from '@miq/formjs';\n\nexport type SupplierProductListProps = {\n  orderInstance: ReturnType<typeof SupplierOrder>;\n  categories: CategoryChoicesType;\n  stages: TProductStageData[];\n  refreshOrder: () => Promise<null | undefined>;\n};\n\nexport default function SupplierProductList({\n  orderInstance,\n  refreshOrder,\n  categories,\n  stages,\n}: SupplierProductListProps) {\n  const { ordSlug } = useParams();\n  const { res = { data: { results: [] } }, refresh } = useProductListRequest(ordSlug);\n  const [selected, setSelected] = React.useState<string[]>([]);\n  const form = useForm({ category: '' });\n\n  const updateCategories = () => {\n    const { category } = form.values;\n    if (!category) return;\n\n    orderInstance\n      .updateCategories(category, selected)\n      .then((r) => {\n        refresh();\n        form.setValue('category', '');\n      })\n      .catch((err) => {});\n  };\n\n  const isSelected = selected.length !== 0;\n\n  return (\n    <Staff.Section\n      actions={\n        isSelected && (\n          <>\n            <span className=\"p-1\" onClick={() => setSelected([])} style={{ cursor: 'pointer' }}>\n              [x]\n            </span>\n          </>\n        )\n      }\n      footer={<Pagination {...res.data} component={Staff.NavLink} to />}\n      className=\"supplier-p-list\"\n    >\n      {res.data?.results.length ? (\n        <>\n          {isSelected && (\n            <div className=\"bg-white p-1\" style={{ position: 'sticky', top: 0, zIndex: 1000 }}>\n              <Form context={form}>\n                <div className=\"d-flex\">\n                  {categories && <ProductForm.CategoryField categories={categories} error={form.errors.category} />}\n                </div>\n              </Form>\n\n              <Button className=\"btn-primary\" onClick={updateCategories}>\n                Publier\n              </Button>\n            </div>\n          )}\n\n          {res.data.results.map((item: TProduct) => (\n            <SupplierProductListItem\n              {...{ orderInstance, categories, selected, setSelected, refreshOrder, stages }}\n              instance={StaffProduct(item)}\n              key={item.slug}\n            />\n          ))}\n        </>\n      ) : null}\n    </Staff.Section>\n  );\n}\n\ntype TSPListItemProps = {\n  orderInstance: ReturnType<typeof SupplierOrder>;\n  categories: CategoryChoicesType;\n  stages: TProductStageData[];\n  instance: ReturnType<typeof StaffProduct>;\n  selected: string[];\n  setSelected: React.Dispatch<React.SetStateAction<string[]>>;\n  refreshOrder: () => Promise<null | undefined>;\n};\n\nconst ItemCheckBox = ({ instance, selected, setSelected }: TSPListItemProps) => (\n  <input\n    type=\"checkbox\"\n    name=\"selected\"\n    className=\"me-2\"\n    checked={selected.includes(instance.slug!)}\n    onChange={({ target }) => {\n      const { checked } = target;\n      if (checked) setSelected([...selected, instance.slug!]);\n      else setSelected((selected) => selected.filter((i) => i !== instance.slug));\n    }}\n  />\n);\n\nconst SupplierProductListItem = (props: TSPListItemProps) => {\n  // Used for deleted items\n  const [hide, setHide] = React.useState<boolean>(false);\n\n  const { instance, categories } = props;\n\n  const [open, setOpen] = React.useState(false);\n\n  if (hide) return null;\n\n  const { supplier_item, stage } = instance;\n  const { orderInstance, stages = [] } = props;\n\n  const stageData = stages?.find((i) => i.value === stage);\n\n  return (\n    <ViewSection\n      border\n      title={\n        <div className=\"d-flex align-items-center\">\n          <ItemCheckBox {...props} />\n\n          <div style={{ width: 48, height: 48 }} onClick={() => setOpen(!open)}>\n            <Staff.Img.Square slug=\"slug\" src=\"src\" {...instance.cover_data} className=\"rounded\" />\n          </div>\n\n          <div className=\"ms-1\">\n            <div className=\"text-ellipsis\">{instance.name}</div>\n            <div className=\"text-sm\">\n              {instance.is_on_sale && instance.sale_price && (\n                <span className=\"\">\n                  {instance.sale_price} {`<-`}{' '}\n                </span>\n              )}\n              <span className=\"\">{instance.retail_price}</span>\n              <span className=\"text-muted\">\n                {' | '}\n                {supplier_item.cost} {orderInstance.currency}\n              </span>\n              <span className=\"\">\n                {' - '}\n                {instance.category_data?.name || \"' - '\"}\n                <span className=\"text-muted\">\n                  {' | '}\n                  {supplier_item.category}\n                </span>\n              </span>\n              {stageData && (\n                <span className=\"text-muted\">\n                  {' - '}\n                  {stageData.label}\n                </span>\n              )}\n\n              <a className=\"btn ms-1\" href=\"\" target=\"_blank\" rel=\"noopener noreferrer\">{`↗️`}</a>\n            </div>\n          </div>\n        </div>\n      }\n      actions={\n        <div className=\"d-flex\">\n          <ProductDeleteButton\n            instance={instance}\n            onSuccess={() => {\n              setHide(true);\n              props?.refreshOrder?.();\n            }}\n            className=\"me-2\"\n          />\n          <Staff.Link to={`./${instance.slug}/`} className=\"btn btn-primary-3\">\n            <Icons.PencilSquare />\n          </Staff.Link>\n        </div>\n      }\n      className=\"suppier-p-list-item bg-white\"\n    >\n      {open && (\n        <HorizontalScrollGridLayout className=\"form-tab no-scroll-bar gap-2\">\n          <ProductQuickUpdateForm instance={instance} categories={categories} orderSlug={orderInstance?.slug} />\n\n          <div className=\"\">\n            <div className=\"mb-1\">\n              {`${supplier_item.item_id ? <span className=\"\">Item ID: {supplier_item.item_id}</span> : ''}`}\n            </div>\n            <ul>\n              {supplier_item.category && (\n                <li className=\"mb-1\">\n                  <div className=\"text-sm\">Supplier Category</div>\n                  <div className=\"text-muted\">{supplier_item.category}</div>\n                </li>\n              )}\n              <li className=\"mb-1\">\n                <div className=\"text-sm\">FOB Cost({orderInstance.currency})</div>\n                <div className=\"text-muted\">{supplier_item.cost}</div>\n              </li>\n\n              {supplier_item.url && (\n                <li className=\"\">\n                  <a href={supplier_item.url} target=\"_blank\" className=\"text-underline\" rel=\"noopener noreferrer\">\n                    View supplier product page\n                  </a>\n                </li>\n              )}\n            </ul>\n          </div>\n        </HorizontalScrollGridLayout>\n      )}\n    </ViewSection>\n  );\n};\n","import * as React from 'react';\n\nimport Form, { useForm } from '@miq/formjs';\nimport { useRequest } from '@miq/hookjs';\nimport Staff from '@miq/staffjs';\nimport { Response } from '@miq/utiljs';\nimport { useParams } from 'react-router-dom';\nimport { SupplierOrder } from './models';\nimport { Icons, Loading, ViewSection, ButtonProps } from '@miq/componentjs';\nimport { SupplierOrderForm, SupplierOrderProductAddForm, SupplierOrderUpdateForm } from './forms';\nimport SupplierProductList from './SupplierProductList';\nimport { TSupplierOrder } from '../types';\nimport { SharedDataCtx } from '@miq/contextjs';\nimport { ProductListFilterForm } from '../Product/forms';\n\nconst formFields: { [key: string]: any } = {\n  name: '',\n  order_id: '',\n  stage: '',\n  currency: 'USD',\n  supplier: '',\n  is_paid: false,\n  total_cost: '',\n};\n\nconst mapDataToValues = (data: any = {}): TSupplierOrder => {\n  const values: any = {};\n  Object.keys(formFields).forEach((k) => {\n    values[k] = data[`${k}`] || formFields[`${k}`];\n  });\n  return values;\n};\n\nexport default function OrderUpdateView() {\n  const { ordSlug } = useParams();\n\n  const form = useForm<TSupplierOrder>(mapDataToValues());\n\n  const { suppliers, currencies } = React.useContext(SharedDataCtx) as any;\n\n  const { setValues } = form;\n  const {\n    res,\n    loading,\n    setLoading,\n    setRes: setOrder,\n    refresh: refreshOrder,\n  } = useRequest(() => SupplierOrder({ slug: ordSlug }).retrieve(), {\n    refreshDeps: [ordSlug],\n    onSuccess: (res) => setValues(mapDataToValues(res.data)),\n  });\n\n  const r = new Response(res);\n  if (!r.isSuccess) return null;\n\n  const instance = SupplierOrder(r.data);\n\n  // console.log(r.data.stages);\n\n  if (!instance.supplier || !instance.currency)\n    return (\n      <Staff.View title=\"Modifier une commande\" back=\"/staff/store/orders/\">\n        <Staff.Section className=\"d-flex justify-content-center mt-4\">\n          <SupplierOrderUpdateForm\n            context={form}\n            instance={instance}\n            fields={['name', 'currency', 'supplier']}\n            onSuccess={(res) => setOrder(res)}\n          >\n            <SupplierOrderForm.NameField required label=\"Nom\" error={form.errors.currency} />\n            <SupplierOrderForm.SupplierField\n              required\n              label=\"Supplier\"\n              suppliers={suppliers}\n              error={form.errors.supplier}\n            />\n            <SupplierOrderForm.CurrencyField\n              required\n              label=\"Supplier Currency\"\n              currencies={currencies}\n              error={form.errors.currency}\n            />\n\n            <Form.Submit value=\"Sauvegarder\" className=\"btn-primary-3\" />\n          </SupplierOrderUpdateForm>\n        </Staff.Section>\n      </Staff.View>\n    );\n\n  return (\n    <Staff.View\n      title={form.values.name}\n      back=\"/staff/store/orders/\"\n      actions={\n        <Staff.NavLink to=\"settings/\">\n          <Icons.Gear />\n        </Staff.NavLink>\n      }\n    >\n      <div className=\"d-flex flex-column flex-xl-row\">\n        <div className=\"w-100\">\n          <Staff.Section header={<Header {...{ instance, setLoading, setOrder, categories: r?.data?.categories }} />}>\n            {loading ? (\n              <Loading icon />\n            ) : (\n              <SupplierProductList\n                orderInstance={instance}\n                categories={r?.data?.categories}\n                stages={r?.data?.stages}\n                refreshOrder={refreshOrder}\n              />\n            )}\n          </Staff.Section>\n        </div>\n\n        <div className=\"min-w-35 ps-md-1\">\n          <DetailDisplaySection {...{ loading, instance }} />\n        </div>\n      </div>\n    </Staff.View>\n  );\n}\n\nconst DetailDisplaySection = ({\n  loading,\n  instance,\n}: {\n  loading: boolean;\n  instance: ReturnType<typeof SupplierOrder>;\n}) => {\n  return (\n    <Staff.Section\n      border\n      className=\"bg-white mb-1\"\n      title={`Order Details${!loading && ` (${instance.products?.length})`}`}\n      text={`Supplier: ${instance.supplier} | Currency: ${instance.currency}`}\n    >\n      <div className=\"mb-2\">\n        Categories\n        <ul>\n          {instance?.by_categories\n            ?.filter((i) => i?.category__name)\n            ?.map(({ category__name: name, ...i }) => (\n              <DetailDisplaySection.Li title={name} key={name}>\n                : {i.count}\n              </DetailDisplaySection.Li>\n            ))}\n        </ul>\n      </div>\n\n      <ul className=\"mb-3\">\n        <DetailDisplaySection.Li title=\"Average cost: \">\n          {instance.avg_cost} {instance.currency}\n        </DetailDisplaySection.Li>\n        <DetailDisplaySection.Li title=\"Total cost: \">\n          {`${instance.total_cost || instance?.items_cost?.amountWithSymbol} ${instance.currency}`}\n        </DetailDisplaySection.Li>\n        <DetailDisplaySection.Li title=\"Est. revenue: \">{instance?.items_revenue?.amount}</DetailDisplaySection.Li>\n      </ul>\n    </Staff.Section>\n  );\n};\n\nDetailDisplaySection.Li = ({ children, title }: { children: React.ReactNode; title: string }) => (\n  <li>\n    <span className=\"mr-2 text-muted\">{title}</span>\n    {children}\n  </li>\n);\n\nconst Header = ({ instance, setLoading, setOrder, categories }: any) => {\n  const [tab, setTab] = React.useState<'filter' | 'add'>('filter');\n\n  const render = () => {\n    switch (tab) {\n      case 'add':\n        return (\n          <SupplierOrderProductAddForm\n            orderInstance={instance}\n            onSuccess={(res) => {\n              setLoading();\n              setOrder(res);\n            }}\n          />\n        );\n\n      default:\n        return <ProductListFilterForm categories={categories} />;\n    }\n  };\n\n  return (\n    <Staff.Section\n      border\n      title={\n        <div>\n          <HeaderButton tab={tab} onClick={() => setTab('filter')} active={tab === 'filter'}>\n            <Icons.Funnel />\n          </HeaderButton>\n        </div>\n      }\n      actions={\n        <HeaderButton tab={tab} onClick={() => setTab('add')} active={tab === 'add'}>\n          <Icons.Plus />\n        </HeaderButton>\n      }\n      className=\"bg-white mb-1\"\n    >\n      <div className=\"\" style={{ top: 0, position: 'sticky' }}>\n        {render()}\n      </div>\n    </Staff.Section>\n  );\n};\nconst HeaderButton = ({\n  children,\n  tab,\n  active,\n  ...props\n}: ButtonProps & { tab: string; children: React.ReactNode; active: boolean }) => {\n  return (\n    <Staff.Button\n      className=\"btn-primary-3\"\n      style={{ border: active ? '1px solid var(--blue-600)' : undefined }}\n      {...props}\n    >\n      {children}\n    </Staff.Button>\n  );\n};\n\nexport const OrderSettingUpdateView = () => {\n  const { ordSlug } = useParams();\n  const form = useForm<TSupplierOrder>(mapDataToValues());\n\n  const { setValues } = form;\n  const {\n    res,\n    // setRes: setOrder,\n    // refresh: refreshOrder,\n  } = useRequest(() => SupplierOrder({ slug: ordSlug }).retrieve(), {\n    refreshDeps: [ordSlug],\n    onSuccess: (res) => setValues(mapDataToValues(res.data)),\n  });\n\n  const r = new Response(res);\n  if (!r.isSuccess) return null;\n\n  const instance = SupplierOrder(r.data);\n\n  return (\n    <Staff.View title={`${instance.name} Order Update`} back={`/staff/store/orders/${ordSlug}/`}>\n      <SupplierOrderUpdateForm\n        {...{ instance, context: form, fields: ['is_paid', 'order_id', 'total_cost', 'stage'] }}\n        // onSuccess={(r) => setOrder({ ...res, ...r })}\n      >\n        <ViewSection border footer={<Form.Submit value=\"Sauvegarder\" className=\"btn-primary-3\" />}>\n          <SupplierOrderForm.IsPaidField error={form.errors.is_paid} className=\"my-2\" />\n          {form.values.is_paid && (\n            <>\n              <SupplierOrderForm.OrderIDField required={form.values.is_paid} error={form.errors.order_id} />\n              <SupplierOrderForm.TotalCostField required={form.values.is_paid} error={form.errors.total_cost} />\n            </>\n          )}\n\n          <SupplierOrderForm.StageSelectField {...{ stages: r.data.stages }} />\n        </ViewSection>\n      </SupplierOrderUpdateForm>\n    </Staff.View>\n  );\n};\n","import * as React from 'react';\n\nimport { Button, ConfirmButton, Icons } from '@miq/componentjs';\nimport { IFormUpdateProps } from '@miq/formjs';\nimport { getCN } from '@miq/utiljs';\nimport { SupplierOrder, TSupplierOrderInstance } from './models';\nimport Staff from '@miq/staffjs';\n\ntype TSupplierOrderDeleteButtonProps = Omit<IFormUpdateProps<TSupplierOrderInstance>, 'context'> & {\n  label?: string;\n};\n\nexport const SupplierOrderDeleteButton: React.FC<TSupplierOrderDeleteButtonProps> = (props) => {\n  const { instance, onSuccess, onError, label } = props;\n\n  const handleDelete = (setOpen: any) => {\n    instance\n      .destroy()\n      .then((res) => {\n        setOpen?.(false);\n        onSuccess?.(res);\n        // emitter.destroy({ slug: instance.slug });\n      })\n      .catch((err) => onError?.(err));\n  };\n\n  return (\n    <ConfirmButton\n      renderHeader={() => <div>Supprimer '{instance.name}'</div>}\n      renderFooter={({ setOpen }) => (\n        <div className=\"d-flex justify-content-between align-items-center\">\n          <Button onClick={() => setOpen(false)}>Annuler</Button>\n\n          <Button onClick={() => handleDelete(setOpen)} className=\"btn-danger\">\n            Supprimer\n          </Button>\n        </div>\n      )}\n      render={() => <div className=\"p-3\">Are you sure you want to delete this</div>}\n      className={getCN(['s-order-delete-button btn-danger-3', props.className])}\n    >\n      <Icons.Trash />\n      {label && <span className=\"label\">{label}</span>}\n    </ConfirmButton>\n  );\n};\n\nexport const SupplierOrderAddButton = (props: { onSuccess: (p?: any) => void; label?: string; className?: string }) => {\n  const { label = 'Add order' } = props;\n\n  return (\n    <Staff.Button\n      onClick={() => {\n        SupplierOrder()\n          .create({})\n          .then((r) => props?.onSuccess?.(r))\n          .catch((err: any) => {\n            // console.log(err);\n          });\n      }}\n      className={props.className}\n      requiredPerms={['store.add_supplierorder']}\n      title={'Add a new order'}\n    >\n      {label}\n    </Staff.Button>\n  );\n};\n\nexport const SupplierPrice = (props: any) => {\n  const { amountWithSymbol } = props;\n  return <div className=\"miq-price\">{amountWithSymbol}</div>;\n};\n","import * as React from 'react';\nimport { useNavigate, useSearchParams } from 'react-router-dom';\n\nimport Staff from '@miq/staffjs';\nimport { useRequest } from '@miq/hookjs';\nimport { getCN, Response } from '@miq/utiljs';\nimport { Pagination, Table } from '@miq/componentjs';\n\nimport { TSupplierOrder } from '../types';\n\nimport { SupplierOrder } from './models';\nimport { SupplierOrderAddButton, SupplierOrderDeleteButton, SupplierPrice } from './components';\n\nconst SupplierOrderRow = ({ item, removeItem }: { item: TSupplierOrder; removeItem: (payload: any) => void }) => {\n  const { name = 'New order', slug, is_paid, items, items_revenue, supplier } = item || {};\n\n  return (\n    <Table.Tr>\n      <Table.Td>\n        <Staff.Link to={`${slug}/`} className=\"\">\n          <div className={getCN(['fw-bold text-ellipsis', is_paid && 'text-line-through'])}>{name}</div>\n        </Staff.Link>\n        <span className=\"text-sm\">{item.avg_cost}</span>\n      </Table.Td>\n\n      <Table.Td>{items?.length}</Table.Td>\n\n      <Table.Td>{supplier}</Table.Td>\n\n      <Table.Td>\n        <SupplierPrice {...item.total_cost_data} />\n      </Table.Td>\n      <Table.Td>\n        <SupplierPrice {...items_revenue} />\n      </Table.Td>\n\n      <Table.Td>\n        <SupplierOrderDeleteButton instance={SupplierOrder(item)} onSuccess={() => removeItem?.({ slug })} />\n      </Table.Td>\n    </Table.Tr>\n  );\n};\n\nexport default function SupplierOrderIndexView() {\n  const navigate = useNavigate();\n  const [params] = useSearchParams();\n  const page = params.get('page');\n\n  const { res, removeItem } = useRequest(() => SupplierOrder().list({ params: { page } }), { refreshDeps: [page] });\n\n  const r = new Response(res);\n  if (!r.isSuccess) return null;\n\n  const { items } = r;\n\n  return (\n    <Staff.View\n      title=\"Supplier Orders\"\n      back=\"/staff/store/\"\n      actions={\n        <SupplierOrderAddButton onSuccess={({ data }: any) => navigate(`${data.slug}/`)} className=\"btn-primary-3\" />\n      }\n      requiredPerms={['store.view_supplierorder']}\n    >\n      {Boolean(items.length) ? (\n        <Staff.Section footer={<Pagination {...r.data} component={Staff.Link} to />}>\n          <Table\n            border\n            items={items}\n            header={\n              <>\n                <Table.Th />\n                <Table.Th>Items</Table.Th>\n                <Table.Th>Supplier</Table.Th>\n\n                <Table.Th>Total Cost</Table.Th>\n                <Table.Th>Est. Revenue</Table.Th>\n                <Table.Th />\n              </>\n            }\n            renderItem={(item) => <SupplierOrderRow {...{ item, removeItem }} key={item.slug} />}\n            className=\"w-100\"\n          />\n        </Staff.Section>\n      ) : (\n        <div className=\"p-4\">\n          <div className=\"text-center\">\n            <div className=\"mb-4 text-md\">Add a supplier order to get started.</div>\n            <SupplierOrderAddButton\n              onSuccess={({ data }: any) => navigate(`${data.slug}/`)}\n              label=\"Add an order\"\n              className=\"btn-md btn-primary fw-bold\"\n            />\n          </div>\n        </div>\n      )}\n    </Staff.View>\n  );\n}\n\n// EXPORTS\n\nexport * from './models';\n","import { StaffModel, StaffService } from '@miq/staffjs';\nimport { TSupplierOrder } from '../types';\n\nconst timeout = 10000;\n\nclass SupplierOrderService extends StaffService<TSupplierOrder> {\n  updateCategories(category: string, slugs: string[]) {\n    return this.post(`${this._path}batch/`, { slugs, category }, { timeout });\n  }\n\n  postFnova(url: string) {\n    return this.post(`${this._path}fnova/`, { url }, { timeout });\n  }\n  postPlt(url: string) {\n    return this.post(`${this._path}plt/`, { url }, { timeout });\n  }\n\n  postShein(url: string) {\n    return this.post(`${this._path}shein/`, { url }, { timeout });\n  }\n\n  destroyItem(prodSlug: string) {\n    return this.delete(`${this._path}item/${prodSlug}/`, { timeout });\n  }\n\n  updateItem(prodSlug: string, values: Record<string, any>) {\n    return this.post(`${this._path}item/${prodSlug}/`, { ...values }, { timeout });\n  }\n}\n\nexport const SupplierOrder = (data: TSupplierOrder = {}) =>\n  StaffModel<TSupplierOrder, SupplierOrderService>(data, 'supplierorders', SupplierOrderService);\n\nexport type TSupplierOrderInstance = ReturnType<typeof SupplierOrder>;\n\nexport type SupplierType = {\n  slug?: string;\n  name_choices: any;\n  created: any;\n  updated: any;\n};\n","import React from 'react';\nimport { Button, ButtonProps, Icons, ToastEmitter } from '@miq/componentjs';\n\n// https://www.bennadel.com/blog/3961-having-fun-with-the-horizontal-usage-of-position-sticky-in-angular-11-0-5.htm\n\nimport './component.scss';\n\nimport { StaffCategory } from './Category';\nimport { StaffProduct } from './Product';\nimport { PriceDataType, TProduct } from './types';\nimport { getCN } from '@miq/utiljs';\n\ntype InstanceType = ReturnType<typeof StaffProduct> | ReturnType<typeof StaffCategory>;\n\ninterface UpdateButtonProps extends ButtonProps {\n  instance: InstanceType;\n  onSuccess: (r: any) => void;\n}\n\nexport const PublishButton: React.FC<UpdateButtonProps> = (props) => {\n  const { instance, onClick, onSuccess, onError, ...rest } = props;\n\n  const handleClick = () => {\n    if (instance.is_published) return null;\n    return instance\n      .publish()\n      .then((res: any) => onSuccess?.(res))\n      .catch((err: any) => onError?.(err));\n  };\n\n  return <Button onClick={handleClick} className=\"btn-primary btn-md\" {...rest} disabled={instance.is_published} />;\n};\n\nexport const UnPublishButton: React.FC<UpdateButtonProps> = (props) => {\n  const { instance, onClick, onSuccess, onError, ...rest } = props;\n\n  const handleClick = () => {\n    if (!instance.is_published) return null;\n    return instance\n      .unpublish()\n      .then((res: any) => onSuccess?.(res))\n      .catch((err: any) => onError?.(err));\n  };\n\n  return <Button className=\"btn-danger btn-md\" onClick={handleClick} {...rest} disabled={!instance.is_published} />;\n};\n\n//#region ================================== COMPONENTS =============================================================\n\nexport type PriceDisplayProps = PriceDataType & {\n  className?: string;\n  sale?: string | boolean;\n  lineThrough?: string | boolean;\n};\n\nexport const PriceDisplay = ({ amountWithSymbol, className, sale, lineThrough }: PriceDisplayProps) => (\n  <div className={getCN(['miq-price-display', sale && 'text-danger', lineThrough && 'text-line-through', className])}>\n    {amountWithSymbol}\n  </div>\n);\n\nexport const ProductPriceDisplay = ({\n  retail_price_data,\n  is_on_sale,\n  sale_price_data,\n  ...props\n}: TProduct & { className?: string; style?: any }) => {\n  if (!retail_price_data) return null;\n\n  const isSale = is_on_sale && sale_price_data?.amountWithSymbol != null;\n\n  return (\n    <div className={getCN(['miq-product-price-display', props.className])} style={props.style}>\n      {isSale && <PriceDisplay sale {...sale_price_data} className=\"miq-sale-price me-1\" />}\n      <PriceDisplay {...retail_price_data} lineThrough={isSale} className=\"miq-retail-price\" />\n    </div>\n  );\n};\n\nexport const ProductSupplierData = (props: { instance: InstanceType }) => {\n  // const { instance } = props;\n\n  return (\n    <div className=\"supplier-data\">\n      <div className=\"item\">\n        <span className=\"title\">Supplier</span>\n        {/* <span className=\"value\">{instance.supplier_name}</span> */}\n      </div>\n      <div className=\"item\">\n        <span className=\"title\">Item ID</span>\n        {/* <span className=\"value\">{instance.supplier_item_id}</span> */}\n      </div>\n      <div className=\"item\">\n        <span className=\"title\">Category</span>\n        {/* <span className=\"value\">{instance.supplier_item_category}</span> */}\n      </div>\n      <div className=\"item\">\n        <span className=\"title\"> Item cost</span>\n        <span className=\"value\">{/* {instance.supplier_item_cost} ({instance.supplier_item_cost_currency}) */}</span>\n      </div>\n    </div>\n  );\n};\n\nexport const PublishedIcon = ({ show, ...props }: React.ComponentPropsWithoutRef<'svg'> & { show?: boolean }) =>\n  show ? <Icons.CheckCircle {...props} className=\"published-icon\" /> : null;\n\n//#endregion ===============================================================================================\n\nexport const toast = new ToastEmitter();\n\n{\n  /* <Toaster instance={t}></Toaster> */\n}\n// <button\n//   onClick={() => {\n//     t.info({ message: 'Hello', autoClose: true });\n//   }}\n// >\n//   Click me\n// </button>\n","import * as React from 'react';\nimport EventEmitter from 'events';\n\n// interface IEventStateSyncProps {\n//   children?: React.ReactNode;\n// }\n\nclass CrudEmitter extends EventEmitter {\n  prefix?: string;\n\n  constructor(...args: any) {\n    const { prefix = '', ...rest } = args;\n    super(rest);\n\n    this.prefix = prefix;\n  }\n\n  create(payload: any) {\n    this.emit(`${this.prefix}-create`, payload);\n  }\n  retrieve(payload: any) {\n    this.emit(`${this.prefix}-retrieve`, payload);\n  }\n  list(payload: any) {\n    this.emit(`${this.prefix}-list`, payload);\n  }\n  update(payload: any) {\n    this.emit(`${this.prefix}-update`, payload);\n  }\n  destroy(payload: any) {\n    this.emit(`${this.prefix}-destroy`, payload);\n  }\n}\n\nexport const emitter = new CrudEmitter();\n\ntype FN<T> = T & { [key: string]: any; slug: string };\n\ntype CallBacksType<T = void> = {\n  onList?: () => void;\n  onRetrieve?: () => void;\n  onCreate?: (payload: FN<T>) => void;\n  onUpdate?: (payload: FN<T>) => void;\n  onDestroy?: (payload: FN<T>) => void;\n};\n\nexport function useCrudEmitter(callbacks: CallBacksType, match?: (p: any) => boolean) {\n  React.useEffect(() => {\n    emitter.on('-create', (payload: any) => {\n      if (match && !match(payload)) return;\n\n      callbacks.onCreate?.(payload);\n    });\n\n    emitter.on('-update', (payload: any) => {\n      if (match && !match(payload)) return;\n\n      callbacks.onUpdate?.(payload);\n    });\n\n    emitter.on('-destroy', (payload: any) => {\n      if (match && !match(payload)) return;\n\n      callbacks.onDestroy?.(payload);\n    });\n  }, []);\n}\n","import { ImgType } from '@miq/componentjs';\nimport { TextChoicesType } from '@miq/formjs';\nimport { WithMetaFields } from '@miq/utiljs';\n\nexport type PriceDataType = { currency: string; amount: string; amountWithSymbol: string };\nexport type PriceType = number | PriceDataType;\n\nexport type TProduct = WithMetaFields<{\n  slug?: string;\n\n  category?: string;\n  category_data?: TCategory;\n  name?: string;\n\n  cover?: string;\n  cover_data?: ImgType;\n  images?: string[];\n  images_data?: ImgType[];\n\n  readonly name_truncated?: string;\n  description?: string;\n  retail_price?: PriceType;\n  retail_price_data?: PriceDataType;\n  is_on_sale?: boolean;\n  sale_price?: PriceType;\n  sale_price_data?: PriceDataType;\n  is_pre_sale?: boolean;\n  is_pre_sale_text?: string;\n  is_pre_sale_dt?: string | Date;\n  url?: string;\n\n  has_attributes?: boolean;\n  attributes?: any[];\n  sizes?: any[];\n  size_count: number | undefined;\n\n  is_published?: boolean;\n  dt_published?: string | Date;\n\n  supplier_item: SupplierItemType;\n  position?: number;\n  color_group_pk?: string;\n  stage?: string;\n  is_oos: boolean | undefined;\n\n  readonly detail_path?: string;\n\n  created?: string | Date;\n  updated?: string | Date;\n}>;\n\nexport type CategoryChoicesType = {\n  items: TextChoicesType;\n};\n\nexport type TProductStageData = { name: string; label: string; value: string };\n\nexport type TCategory = WithMetaFields<{\n  slug?: string;\n  supplier_item_id?: string;\n  name?: string;\n  description?: string;\n  cover?: ImgType;\n  position?: number;\n\n  is_published?: boolean;\n  dt_published?: string | Date;\n\n  cover_data?: ImgType;\n  products_count?: number;\n  published_count?: number;\n  draft_count?: number;\n  readonly detail_path?: string;\n\n  created?: string | Date;\n  updated?: string | Date;\n}>;\n\nexport type SupplierItemType = {\n  slug?: string;\n  item_id?: string;\n  item_sn?: string;\n  category?: string;\n  url?: string;\n  cost?: number;\n  created?: string;\n  updated?: string;\n};\n\nexport enum SupplierName {\n  SHEIN = 'SHEIN',\n  PLT = 'PLT',\n  FNOVA = 'FNOVA',\n}\n\nexport type TSupplierOrder = {\n  slug?: string;\n  name?: string;\n  supplier?: string;\n  order_id?: string;\n  products?: TProduct[];\n  items?: any[];\n  items_cost?: number;\n  items_revenue?: number;\n  avg_cost?: number;\n  by_categories?: { category__name: string; count: number }[] | undefined;\n\n  currency?: string;\n  is_paid?: boolean;\n  is_paid_dt?: string;\n  is_fulfilled_dt?: string;\n  total_cost?: number;\n  total_cost_data?: PriceDataType;\n};\n\nexport type TProductSize = {\n  slug?: string;\n  name?: string;\n  code?: string;\n  quantity?: number;\n};\n","import * as React from 'react';\nimport { Routes, Route } from 'react-router-dom';\n\nimport { SharedDataCtx, SharedDataState } from '@miq/contextjs';\nimport { OrderSettingUpdateView } from './Supplier/OrderUpdateView';\n\nconst ShopStaffIndexView = React.lazy(() => import('./IndexView'));\n\nconst SupplierOrderIndexView = React.lazy(() => import('./Supplier'));\nconst SupplierOrderProductUpdateView = React.lazy(() => import('./Supplier/OrderProductUpdateView'));\nconst SupplierOrderUpdateView = React.lazy(() => import('./Supplier/OrderUpdateView'));\n\nconst CategoryIndexView = React.lazy(() => import('./Category'));\nconst CategoryUpdateView = React.lazy(() => import('./Category/UpdateView'));\n\nconst ProductIndexView = React.lazy(() => import('./Product/IndexView'));\nconst ShopSettingUpdateView = React.lazy(() => import('./Setting'));\n\nexport default function ShopStaffRoutes() {\n  const { shopy_settings } = React.useContext(SharedDataCtx) as SharedDataState & { shopy_settings: any | null };\n\n  if (!shopy_settings) return null;\n\n  return (\n    <Routes>\n      <Route\n        path=\"orders/*\"\n        element={\n          <Routes>\n            <Route path={`:ordSlug/:prodSlug/`} element={<SupplierOrderProductUpdateView />} />\n            <Route path={`:ordSlug/settings/`} element={<OrderSettingUpdateView />} />\n            <Route path={`:ordSlug/`} element={<SupplierOrderUpdateView />} />\n            <Route path=\"/*\" element={<SupplierOrderIndexView />} />\n          </Routes>\n        }\n      />\n\n      <Route\n        path=\"products/*\"\n        element={\n          <Routes>\n            <Route path=\"/*\" element={<ProductIndexView />} />\n          </Routes>\n        }\n      />\n\n      <Route\n        path=\"categories/*\"\n        element={\n          <Routes>\n            <Route path=\":catSlug/\" element={<CategoryUpdateView />} />\n            <Route index element={<CategoryIndexView />} />\n          </Routes>\n        }\n      />\n\n      <Route path=\"settings/\" element={<ShopSettingUpdateView />} />\n      <Route path=\"/\" element={<ShopStaffIndexView />} />\n    </Routes>\n  );\n}\n\nexport * from './types';\n\nexport { useProductListRequest } from './Product/utils';\nexport { ProductListFilterForm } from './Product/forms';\nexport { ProductListItem } from './Product/components';\nexport { ProductPriceDisplay } from './components';\nexport { SizeQuantityField, SizeSelectField } from './Product/Size';\n"],"names":["withFormTextInput","Component","args","React","props","ref","ctx","FormCtx","isRequired","name","error","onDebounce","wait","rest","debounceOnSave","debounce","e","required","target","value","isFunction","errors","className","getCN","values","onChange","handleChange","current","input","FormTextInput","FormTextArea","SearchInput","id","inputClassName","placeholder","minLength","maxLength","type","FormPhoneInput","pattern","onKeyPress","test","key","preventDefault","FormTextAreaX","clearFocus","mirror","style","dangerouslySetInnerHTML","__html","FormSelectInput","children","nullValue","label","Option","FormCheckboxInput","toggleCheck","checked","createContext","FormProvider","Provider","useForm","defaultValues","useState","setValues","setErrors","context","useMemo","setValue","Object","keys","includes","setError","handleError","err","log","response","status","IS_DEV","console","newData","data","forEach","Array","isArray","length","message","hasErrors","join","FormLabel","Comp","FormError","FirstNameField","text","fieldCN","Field","LastNameField","NameField","EmailField","DescriptionField","MetaTitleField","MetaSlugField","MetaDescriptionField","checkbox","hasLabel","Form","Error","Comps","Label","Submit","Text","Inputs","TextArea","TextAreaX","Phone","Checkbox","Select","ACCEPT","StaffImgAddButton","uploadRef","instance","StaffImg","multiple","accept","func","onUpload","onSuccess","onSuccessMulti","onError","onErrorMulti","onClick","click","files","promises","from","splice","file","i","push","create","catch","Promise","all","then","responses","res","StaffImgUpdateButton","field","update","undefined","StaffImgDeleteButton","destroy","StaffImgViewSelect","GeneralSettingUpdateView","IndexSettingUpdateView","PagesSettingUpdateView","SettingLayout","path","element","title","back","requiredPerms","SettingLink","to","AccountStaffLayout","ProfileUpdateView","SharedDataCtx","user","updateUser","apps","employee","formInitData","first_name","last_name","gender","position","form","StaffUser","onSubmit","footer","email","SidebarLink","href","addForwardSlash","icon","fallback","viewProps","isLoaded","site","is_staff","links","sidebarCN","mainCN","mobileNavCN","sidebarLinks","filter","mobileLinks","mobile","routes","prefix","map","v","role","withHasPerms","perms","hasPerms","perm","footerCN","StaffNavLink","NavLink","StaffLink","Link","StaffButton","Button","StaffSection","ViewSection","Month","dt","Date","showWeekDay","short","monthWeeks","getMonthWeeks","WeekDays","w","Week","uuid","endDate","renderDay","weekDates","getWeekDates","d","Day","render","WeekDay","DateNum","wd","WEEKDAYS","find","index","getDay","long","isToday","getDate","DatePickerDay","activeDt","isActive","isSameDay","Calendar","currentDate","assign","DatePicker","onDateClick","getMonthLastDt","YearNum","getFullYear","PrevWeekButton","subDays","NextWeekButton","addDays","HitService","slugs","this","post","_endpoint","action","get","StaffService","Hit","StaffModel","CampaignService","useCampaignListRequest","useSearchParams","summary","useRequest","Campaign","list","params","refreshDeps","useHitListRequest","filterPath","q","searchParams","hitsByPath","hitList","hit","hitsByIp","ip","HitSummarySection","HitListItem","item","isDeleted","setDeleted","url","referrer","response_status","created","session","formatDateToStr","formatTime","debug","truncateStr","user_agent","HitDeleteButton","onDelete","HitList","items","entries","hits","reverse","isFb","Boolean","ua","toLowerCase","hitIsFb","isIg","hitIsIg","isBot","hitIsBot","source_id","match","slice","border","width","height","actions","HitListDeleteButton","slug","bodyCN","sort","a","b","handleDelete","renderHeader","renderFooter","setOpen","deleteSlugs","CampaignIndexView","r","Response","isSuccess","count","header","renderItem","SearchRoutes","CampaignRoutes","IndexView","AnalyticsRoutes","TabLink","Staff","Layout","View","StaffView","Section","Img","_superPropBase","object","property","prototype","hasOwnProperty","call","getPrototypeOf","_get","Reflect","receiver","base","desc","getOwnPropertyDescriptor","arguments","apply","StaffUserService","StaffImgService","alt_text","src","config","reject","fd","FormData","append","headers","HorizontalGallery","VerticalGallery","Mobile","Thumb","Square","Picture","Image","axios","API_ENDPOINT","DOMAIN","process","API","baseURL","timeout","withCredentials","endpoint","s","CrudService","TargetServiceClass","CustomerService","CartService","prodSlug","size","qty","_path","delete","Cart","CustomerSelect","customers","onItemClick","cust","phone","CustomerLNameField","setCustomers","onCustomerSelect","allowSuggestions","Customer","p","CustomerFNameField","CustomerEmailField","CustomerPhoneField","CustomerFields","LName","FName","Email","CustomerForm","fields","getCustomerFD","export","sharedProps","CustomerCard","CartCreateView","navigate","useNavigate","customer","setCustomer","headerCN","createCart","CartUpdateView","cartSlug","useParams","productRes","useProductListRequest","published","atc","retrieve","setRes","loading","cart","products","product","ProductAddForm","addItem","customer_data","quantity","sizes","cover_data","is_oos","category_data","size_count","minWidth","maxWidth","max","min","SalesIndexView","SalesStaffRoutes","SizeUpdateForm","productInstance","code","patchSize","SizeNameField","SizeCodeField","SizeQuantityField","SizeDeleteButton","commonSizes","xs","m","l","xl","formDefaultValues","SizeAddForm","postSize","SizeSelectField","toUpperCase","deleteSize","ProductImagesAddButton","resArray","imgsArray","images","ProductDeleteButton","emitter","ProductListItem","open","orderInstance","stages","StaffProduct","supplier_item","cost","stage","stageData","name_truncated","show","is_published","currency","category","rel","ProductCardItem","ProductCardList","itempath","ProductQuickUpdateForm","categories","orderSlug","description","retail_price","is_pre_sale","is_pre_sale_text","ProductUpdateForm","ProductForm","CategoryField","RetailPriceField","PresaleCheckboxField","PresaleTextField","SupplierOrder","destroyItem","isR","onWillSubmit","ProductCreateForm","cat","SalePriceField","step","OnSaleCheckboxField","OosCheckboxField","StageSelectField","ProductListFilterForm","setParams","setQ","method","set","Category","Published","Sale","PreSale","QuerySelectField","emptyLabel","QueryToggleField","inputId","htmlFor","StaffProductService","patch","sizeSlug","attrSlug","dt_published","page","presale","sale","supplier_order_slug","SupplierOrderUpdateForm","SupplierOrderForm","OrderIDField","IsPaidField","TotalCostField","CurrencyField","currencies","curr","SupplierField","suppliers","supplier","SupplierOrderProductAddForm","supplier_name","isLoading","setLoading","handleSuccess","urlErrMsg","postFnova","postPlt","postShein","autoFocus","disabled","SupplierProductList","refreshOrder","ordSlug","results","refresh","selected","setSelected","isSelected","cursor","component","top","zIndex","updateCategories","SupplierProductListItem","ItemCheckBox","hide","setHide","is_on_sale","sale_price","item_id","formFields","order_id","is_paid","total_cost","mapDataToValues","k","OrderUpdateView","setOrder","Header","DetailDisplaySection","by_categories","category__name","Li","avg_cost","items_cost","amountWithSymbol","items_revenue","amount","tab","setTab","HeaderButton","active","OrderSettingUpdateView","SupplierOrderDeleteButton","SupplierOrderAddButton","SupplierPrice","SupplierOrderRow","removeItem","total_cost_data","SupplierOrderIndexView","SupplierOrderService","PublishButton","publish","UnPublishButton","unpublish","PriceDisplay","lineThrough","ProductPriceDisplay","retail_price_data","sale_price_data","isSale","PublishedIcon","ToastEmitter","CrudEmitter","payload","emit","EventEmitter","useCrudEmitter","callbacks","on","onCreate","onUpdate","onDestroy","SupplierName","ShopStaffIndexView","SupplierOrderProductUpdateView","SupplierOrderUpdateView","CategoryIndexView","CategoryUpdateView","ProductIndexView","ShopSettingUpdateView","ShopStaffRoutes","shopy_settings"],"sourceRoot":""}
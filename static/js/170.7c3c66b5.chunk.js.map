{"version":3,"file":"static/js/170.7c3c66b5.chunk.js","mappings":"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","sources":["../../../../shopy/shopy-storejs/src/Product/components.tsx","../../../../shopy/shopy-storejs/src/Product/models.tsx","../../../../shopy/shopy-storejs/src/Product/utils.ts","../../../../shopy/shopy-storejs/src/Supplier/OrderProductUpdateView.tsx","../../../../shopy/shopy-storejs/src/components.tsx","../../../../shopy/shopy-storejs/src/events/index.tsx"],"sourcesContent":["import { NavLink, useSearchParams } from 'react-router-dom';\n\nimport { ImgAddButtonProps, StaffImg, StaffImgAddButton } from '@miq/staffjs';\nimport { IFormUpdateProps } from '@miq/formjs';\nimport { getCN } from '@miq/utiljs';\nimport { Button, ConfirmButton, Icons, ImgType } from '@miq/componentjs';\n\nimport { emitter } from '../events';\nimport { ProductType } from '../types';\nimport { ProductPriceDisplay, PublishedIcon } from '../components';\n\nimport { StaffProduct } from './models';\n\n//#region ============================== BUTTONS\n\ntype StaffProductInstanceProps = { instance: ReturnType<typeof StaffProduct> };\n\nexport type ProductImagesAddButtonProps = Omit<ImgAddButtonProps, 'onSuccessMulti' | 'onErrorMulti'> & {\n  productInstance: ReturnType<typeof StaffProduct>;\n};\n\n/**\n * Button component for adding images to a product\n * ```js\n * <ProductImagesAddButton productInstance={instance} onSuccess={(res: any) => onUpdate?.(res.data)} />\n * ```\n */\n\nexport const ProductImagesAddButton = (props: ProductImagesAddButtonProps) => {\n  const { productInstance, onSuccess, onError, ...rest } = props;\n  return (\n    <StaffImgAddButton\n      className=\"btn-primary-3\"\n      {...rest}\n      multiple={true}\n      onSuccessMulti={(resArray) => {\n        const imgsArray = resArray\n          .map(({ data }: any) => data?.slug)\n          .filter((slug) => !productInstance.images?.includes(slug));\n        return productInstance\n          .update({ images: [...productInstance.images!, ...imgsArray] })\n          .then((res) => onSuccess?.(res))\n          .catch((err) => onError?.(err));\n      }}\n    />\n  );\n};\n\nexport const ProductDeleteButton: React.FC<\n  Omit<IFormUpdateProps, 'context'> & StaffProductInstanceProps & { label?: string }\n> = (props) => {\n  const { instance, onSuccess, onError, label } = props;\n\n  const handleDelete = (setOpen: any) => {\n    instance\n      .destroy()\n      .then((res: any) => {\n        setOpen?.(false);\n        onSuccess?.(res);\n        emitter.destroy({ slug: instance.slug });\n      })\n      .catch((err: any) => onError?.(err));\n  };\n  return (\n    <ConfirmButton\n      renderHeader={() => <div>Supprimer '{instance.name}'</div>}\n      renderFooter={({ setOpen }) => (\n        <div className=\"d-flex justify-content-between align-items-center\">\n          <Button onClick={() => setOpen(false)}>Annuler</Button>\n\n          <Button onClick={() => handleDelete(setOpen)} className=\"btn-danger\">\n            Supprimer\n          </Button>\n        </div>\n      )}\n      render={() => <div className=\"p-3\">Are you sure you want to delete this</div>}\n      className={getCN(['product-delete-button btn-danger-3', props.className])}\n    >\n      <Icons.Trash />\n      {label && <span className=\"label\">{label}</span>}\n    </ConfirmButton>\n  );\n};\n\n//#endregion ============================== BUTTONS\n\nexport const ProductCardItem = ({ data, ...props }: { data: ProductType }) => {\n  const instance = StaffProduct(data);\n\n  return (\n    <div className=\"p-card-list-item p-1 mb-1\">\n      <div className=\"d-flex align-items-center\">\n        <div className=\"p-name text-ellipsis\">{instance.name_truncated}</div>\n        <div className=\"ms-1\">\n          <PublishedIcon show={instance.is_published} />\n        </div>\n      </div>\n\n      <div className=\"d-flex\">\n        <StaffImg.Square {...instance?.cover_data} />\n        <div className=\"p-info ps-1\">\n          <ProductPriceDisplay {...instance.export()} className=\"d-flex flex-wrap\" />\n          <div className=\"p-category\">{instance.category_data?.name}</div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport type ProductCardListProps = {\n  items: ProductType[];\n  itempath: string;\n};\nexport const ProductCardList = ({ items, itempath }: ProductCardListProps) => {\n  const [params] = useSearchParams();\n  return (\n    <div className=\"p-card-list-items\">\n      {items.map((item: ProductType) => {\n        // let to = `${itempath}${item.slug}/?${params}`;\n        let to = `${itempath}${item.slug}/?${params}`;\n        return (\n          <NavLink to={to} key={item.slug}>\n            <ProductCardItem data={item} />\n          </NavLink>\n        );\n      })}\n    </div>\n  );\n};\n","\nimport { StaffModel, StaffService } from '@miq/staffjs';\nimport { ProductType } from '../types';\n\n\nclass StaffProductService extends StaffService<ProductType> {\n  publish() {\n    return this.patch(`${this._path}publish/`, { is_published: true });\n  }\n\n  unpublish() {\n    return this.patch(`${this._path}publish/`, { is_published: false });\n  }\n\n  postSize(values: any) {\n    return this.post(`${this._path}size/new/`, values);\n  }\n  patchSize(sizeSlug: string, values: any) {\n    return this.patch(`${this._path}size/${sizeSlug}/`, values);\n  }\n  deleteSize(sizeSlug: string) {\n    return this.delete(`${this._path}size/${sizeSlug}/`);\n  }\n  postAttribute(values: any) {\n    return this.post(`${this._path}attribute/new/`, values);\n  }\n  patchAttribute(attrSlug: string, values: any) {\n    return this.patch(`${this._path}attribute/${attrSlug}/`, values);\n  }\n  deleteAttribute(attrSlug: string) {\n    return this.delete(`${this._path}attribute/${attrSlug}/`);\n  }\n  swapCover(slug: string) {\n    return this.patch(`${this._path}swap-cover/`, { slug });\n  }\n}\n\nexport const StaffProduct = (data: ProductType = {}) => {\n  let { dt_published } = data;\n  if (dt_published) dt_published = new Date(dt_published);\n\n  return StaffModel<ProductType, StaffProductService>({ ...data, dt_published }, 'products', StaffProductService);\n};\n","import { useSearchParams } from 'react-router-dom';\n\nimport { useRequest } from '@miq/hookjs';\nimport { StaffProduct } from './models';\n\nexport const useProductListRequest = (orderSlug?: string) => {\n  const [params] = useSearchParams();\n\n  const cat = params.get('cat');\n  const page = params.get('page');\n  const published = params.get('published');\n  const presale = params.get('presale');\n  const sale = params.get('sale');\n\n  let searchParams: any = { page, cat, published, presale, sale };\n  if (orderSlug) searchParams.supplier_order_slug = orderSlug;\n\n  return useRequest(() => StaffProduct().list({ params: searchParams }), {\n    refreshDeps: [page, cat, published, presale, sale, orderSlug],\n  });\n};\n","import * as React from 'react';\nimport { useParams } from 'react-router-dom';\n\nimport Staff from '@miq/staffjs';\nimport { Viewports } from '@miq/componentjs';\n\nimport { useCrudEmitter } from '../events';\nimport { ProductCardList } from '../Product/components';\nimport { useProductListRequest } from '../Product';\n\nconst ProductUpdateView = React.lazy(() => import('../Product/UpdateView'));\n\nexport default function OrderProductUpdateView() {\n  const { ordSlug } = useParams();\n  const { res = { data: { results: [] } }, ...rest } = useProductListRequest(ordSlug);\n\n  useCrudEmitter({ onUpdate: rest.updateItem, onDestroy: rest.removeItem });\n\n  const back = `/staff/store/orders/${ordSlug}/`;\n\n  return (\n    <Staff.View>\n      <div className=\"d-flex flex-column flex-xl-row\">\n        <Viewports.XLUp>\n          <div className=\"w-35 \">\n            <ProductCardList items={res?.data?.results || []} itempath={back} />\n          </div>\n        </Viewports.XLUp>\n\n        <div className=\"flex-1\">\n          <ProductUpdateView back={back} />\n        </div>\n      </div>\n    </Staff.View>\n  );\n}\n","import React from 'react';\nimport { Button, ButtonProps, Icons, ToastEmitter } from '@miq/componentjs';\n\n// https://www.bennadel.com/blog/3961-having-fun-with-the-horizontal-usage-of-position-sticky-in-angular-11-0-5.htm\n\nimport './component.scss';\n\nimport { StaffCategory } from './Category';\nimport { StaffProduct } from './Product';\nimport { PriceDataType, ProductType } from './types';\nimport { getCN } from '@miq/utiljs';\n\ntype InstanceType = ReturnType<typeof StaffProduct> | ReturnType<typeof StaffCategory>;\n\ninterface UpdateButtonProps extends ButtonProps {\n  instance: InstanceType;\n  onSuccess: (r: any) => void;\n}\n\nexport const PublishButton: React.FC<UpdateButtonProps> = (props) => {\n  const { instance, onClick, onSuccess, onError, ...rest } = props;\n\n  const handleClick = () => {\n    if (instance.is_published) return null;\n    return instance\n      .publish()\n      .then((res: any) => onSuccess?.(res))\n      .catch((err: any) => onError?.(err));\n  };\n\n  return <Button onClick={handleClick} className=\"btn-primary btn-md\" {...rest} disabled={instance.is_published} />;\n};\n\nexport const UnPublishButton: React.FC<UpdateButtonProps> = (props) => {\n  const { instance, onClick, onSuccess, onError, ...rest } = props;\n\n  const handleClick = () => {\n    if (!instance.is_published) return null;\n    return instance\n      .unpublish()\n      .then((res: any) => onSuccess?.(res))\n      .catch((err: any) => onError?.(err));\n  };\n\n  return <Button className=\"btn-danger btn-md\" onClick={handleClick} {...rest} disabled={!instance.is_published} />;\n};\n\n//#region ================================== COMPONENTS =============================================================\n\nexport type PriceDisplayProps = PriceDataType & {\n  className?: string;\n  sale?: string | boolean;\n  lineThrough?: string | boolean;\n};\n\nexport const PriceDisplay = ({ amountWithSymbol, className, sale, lineThrough }: PriceDisplayProps) => (\n  <div className={getCN(['miq-price-display', sale && 'text-danger', lineThrough && 'text-line-through', className])}>\n    {amountWithSymbol}\n  </div>\n);\n\nexport const ProductPriceDisplay = ({\n  retail_price_data,\n  is_on_sale,\n  sale_price_data,\n  ...props\n}: ProductType & { className?: string; style?: any }) => {\n  if (!retail_price_data) return null;\n\n  const isSale = is_on_sale && sale_price_data?.amountWithSymbol != null;\n\n  return (\n    <div className={getCN(['miq-product-price-display', props.className])} style={props.style}>\n      {isSale && <PriceDisplay sale {...sale_price_data} className=\"miq-sale-price me-1\" />}\n      <PriceDisplay {...retail_price_data} lineThrough={isSale} className=\"miq-retail-price\" />\n    </div>\n  );\n};\n\nexport const ProductSupplierData = (props: { instance: InstanceType }) => {\n  // const { instance } = props;\n\n  return (\n    <div className=\"supplier-data\">\n      <div className=\"item\">\n        <span className=\"title\">Supplier</span>\n        {/* <span className=\"value\">{instance.supplier_name}</span> */}\n      </div>\n      <div className=\"item\">\n        <span className=\"title\">Item ID</span>\n        {/* <span className=\"value\">{instance.supplier_item_id}</span> */}\n      </div>\n      <div className=\"item\">\n        <span className=\"title\">Category</span>\n        {/* <span className=\"value\">{instance.supplier_item_category}</span> */}\n      </div>\n      <div className=\"item\">\n        <span className=\"title\"> Item cost</span>\n        <span className=\"value\">{/* {instance.supplier_item_cost} ({instance.supplier_item_cost_currency}) */}</span>\n      </div>\n    </div>\n  );\n};\n\nexport const PublishedIcon = ({ show, ...props }: React.ComponentPropsWithoutRef<'svg'> & { show?: boolean }) =>\n  show ? <Icons.CheckCircle {...props} className=\"published-icon\" /> : null;\n\n//#endregion ===============================================================================================\n\nexport const toast = new ToastEmitter();\n\n{\n  /* <Toaster instance={t}></Toaster> */\n}\n// <button\n//   onClick={() => {\n//     t.info({ message: 'Hello', autoClose: true });\n//   }}\n// >\n//   Click me\n// </button>\n","import * as React from 'react';\nimport EventEmitter from 'events';\n\ninterface IEventStateSyncProps {\n  children?: React.ReactNode;\n}\n\nclass CrudEmitter extends EventEmitter {\n  prefix?: string;\n\n  constructor(...args: any) {\n    const { prefix = '', ...rest } = args;\n    super(rest);\n\n    this.prefix = prefix;\n  }\n\n  create(payload: any) {\n    this.emit(`${this.prefix}-create`, payload);\n  }\n  retrieve(payload: any) {\n    this.emit(`${this.prefix}-retrieve`, payload);\n  }\n  list(payload: any) {\n    this.emit(`${this.prefix}-list`, payload);\n  }\n  update(payload: any) {\n    this.emit(`${this.prefix}-update`, payload);\n  }\n  destroy(payload: any) {\n    this.emit(`${this.prefix}-destroy`, payload);\n  }\n}\n\nexport const emitter = new CrudEmitter();\n\ntype FN<T> = T & { [key: string]: any; slug: string };\n\ntype CallBacksType<T = void> = {\n  onList?: () => void;\n  onRetrieve?: () => void;\n  onCreate?: (payload: FN<T>) => void;\n  onUpdate?: (payload: FN<T>) => void;\n  onDestroy?: (payload: FN<T>) => void;\n};\n\nexport function useCrudEmitter(callbacks: CallBacksType, match?: (p: any) => boolean) {\n  React.useEffect(() => {\n    emitter.on('-create', (payload: any) => {\n      if (match && !match(payload)) return;\n\n      callbacks.onCreate?.(payload);\n    });\n\n    emitter.on('-update', (payload: any) => {\n      if (match && !match(payload)) return;\n\n      callbacks.onUpdate?.(payload);\n    });\n\n    emitter.on('-destroy', (payload: any) => {\n      if (match && !match(payload)) return;\n\n      callbacks.onDestroy?.(payload);\n    });\n  }, []);\n}\n"],"names":["ProductImagesAddButton","props","productInstance","onSuccess","onError","rest","className","multiple","onSuccessMulti","resArray","imgsArray","map","data","slug","filter","images","includes","update","then","res","catch","err","ProductDeleteButton","instance","label","renderHeader","name","renderFooter","setOpen","onClick","destroy","emitter","handleDelete","render","getCN","ProductCardItem","StaffProduct","name_truncated","show","is_published","cover_data","export","category_data","ProductCardList","items","itempath","useSearchParams","params","item","to","StaffProductService","this","patch","_path","values","post","sizeSlug","delete","attrSlug","StaffService","dt_published","Date","StaffModel","useProductListRequest","orderSlug","cat","get","page","published","presale","sale","searchParams","supplier_order_slug","useRequest","list","refreshDeps","ProductUpdateView","React","OrderProductUpdateView","ordSlug","useParams","results","useCrudEmitter","onUpdate","updateItem","onDestroy","removeItem","back","PublishButton","publish","disabled","UnPublishButton","unpublish","PriceDisplay","amountWithSymbol","lineThrough","ProductPriceDisplay","retail_price_data","is_on_sale","sale_price_data","isSale","style","PublishedIcon","ToastEmitter","CrudEmitter","args","prefix","payload","emit","EventEmitter","callbacks","match","on","onCreate","call"],"sourceRoot":""}
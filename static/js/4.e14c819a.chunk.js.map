{"version":3,"sources":["../../../../packages/miq-sharedjs/src/editor/src/Section/ImageSection/index.jsx","../../../../packages/miq-sharedjs/src/editor/src/Section/ImagesSection/index.jsx"],"names":["SectionImageUpdateForm","image","isRequired","props","children","section","form","useForm","alt_text","className","ImgAltTextInput","img","imgSlug","slug","onCreate","onDataChange","onUpdate","ImageSection","forwardRef","ref","id","rest","data","getClassName","Icon","Icons","Image","onSuccess","res","console","log","style","minHeight","IS_DEV","displayName","ImagesSection","images_data","length","gap","map"],"mappings":"uVAaaA,EAAyB,SAAC,GAAyD,IAAD,IAAtDC,aAAsD,MAA9CC,YAAW,SAAmC,EAAZC,GAAY,EAAzBC,SAAyB,kBAC7F,EAA4CD,EAApCE,eAAR,MAAkBH,YAAW,WAA7B,EACMI,EAAOC,YAAQ,CAAEC,SAAUP,EAAQA,EAAMO,SAAW,KAC1D,OAAKP,EAUH,eAAC,IAAD,CAAiBK,KAAMA,EAAvB,UACE,cAAC,IAAD,eAASL,IAET,qBAAKQ,UAAU,aAAf,SACE,cAAC,IAAgBC,gBAAjB,CAAiCC,IAAKV,EAAOK,KAAMA,SAZrD,cAAC,IAAD,CACED,QAASA,EACTO,QAASX,EAAQA,EAAMY,KAAO,KAC9BC,SAAUX,EAAMY,aAChBC,SAAUb,EAAMY,gBAclBE,EAAeC,sBAAW,SAACf,EAAOgB,GACtC,IAAQV,EAA2BN,EAA3BM,UAAWW,EAAgBjB,EAAhBiB,GAAOC,EAA1B,YAAmClB,EAAnC,GACA,EAAuBkB,EAAKC,KAApBrB,aAAR,MAAgB,GAAhB,EAEA,OACE,sBAAKmB,GAAIA,EAAID,IAAKA,EAAKV,UAAWc,YAAa,CAACd,EAAW,gBAA3D,UACE,cAAC,IAAD,CAAee,KAAMC,IAAMC,MAA3B,SACE,qBAAKjB,UAAU,SAAf,SACE,cAAC,IAAD,2BACMY,GADN,IAEEM,UAAW,SAACC,GACVC,QAAQC,IAAIF,IAEdnB,UAAU,cAKhB,cAAC,IAAD,UACE,qBAAKA,UAAU,+DAA+DsB,MAAO,CAAEC,UAAW,KAAlG,SACE,cAAChC,EAAD,CAAwBC,MAAOA,EAAOI,QAASgB,EAAKC,KAAMP,aAAcZ,EAAMY,yBAWzEE,YAEXgB,MACFhB,EAAaiB,YAAc,iB,gLCxDvBC,EAAgBjB,sBAAW,SAACf,EAAOgB,GACvC,IAAQV,EAA2BN,EAA3BM,UAAWW,EAAgBjB,EAAhBiB,GAAOC,EAA1B,YAAmClB,EAAnC,GACA,EAA6BkB,EAAKC,KAA1Bc,mBAAR,MAAsB,GAAtB,EAEA,OACE,sBAAKhB,GAAIA,EAAID,IAAKA,EAAKV,UAAWc,YAAa,CAACd,EAAW,iBAA3D,UACE,cAAC,IAAD,CAAee,KAAMC,IAAMC,MAA3B,SACE,sBAAKjB,UAAU,SAAf,UACE,cAAC,IAAD,2BAAyBY,GAAzB,IAA+BZ,UAAU,UACzC,cAAC,IAAD,CAAwBJ,QAASF,EAAMmB,KAAMR,SAAUX,EAAMY,aAAcC,SAAUb,EAAMY,oBAI/F,cAAC,IAAD,UACGqB,EAAYC,OAAS,EACpB,qBAAK5B,UAAU,qCAAqCsB,MAAO,CAAEO,IAAK,GAAlE,SACGF,EAAYG,KAAI,SAACtC,GAChB,OACE,qBAAKQ,UAAU,GAAf,SACE,cAAC,yBAAD,CAAwBR,MAAOA,EAAOI,QAASF,EAAMmB,KAAMP,aAAcZ,EAAMY,gBAD1Dd,EAAMY,WAenC,mDAIJ,cAAC,IAAD,UASSsB,YAEXF,MACFE,EAAcD,YAAc","file":"static/js/4.e14c819a.chunk.js","sourcesContent":["import { forwardRef, useState } from 'react';\n\nimport { Img, Icons } from '@miq/components';\nimport { getClassName, IS_DEV, isRequired } from '@miq/utils';\nimport { useForm } from '@miq/form';\n\nimport './img-section.scss';\n\nimport { SectionDeleteButton, SectionEditForm, SectionImgUploadButton } from '../section-components';\nimport { SectionBody, SectionHeader } from '../section-ui';\n\nimport { sectionRequiredProps } from '../utils';\n\nexport const SectionImageUpdateForm = ({ image = isRequired('image'), children, ...props }) => {\n  const { section = isRequired('section') } = props;\n  const form = useForm({ alt_text: image ? image.alt_text : '' });\n  if (!image)\n    return (\n      <SectionImgUploadButton\n        section={section}\n        imgSlug={image ? image.slug : null}\n        onCreate={props.onDataChange}\n        onUpdate={props.onDataChange}\n      />\n    );\n  return (\n    <SectionEditForm form={form}>\n      <Img {...image} />\n\n      <div className=\"mt-1 w-100\">\n        <SectionEditForm.ImgAltTextInput img={image} form={form} />\n      </div>\n    </SectionEditForm>\n  );\n};\n\nconst ImageSection = forwardRef((props, ref) => {\n  const { className, id, ...rest } = props;\n  const { image = {} } = rest.data;\n\n  return (\n    <div id={id} ref={ref} className={getClassName([className, 'section-img'])}>\n      <SectionHeader Icon={Icons.Image}>\n        <div className=\"d-flex\">\n          <SectionDeleteButton\n            {...rest}\n            onSuccess={(res) => {\n              console.log(res);\n            }}\n            className=\"me-2\"\n          />\n        </div>\n      </SectionHeader>\n\n      <SectionBody>\n        <div className=\"d-flex flex-column align-items-center justify-content-center\" style={{ minHeight: 100 }}>\n          <SectionImageUpdateForm image={image} section={rest.data} onDataChange={props.onDataChange} />\n        </div>\n      </SectionBody>\n    </div>\n  );\n});\n\nImageSection.propTypes = {\n  ...sectionRequiredProps,\n};\n\nexport default ImageSection;\n\nif (IS_DEV) {\n  ImageSection.displayName = 'ImageSection';\n}\n\n/**\n * IMAGE SECTION\n * images Icon:viewlist\n * slider; distribute-horizontal\n */\n\nconst UploadTab = (props) => {\n  const { tab } = props;\n\n  if (tab === 'library') return <LibraryTab {...props} />;\n  if (tab === 'unsplash') return <UnsplashTab {...props} />;\n\n  return (\n    <div className=\"tab-upload\">\n      <div className=\"\">Click to upload an image</div>\n      <div className=\"\">or</div>\n      <div className=\"\">Paste url</div>\n    </div>\n  );\n};\nconst LibraryTab = (props) => {\n  return <div className=\"tab-library\">Images from library</div>;\n};\n\nconst UnsplashTab = (props) => {\n  return <div className=\"tab-unsplash\">Images from unsplash</div>;\n};\n\nconst ImgSectionEdit = (props) => {\n  const [tab, setTab] = useState('new');\n  return (\n    <div className=\"section-edit\">\n      <div className=\"\">\n        <button onClick={() => setTab('new')}>New</button>\n        <button onClick={() => setTab('library')}>Library</button>\n        <button onClick={() => setTab('unsplash')}>Unsplash</button>\n      </div>\n\n      <UploadTab {...{ tab }} />\n    </div>\n  );\n};\n\nconst ImgSectionPreview = (props) => {\n  const { data } = props;\n\n  if (props.context.isEdit) return <ImgSectionEdit {...props} />;\n\n  const src =\n    'https://images.unsplash.com/photo-1621570070821-2e2b1358fae3?crop=entropy&cs=tinysrgb&fit=max&fm=jpg&ixid=MnwxMTc3M3wxfDF8YWxsfDF8fHx8fHwyfHwxNjIxOTkyNDMw&ixlib=rb-1.2.1&q=80&w=2000';\n\n  return (\n    <div\n      className={getClassName(['section-preview', !data.image && 'empty'])}\n      onClick={() => props.context.setEdit(!props.context.isEdit)}\n    ></div>\n  );\n};\n","import { forwardRef, useState } from 'react';\n\nimport { Img, Icons } from '@miq/components';\nimport { getClassName, IS_DEV } from '@miq/utils';\nimport Form, { useForm } from '@miq/form';\n\nimport './imgs-section.scss';\n\nimport { SectionDeleteButton, SectionEditForm, SectionImgUploadButton } from '../section-components';\nimport { SectionBody, SectionFooter, SectionHeader } from '../section-ui';\n\nimport { sectionRequiredProps } from '../utils';\nimport { SectionImageUpdateForm } from '../ImageSection';\n\nconst ImagesSection = forwardRef((props, ref) => {\n  const { className, id, ...rest } = props;\n  const { images_data = [] } = rest.data;\n\n  return (\n    <div id={id} ref={ref} className={getClassName([className, 'section-imgs'])}>\n      <SectionHeader Icon={Icons.Image}>\n        <div className=\"d-flex\">\n          <SectionDeleteButton {...rest} className=\"me-2\" />\n          <SectionImgUploadButton section={props.data} onCreate={props.onDataChange} onUpdate={props.onDataChange} />\n        </div>\n      </SectionHeader>\n\n      <SectionBody>\n        {images_data.length > 0 ? (\n          <div className=\"d-grid grid-2 grid-lg-3 flex-1 p-1\" style={{ gap: 6 }}>\n            {images_data.map((image) => {\n              return (\n                <div className=\"\" key={image.slug}>\n                  <SectionImageUpdateForm image={image} section={props.data} onDataChange={props.onDataChange} />\n                </div>\n                // <SectionImgUploadButton\n                //   section={props.data}\n                //   imgSlug={image ? image.slug : null}\n                //   onCreate={props.onDataChange}\n                //   onUpdate={props.onDataChange}\n                // >\n                //   <Img {...image} Icon={Icons.CloudArrowUp} />\n                // </SectionImgUploadButton>\n              );\n            })}\n          </div>\n        ) : (\n          <div>Upload images.</div>\n        )}\n      </SectionBody>\n\n      <SectionFooter></SectionFooter>\n    </div>\n  );\n});\n\nImagesSection.propTypes = {\n  ...sectionRequiredProps,\n};\n\nexport default ImagesSection;\n\nif (IS_DEV) {\n  ImagesSection.displayName = 'ImagesSection';\n}\n"],"sourceRoot":""}
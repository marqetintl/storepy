{"version":3,"sources":["shop/product/components.jsx","shop/orders/components.jsx","shop/product/forms.jsx","shop/product/Attribute.jsx","shop/product/UpdateView.jsx"],"names":["ProductImageUploadButton","product","props","slug","multiple","className","onCreate","imgsArray","filter","img","productServices","patch","images","map","then","data","onCreateSuccess","catch","err","onCreateError","ProductImageAltTextInput","image","form","useForm","alt_text","imgSlug","setValues","useEffect","value","required","onSuccess","onError","placeholder","SupplierData","supplier_name","supplier_item_id","supplier_item_category","supplier_item_cost","supplier_item_cost_currency","href","supplier_item_url","target","rel","ProductQuickUpdateForm","setProduct","toast","categories","productSlug","ProductForm","context","onSubmit","e","preventDefault","fD","name","values","retail_price","is_on_sale","is_pre_sale","category","sale_price","is_pre_sale_text","success","message","SHOP_MSGS","update_success","error","update_error","handleError","Section","title","actions","is_published","page","pill","ProductNameInput","errors","ProductCategoryInput","ProductRetailPriceInput","ProductPresaleCheckboxInput","ProductPresaleTextInput","ProductOnSaleCheckboxInput","ProductSalePriceInput","Submit","cover","cover_data","imgData","cover_create_success","cover_update_error","onUpdate","cover_update_success","onDelete","cover_delete_success","showLabel","label","input","rest","Label","TextInput","maxLength","SelectInput","nullValue","items","cat","Option","key","id","type","min","step","CheckboxInput","TextAreaX","children","fields","prodSlug","forEach","field","console","log","NameInput","CategoryInput","RetailPriceInput","PresaleCheckboxInput","PresaleTextInput","OnSaleCheckboxInput","SalePriceInput","StageSelect","stages","stage","AttrNameInput","minLength","AttrValueInput","AttributeUpdateForm","instance","patchAttribute","style","alignItems","Icon","Icons","Trash","render","args","onClick","deleteAttribute","setOpen","renderHeader","AttributeCreateForm","initValues","postAttribute","productFormDefaultValues","description","slug_public","ProductUpdateStaffView","match","params","useState","tab","setTab","useContext","ToastCtx","detail","response","status","prev_slug","next_slug","back","SHOP_PATHS","productUpdate","getClassName","history","push","ProductPublishButton","unpublish","unpublish_success","default","publish","publish_success","publish_error_retail_price","publish_error_category","publish_error_page","ViewTabs","text","InventoryViewTab","addAtr","setAddAtr","productData","attributes","attr","pData","ImagesViewTab","gap","images_data","i","SettingViewTab","patchPage","page_update_success","page_update_error","delete","delete_success","delete_error"],"mappings":"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","file":"static/js/0.f4f6a8e0.chunk.js","sourcesContent":["import React, { useEffect } from 'react';\nimport PropTypes from 'prop-types';\n\nimport Form, { useForm, FormProvider } from '@miq/form';\nimport { ImageAltTextInput } from '@miq/adminjs';\nimport { ImgUploadButton } from '@miq/components';\nimport { productServices } from './utils';\n\n//\n// ========================= FORM COMPONENTS ===================================================================\n//\n\nexport const ProductImageUploadButton = ({ product, ...props }) => {\n  if (!product || !product.slug) return null;\n\n  return (\n    <ImgUploadButton\n      multiple={true}\n      className=\"btn-primary-3\"\n      onCreate={(imgsArray) => {\n        imgsArray = imgsArray.filter((img) => img && img.slug);\n        return productServices\n          .patch(product.slug, { images: [...product.images, ...imgsArray.map((img) => img.slug)] })\n          .then((data) => {\n            if (props.onCreateSuccess) props.onCreateSuccess(data);\n          })\n          .catch((err) => {\n            if (props.onCreateError) props.onCreateError(err);\n          });\n      }}\n    />\n  );\n};\n\nexport const ProductImageAltTextInput = ({ image, ...props }) => {\n  const form = useForm({ alt_text: image?.alt_text || '' });\n\n  const imgSlug = image?.slug;\n  const alt_text = image?.alt_text;\n  const setValues = form.setValues;\n\n  useEffect(() => {\n    setValues({ alt_text });\n  }, [imgSlug, setValues, alt_text]);\n\n  if (!image || !image.slug) return null;\n\n  return (\n    <FormProvider value={form} className={props.className}>\n      <ImageAltTextInput\n        required\n        image={image}\n        onSuccess={props.onSuccess}\n        onError={props.onError}\n        placeholder=\"Add an alternative text ...\"\n      />\n    </FormProvider>\n  );\n};\n\nProductImageAltTextInput.propTypes = {\n  image: PropTypes.shape({\n    slug: PropTypes.string.isRequired,\n  }),\n\n  onUpdate: PropTypes.func,\n  onError: PropTypes.func,\n};\n\nexport const ProductCoverUploadButton = ({ children, product, ...props }) => {\n  if (!product || !product.slug) return null;\n\n  const handleCoverCreate = ({ slug }) => {\n    productServices\n      .patch(product.slug, { cover: slug })\n      .then((data) => {\n        if (props.onCreateSuccess) props.onCreateSuccess(data);\n      })\n      .catch((err) => {\n        if (props.onCreateError) props.onCreateError(err);\n      });\n  };\n  const handleCoverUpdate = (imgData) => {\n    if (props.onUpdateSuccess) props.onUpdateSuccess(imgData);\n  };\n\n  return (\n    <ImgUploadButton\n      slug={product.cover_data ? product.cover_data.slug : null}\n      onCreate={handleCoverCreate}\n      onUpdate={handleCoverUpdate}\n      className=\"product-cover-upload-button\"\n    >\n      {children}\n    </ImgUploadButton>\n  );\n};\n\nProductCoverUploadButton.propTypes = {\n  children: PropTypes.any.isRequired,\n  product: PropTypes.shape({ slug: PropTypes.string.isRequired }).isRequired,\n  onCreateSuccess: PropTypes.func,\n  onCreateError: PropTypes.func,\n  onUpdateSuccess: PropTypes.func,\n  onUpdateError: PropTypes.func,\n};\n","export const SupplierData = ({ product, ...props }) => {\n  if (!product) return null;\n\n  return (\n    <div className=\"product-supplier-data\">\n      <ul>\n        <li>\n          <span className=\"\">Supplier</span>\n          <span className=\"\">{product.supplier_name}</span>\n        </li>\n        <li>\n          <span className=\"\">Item id</span>\n          <span className=\"\">{product.supplier_item_id}</span>\n        </li>\n        <li>\n          <span className=\"\">Category</span>\n          <span className=\"\">{product.supplier_item_category}</span>\n        </li>\n\n        <li>\n          <span className=\"\">Item cost</span>\n          <span className=\"\">\n            {product.supplier_item_cost} ({product.supplier_item_cost_currency})\n          </span>\n        </li>\n        <li>\n          <a href={product.supplier_item_url} className=\"text-underline\" target=\"_blank\" rel=\"noopener noreferrer\">\n            View supplier page\n          </a>\n        </li>\n      </ul>\n    </div>\n  );\n};\n","import { useEffect } from 'react';\nimport { AdminView, StaffCoverUpdateForm, PublishedStatusSpan } from '@miq/adminjs';\nimport Form from '@miq/form';\nimport { productServices } from './utils';\nimport { ProductImageAltTextInput } from './components';\nimport { SHOP_MSGS } from '../constants';\n\nexport function ProductQuickUpdateForm({ form, product, ...props }) {\n  const { setProduct, toast, categories } = props;\n  const productSlug = product?.slug;\n\n  useEffect(() => {}, [productSlug]);\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    const fD = {\n      name: form.values.name,\n      retail_price: form.values.retail_price,\n      is_on_sale: form.values.is_on_sale,\n      is_pre_sale: form.values.is_pre_sale,\n    };\n\n    if (form.values.category) fD.category = form.values.category;\n    if (form.values.is_on_sale) fD.sale_price = form.values.sale_price;\n\n    if (form.values.is_pre_sale) fD.is_pre_sale_text = form.values.is_pre_sale_text;\n\n    return productServices\n      .patch(product.slug, fD)\n      .then((data) => {\n        setProduct?.({ ...product, ...data });\n        toast?.success({ message: SHOP_MSGS.product.update_success });\n      })\n      .catch((err) => {\n        toast?.error({ message: SHOP_MSGS.product.update_error });\n        return form.handleError(err);\n      });\n  };\n\n  return (\n    <ProductForm context={form} onSubmit={handleSubmit}>\n      <div className=\"d-grid grid-md-3 gap-3\">\n        <div className=\"span-md-2\">\n          <AdminView.Section\n            title=\"Details\"\n            actions={<PublishedStatusSpan is_published={product?.page?.is_published} pill />}\n          >\n            <div className=\"mb-1\">\n              <ProductNameInput error={form.errors.name} />\n            </div>\n\n            {categories && (\n              <div className=\"mb-1\">\n                <ProductCategoryInput categories={categories} error={form?.errors?.category} />\n              </div>\n            )}\n\n            <div className=\"mb-1\">\n              <div className=\"mb-1\">\n                <ProductRetailPriceInput error={form?.errors?.retail_price} />\n              </div>\n\n              {/* PRE SALE */}\n              <div className=\"mb-1\">\n                <div className=\"d-flex align-items-center mb-1\">\n                  <ProductPresaleCheckboxInput error={form?.errors?.is_pre_sale} />\n                </div>\n\n                {form.values.is_pre_sale && (\n                  <div className=\"mb-2\">\n                    <ProductPresaleTextInput error={form?.errors?.is_pre_sale_text} />\n                  </div>\n                )}\n              </div>\n\n              {/* SALE  */}\n              <div className=\"d-flex align-items-center mb-1\">\n                <ProductOnSaleCheckboxInput error={form?.errors?.is_on_sale} />\n              </div>\n\n              {form.values.is_on_sale && (\n                <div className=\"mb-2\">\n                  <ProductSalePriceInput error={form?.errors?.sale_price} />\n                </div>\n              )}\n            </div>\n\n            <div className=\"my-3\">\n              <Form.Submit value=\"Update product\" className=\"btn btn-primary-3\" />\n            </div>\n          </AdminView.Section>\n        </div>\n\n        <div className=\"\">\n          <StaffCoverUpdateForm\n            slug={product?.cover}\n            data={product.cover_data}\n            onCreate={(imgData) => {\n              productServices\n                .patch(product.slug, { cover: imgData.slug })\n                .then((data) => {\n                  setProduct?.({ ...product, ...data });\n                  toast?.success({ message: SHOP_MSGS.product.cover_create_success });\n                })\n                .catch((err) => {\n                  toast?.error({ message: SHOP_MSGS.product.cover_update_error });\n                });\n            }}\n            onUpdate={(cover_data) => {\n              toast?.success({ message: SHOP_MSGS.product.cover_update_success });\n              return setProduct?.({ ...product, cover_data });\n            }}\n            onDelete={() => {\n              toast?.success({ message: SHOP_MSGS.product.cover_delete_success });\n              return setProduct?.({ ...product, cover_data: null, cover: null });\n            }}\n            className=\"mb-1\"\n          />\n          <ProductImageAltTextInput image={product?.cover_data} />\n        </div>\n      </div>\n    </ProductForm>\n  );\n}\n\n// INPUTS\n\nexport const ProductNameInput = (props) => {\n  const { showLabel = true, label = 'Name', ...input } = props;\n  const { placeholder = 'Give a name to the item', ...rest } = input;\n  return (\n    <>\n      {showLabel && <Form.Label value={label} className=\"mb-1\" />}\n      <Form.TextInput {...rest} required name=\"name\" placeholder={placeholder} maxLength={99} />\n    </>\n  );\n};\n\nexport const ProductCategoryInput = (props) => {\n  const { showLabel = true, label = 'Category', ...input } = props;\n  const { categories, ...rest } = input;\n\n  return (\n    <>\n      {showLabel && <Form.Label value={label} />}\n      <Form.SelectInput {...rest} required name=\"category\" nullValue={{ label: 'Select category' }}>\n        {categories?.items?.map((cat) => {\n          return <Form.SelectInput.Option {...cat} key={cat.value} />;\n        })}\n      </Form.SelectInput>\n    </>\n  );\n};\n\nexport const ProductRetailPriceInput = (props) => {\n  const { showLabel = true, label = 'Retail price', ...rest } = props;\n\n  return (\n    <>\n      {showLabel && <Form.Label value={label} id=\"retail_price_label\" />}\n      <Form.TextInput\n        {...rest}\n        required\n        type=\"number\"\n        name=\"retail_price\"\n        aria-describedby=\"retail_price_label\"\n        min=\"0\"\n        step=\"0.01\"\n      />\n    </>\n  );\n};\n\nexport const ProductPresaleCheckboxInput = (props) => {\n  const { showLabel = true, label = 'Pre-sale', ...rest } = props;\n\n  return (\n    <div className=\"d-flex\">\n      <Form.CheckboxInput {...rest} name=\"is_pre_sale\" className=\"me-2\" />\n      <Form.Label value={label} />\n    </div>\n  );\n};\n\nexport const ProductPresaleTextInput = (props) => {\n  return (\n    <>\n      <Form.Label value=\"Pre sale text\" id=\"is_pre_sale_text_label\" className=\"miq-checkbox-label\" />\n      <Form.TextAreaX name=\"is_pre_sale_text\" aria-describedby=\"is_pre_sale_text_label\" />\n    </>\n  );\n};\n\nexport const ProductOnSaleCheckboxInput = (props) => {\n  const { showLabel = true, label = 'On Sale', ...rest } = props;\n\n  return (\n    <div className=\"d-flex\">\n      <Form.CheckboxInput {...rest} name=\"is_on_sale\" className=\"me-2\" />\n      <Form.Label value={label} />\n    </div>\n  );\n};\n\nexport const ProductSalePriceInput = (props) => {\n  const { showLabel = true, label = 'Sale price', ...rest } = props;\n  return (\n    <>\n      {showLabel && <Form.Label value={label} id=\"sale_price_label\" className=\"miq-checkbox-label\" />}\n      <Form.TextInput\n        {...rest}\n        required\n        type=\"number\"\n        name=\"sale_price\"\n        aria-describedby=\"sale_price_label\"\n        min=\"0\"\n        step=\"0.01\"\n      />\n    </>\n  );\n};\n\nexport const ProductStageSelect = (props) => {\n  const { showLabel = true, label = 'Stage', ...input } = props;\n  const { stages, name, ...rest } = input;\n\n  return (\n    <>\n      {showLabel && <Form.Label value={label} />}\n      <Form.SelectInput {...rest} required name={name || 'stage'} nullValue={{ label: 'Select stage' }}>\n        {stages?.map?.((stage) => {\n          return <Form.SelectInput.Option {...stage} key={stage.value} />;\n        })}\n      </Form.SelectInput>\n    </>\n  );\n};\n\nexport const ProductForm = ({ children, context, fields = [], prodSlug, ...props }) => {\n  const { onSuccess, onError, ...rest } = props;\n\n  const handleSubmit = (e) => {\n    if (!context || !fields) return;\n\n    e.preventDefault();\n    const fD = {\n      // name: context.values.name,\n      // retail_price: form.values.retail_price,\n      // is_on_sale: form.values.is_on_sale,\n      // is_pre_sale: form.values.is_pre_sale,\n    };\n\n    fields.forEach((field) => {\n      const value = context.values[field];\n      if (value == null) return;\n      fD[field] = value;\n    });\n\n    // if (form.values.category) fD.category = form.values.category;\n    // if (form.values.is_on_sale) fD.sale_price = form.values.sale_price;\n\n    // if (form.values.is_pre_sale) fD.is_pre_sale_text = form.values.is_pre_sale_text;\n    if (!prodSlug) return;\n\n    return productServices\n      .patch(prodSlug, fD)\n      .then((data) => {\n        props?.onSuccess?.(data);\n      })\n      .catch((err) => {\n        if (props.onError) return props.onError(err);\n        console.log('ehey');\n        return context.handleError(err);\n      });\n  };\n  return (\n    <Form {...rest} context={context} onSubmit={props.onSubmit || handleSubmit}>\n      {children}\n    </Form>\n  );\n};\n\nProductForm.NameInput = ProductNameInput;\nProductForm.CategoryInput = ProductCategoryInput;\nProductForm.RetailPriceInput = ProductRetailPriceInput;\nProductForm.PresaleCheckboxInput = ProductPresaleCheckboxInput;\nProductForm.PresaleTextInput = ProductPresaleTextInput;\nProductForm.OnSaleCheckboxInput = ProductOnSaleCheckboxInput;\nProductForm.SalePriceInput = ProductSalePriceInput;\nProductForm.StageSelect = ProductStageSelect;\n","import { IBtnSave, ConfirmIconButton, Icons, Button } from '@miq/components'\n\nimport Form, { useForm } from '@miq/form'\nimport { productServices } from './utils'\n\nconst AttrNameInput = (props) => (\n  <Form.TextInput placeholder=\"Nom de l'attribut\" {...props} required name=\"name\" maxLength={30} minLength={3} />\n)\n\nconst AttrValueInput = (props) => (\n  <Form.TextInput placeholder=\"Valeur de l'attribut\" {...props} required name=\"value\" maxLength={99} minLength={3} />\n)\n\nexport const AttributeUpdateForm = ({ instance, product, ...props }) => {\n  const form = useForm({ name: instance?.name || '', value: instance?.value || '' })\n\n  if (!instance || !instance.slug || !product || !product.slug) return null\n\n  const handleSubmit = (e) => {\n    e.preventDefault()\n\n    return productServices\n      .patchAttribute(product.slug, instance.slug, form.values)\n      .then((data) => {\n        return props?.onSuccess(data)\n      })\n      .catch((err) => {\n        return form.handleError(err)\n      })\n  }\n\n  return (\n    <Form context={form} onSubmit={handleSubmit}>\n      <div className=\"d-flex flex-column flex-md-row\" style={{ alignItems: 'end' }}>\n        <div className=\"me-md-1\">\n          <AttrNameInput error={form.errors.name} />\n        </div>\n\n        <div className=\"w-100 me-md-1\">\n          <AttrValueInput error={form.errors.value} />\n        </div>\n\n        <div className=\"d-flex ms-md-1\">\n          <ConfirmIconButton\n            Icon={Icons.Trash}\n            render={(args) => (\n              <div className=\"p-3 w-100 d-flex justify-content-center\">\n                <div className=\"w-md-50 d-flex align-items-center justify-content-between\">\n                  <div>\n                    <Button\n                      onClick={() =>\n                        productServices\n                          .deleteAttribute(product.slug, instance.slug)\n                          .then((data) => {\n                            args?.setOpen(false)\n                            return props?.onSuccess(data)\n                          })\n                          .catch(() => {\n                            props?.toast?.error({ message: 'Could not delete attribute.' })\n                          })\n                      }\n                      className=\"btn-danger\"\n                    >\n                      Supprimer\n                    </Button>\n                  </div>\n                  <div>\n                    <Button onClick={() => args?.setOpen(false)}>Annuler</Button>\n                  </div>\n                </div>\n              </div>\n            )}\n            renderHeader={(args) => {\n              return (\n                <div className=\"p-3\">\n                  <div className=\"fw-bold\">Supprimer l'attribut \"{instance.name}\"</div>\n                </div>\n              )\n            }}\n            className=\"btn-danger-3 me-1\"\n          />\n          <Form.Submit value=\"Save\" className=\"btn btn-primary-2\" />\n        </div>\n      </div>\n    </Form>\n  )\n}\n\nexport function AttributeCreateForm({ product, ...props }) {\n  const initValues = { name: '', value: '' }\n  const form = useForm(initValues)\n\n  if (!product || !product.slug) return null\n\n  const handleSubmit = (e) => {\n    e.preventDefault()\n    // if (form.hasErrors()) return;\n\n    return productServices\n      .postAttribute(product.slug, form.values)\n      .then((data) => {\n        form.setValues(initValues)\n        return props?.onSuccess(data)\n      })\n      .catch((err) => {\n        return form.handleError(err)\n      })\n  }\n\n  // const invalidAttrNames = product?.attributes?.map((at) => at.name) || [];\n\n  return (\n    <Form context={form} onSubmit={handleSubmit}>\n      <div className=\"d-flex flex-column flex-md-row\" style={{ alignItems: 'end' }}>\n        <div className=\"me-md-1\">\n          <Form.Label value=\"Name\" />\n          <AttrNameInput error={form.errors.name} />\n        </div>\n\n        <div className=\"w-100 me-md-1\">\n          <Form.Label value=\"Value\" />\n          <AttrValueInput error={form.errors.value} />\n        </div>\n\n        <div className=\"ms-md-1\">\n          <IBtnSave type=\"submit\" className=\"btn-primary-3\" />\n        </div>\n      </div>\n    </Form>\n  )\n}\n","import { useContext, useEffect, useState } from 'react';\n\nimport { AdminView } from '@miq/adminjs';\nimport Form, { useForm } from '@miq/form';\nimport { getClassName } from '@miq/utils';\nimport { ToastCtx, Button, Img, ImgDeleteIconButton } from '@miq/components';\n\nimport { SupplierData } from '../orders/components';\n\nimport { productServices } from './utils';\nimport { ProductImageAltTextInput, ProductImageUploadButton } from './components';\nimport { AttributeCreateForm, AttributeUpdateForm } from './Attribute';\nimport { ProductQuickUpdateForm, ProductForm } from './forms';\nimport { SHOP_MSGS, SHOP_PATHS } from '../constants';\n\nexport const productFormDefaultValues = {\n  name: '',\n  description: '',\n  title: '',\n  category: '',\n  slug_public: '',\n  retail_price: 0.0,\n  is_pre_sale: false,\n  is_pre_sale_text: '',\n  sale_price: 0.0,\n  is_on_sale: false,\n};\n\nexport default function ProductUpdateStaffView(props) {\n  const { prodSlug } = props.match.params;\n\n  const [product, setProduct] = useState({});\n  const [tab, setTab] = useState('info');\n  const toast = useContext(ToastCtx);\n\n  const form = useForm(productFormDefaultValues);\n  const { setValues } = form;\n\n  useEffect(() => {\n    productServices\n      .detail(prodSlug)\n      .then((data) => {\n        setProduct(data);\n        setValues({\n          name: data.name || '',\n          description: data.description || '',\n          category: data.category || '',\n          retail_price: data?.retail_price || 0.0,\n          // PRESALE\n          is_pre_sale: data.is_pre_sale || false,\n          is_pre_sale_text: data.is_pre_sale_text || '',\n          // SALE\n          is_on_sale: data.is_on_sale || false,\n          sale_price: data?.sale_price || 0.0,\n          // SEO\n          title: data.page.title || '',\n          slug_public: data?.page?.slug_public || '',\n        });\n      })\n      .catch((err) => {\n        if (err.response) {\n          // toast.error({ message: \"Something went wrong\" });\n          console.log(err.response);\n          if (err.response.status === 404) {\n            return;\n          }\n        }\n      });\n  }, [prodSlug, setValues]);\n\n  if (!product) return null;\n\n  const { prev_slug, next_slug } = product;\n\n  return (\n    <AdminView\n      back={props?.back}\n      actions={\n        <div>\n          {prev_slug && (\n            <a href={SHOP_PATHS.productUpdate(prev_slug)} className=\"btn me-1\" title=\"Voir le produit précédent\">\n              Previous\n            </a>\n          )}\n          {next_slug && (\n            <a href={SHOP_PATHS.productUpdate(next_slug)} className=\"btn\" title=\"Voir le produit suivant\">\n              Next\n            </a>\n          )}\n        </div>\n      }\n      className=\"product-update-view\"\n    >\n      <ProductQuickUpdateForm\n        form={form}\n        product={product}\n        categories={product?.categories}\n        setProduct={setProduct}\n        toast={toast}\n      />\n\n      <div className=\"my-2\">\n        <div className=\"d-flex justify-content-center mb-3\">\n          <div className=\"d-flex align-items-center\">\n            <Button\n              onClick={() => setTab('info')}\n              className={getClassName(['me-1', tab === 'info' && 'btn-primary-3'])}\n            >\n              Info\n            </Button>\n            <Button\n              onClick={() => setTab('inventory')}\n              className={getClassName(['me-1', tab === 'inventory' && 'btn-primary-3'])}\n            >\n              Inventory\n            </Button>\n            <Button\n              onClick={() => setTab('imgs')}\n              className={getClassName(['me-1', tab === 'imgs' && 'btn-primary-3'])}\n            >\n              Images\n            </Button>\n            <Button onClick={() => setTab('setting')} className={getClassName([tab === 'setting' && 'btn-primary-3'])}>\n              Settings\n            </Button>\n          </div>\n        </div>\n\n        <ViewTabs\n          tab={tab}\n          prodSlug={prodSlug}\n          product={product}\n          setProduct={setProduct}\n          form={form}\n          toast={toast}\n          onDelete={() => props?.history?.push(props.back)}\n        />\n      </div>\n    </AdminView>\n  );\n}\n\nexport const ProductPublishButton = ({ product, setProduct, toast }) => {\n  if (!product?.page) return null;\n\n  const { is_published } = product.page;\n\n  const handlePublish = () => {\n    if (is_published)\n      return productServices\n        .unpublish(product.slug)\n        .then((data) => {\n          setProduct({ ...product, ...data });\n          return toast?.success({ message: SHOP_MSGS.product.unpublish_success });\n        })\n        .catch((err) => {\n          return toast?.error({ message: SHOP_MSGS.default });\n        });\n\n    return productServices\n      .publish(product.slug)\n      .then((data) => {\n        setProduct?.({ ...product, ...data });\n        return toast?.success({ message: SHOP_MSGS.product.publish_success });\n      })\n      .catch(({ response = {} }) => {\n        if (!response.data) {\n          return toast?.error({ message: SHOP_MSGS.default });\n        }\n        const { retail_price, category, page } = response.data;\n\n        if (retail_price) {\n          return toast?.error({ message: SHOP_MSGS.product.publish_error_retail_price });\n        }\n        if (category) {\n          return toast?.error({ message: SHOP_MSGS.product.publish_error_category });\n        }\n        if (page) {\n          return toast?.error({ message: SHOP_MSGS.product.publish_error_page });\n        }\n      });\n  };\n\n  return (\n    <Button onClick={handlePublish} className={is_published ? 'btn-danger' : 'btn-primary'}>\n      {is_published ? 'Unpublish' : 'Publish'} product\n    </Button>\n  );\n};\n\nconst ViewTabs = ({ tab, ...props }) => {\n  const { product, setProduct, form, toast } = props;\n\n  if (!product.slug) return null;\n\n  switch (tab) {\n    case 'inventory':\n      return <InventoryViewTab {...props} />;\n\n    case 'imgs':\n      return <ImagesViewTab {...props} />;\n\n    case 'setting':\n      return <SettingViewTab {...props} />;\n\n    default:\n      return (\n        <div className=\"d-grid grid-md-3 gap-3\">\n          <AdminView.Section title=\"Description\" className=\"span-md-2\">\n            <ProductForm context={form}>\n              <Form.TextAreaX\n                name=\"description\"\n                fields={['description']}\n                error={form.errors.description}\n                placeholder=\"Give a description to the item\"\n              />\n              <div className=\"my-2\">\n                <Form.Submit value=\"Save\" className=\"btn btn-primary-2\" />\n              </div>\n            </ProductForm>\n          </AdminView.Section>\n\n          <AdminView.Section\n            title=\"Status\"\n            text={\n              product.page.is_published\n                ? 'This item is published.'\n                : 'This item is not published. It does not show in your store.'\n            }\n            className=\"\"\n          >\n            <ProductPublishButton product={product} setProduct={setProduct} toast={toast} />\n          </AdminView.Section>\n        </div>\n      );\n  }\n};\n\nconst InventoryViewTab = (props) => {\n  const [addAtr, setAddAtr] = useState(false);\n  const { product, setProduct } = props;\n\n  return (\n    <div className=\"d-flex flex-column flex-md-row\">\n      <div className=\"flex-1\">\n        <AdminView.Section title=\"Sizes\" text=\"Add sizes\"></AdminView.Section>\n        <AdminView.Section\n          title=\"Attributes\"\n          actions={\n            <Button onClick={() => setAddAtr(!addAtr)} className=\"btn-primary-3\">\n              Ajouter attribut\n            </Button>\n          }\n        >\n          {addAtr && (\n            <div className=\"border-bottom mb-2 pb-3\">\n              <p className=\"text-center mb-3\">Ajouter un attribut au produit.</p>\n              <AttributeCreateForm\n                product={product}\n                onSuccess={(productData) => setProduct({ ...product, ...productData })}\n              />\n            </div>\n          )}\n\n          <div className=\"my-3\">\n            {product.attributes.map((attr) => (\n              <div className=\"mb-1\" key={attr.slug}>\n                <AttributeUpdateForm\n                  instance={attr}\n                  product={product}\n                  onSuccess={(pData) => setProduct({ ...product, ...pData })}\n                />\n              </div>\n            ))}\n          </div>\n        </AdminView.Section>\n      </div>\n\n      <div className=\"w-md-35 ms-md-2\">\n        <SupplierData product={product} />\n      </div>\n    </div>\n  );\n};\n\nconst ImagesViewTab = (props) => {\n  const { product, setProduct } = props;\n\n  return (\n    <AdminView.Section\n      title=\"Images\"\n      text=\"Add images to your product\"\n      actions={\n        <ProductImageUploadButton\n          product={product}\n          onCreateSuccess={(data) => {\n            setProduct({ ...product, ...data });\n          }}\n        />\n      }\n    >\n      <div className=\"d-grid grid-md-3 grid-lg-4\" style={{ gap: 4 }}>\n        {product.images_data.map((img) => (\n          <div className=\"mb-1\" key={img.slug}>\n            <Img {...img} className=\"product-img\" />\n\n            <div className=\"d-flex\">\n              <ProductImageAltTextInput image={img} />\n              <ImgDeleteIconButton\n                slug={img.slug}\n                label=\"\"\n                className=\"btn-danger-3 ms-1\"\n                onSuccess={() => {\n                  setProduct({\n                    ...product,\n                    images_data: product.images_data.filter((i) => i.slug !== img.slug),\n                    images: product.images.filter((i) => i !== img.slug),\n                  });\n                }}\n              />\n            </div>\n          </div>\n        ))}\n      </div>\n    </AdminView.Section>\n  );\n};\n\nconst SettingViewTab = (props) => {\n  const { prodSlug, product, setProduct, form, toast } = props;\n\n  return (\n    <Form\n      context={form}\n      onSubmit={(e) => {\n        e.preventDefault();\n        const fD = { title: form.values.title, slug_public: form.values.slug_public };\n\n        return productServices\n          .patchPage(prodSlug, fD, { title: product?.page?.title, slug_public: product?.page?.slug_public })\n          .then((data) => {\n            setProduct({ ...product, ...data });\n            toast.success({ message: SHOP_MSGS.product.page_update_success });\n          })\n          .catch((err) => {\n            form.handleError(err);\n            toast.error({ message: SHOP_MSGS.product.page_update_error });\n          });\n      }}\n    >\n      <AdminView.Section title=\"Seo\">\n        <div className=\"mb-1\">\n          <Form.Label value=\"Meta title\" className=\"mb-1\" />\n          <Form.TextInput\n            required\n            name=\"title\"\n            error={form.errors.title}\n            placeholder=\"Give a name to the item\"\n            maxLength={99}\n          />\n        </div>\n        <div className=\"mb-1\">\n          <Form.Label value=\"Slug\" className=\"mb-1\" />\n          <Form.TextInput\n            required\n            name=\"slug_public\"\n            error={form.errors.slug_public}\n            placeholder={'Write slug ...'}\n            maxLength={99}\n          />\n        </div>\n\n        <div className=\"my-2\">\n          <Form.Submit value=\"Update\" className=\"btn btn-primary-3\" />\n        </div>\n      </AdminView.Section>\n\n      <AdminView.Section>\n        <Button\n          className=\"btn-danger\"\n          onClick={() => {\n            return productServices\n              .delete(prodSlug || product.slug)\n              .then((data) => {\n                toast?.success({ message: SHOP_MSGS.product.delete_success });\n                return props?.onDelete();\n              })\n              .catch((err) => {\n                return toast?.error({ message: SHOP_MSGS.product.delete_error });\n              });\n          }}\n        >\n          Delete product\n        </Button>\n      </AdminView.Section>\n    </Form>\n  );\n};\n"],"sourceRoot":""}
{"version":3,"file":"static/js/977.b6a5c07d.chunk.js","mappings":"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","sources":["../../../../packages/shopy-storejs/src/Category/forms.tsx","../../../../packages/shopy-storejs/src/Category/index.tsx","../../../../packages/shopy-storejs/src/Category/models.tsx","../../../../packages/shopy-storejs/src/components.tsx"],"sourcesContent":["import Form, { DescriptionField, NameField, TextFieldProps, useForm } from '@miq/formjs';\nimport { FormProps, IFormCallbackProps, IFormUpdateProps } from '@miq/formjs/src/Form';\nimport { isRequired as isR } from '@miq/utiljs';\nimport React from 'react';\nimport { StaffCategory } from './models';\n\nexport const CategoryCreateForm: React.FC<IFormCallbackProps> = (props) => {\n  const form = useForm({ name: '' });\n\n  const handleSubmit = (e: React.FormEvent) => {\n    e.preventDefault();\n\n    return StaffCategory()\n      .create(form.values)\n      .then((res: any) => props?.onSuccess?.(res))\n      .catch((err: any) => {\n        form.handleError(err);\n        props?.onError?.(err);\n      });\n  };\n  return (\n    <CategoryForm context={form} onSubmit={handleSubmit}>\n      <div className=\"\">\n        <CategoryForm.NameField error={form.errors.name} />\n      </div>\n\n      <div className=\"my-3\">\n        <Form.Submit value={'Save category'} className=\"btn btn-primary\" />\n      </div>\n    </CategoryForm>\n  );\n};\n\ninterface ICategoryUpdateFormProps extends IFormUpdateProps {\n  instance: ReturnType<typeof StaffCategory>;\n  onWillSubmit?: () => void;\n  fields: string[];\n}\n\nexport const CategoryUpdateForm: React.FC<ICategoryUpdateFormProps> = ({\n  instance = isR('Category instance'),\n  fields,\n  ...props\n}) => {\n  const { onSuccess, onError, onWillSubmit, ...rest } = props;\n  const { context } = rest;\n\n  const handleSubmit = (e: React.FormEvent) => {\n    e.preventDefault();\n    onWillSubmit?.();\n\n    const fd: any = {};\n    fields.forEach((field) => {\n      const value = context.values[field];\n      if (value == null) return;\n      fd[field] = value;\n    });\n\n    return instance\n      .update(fd)\n      .then((res: any) => onSuccess?.(res))\n      .catch((err: any) => {\n        if (onError) return onError(err);\n        return context?.handleError?.(err);\n      });\n  };\n  return <CategoryForm {...rest} onSubmit={handleSubmit} />;\n};\n\nexport const CategoryForm = (props: FormProps) => <Form {...props} />;\n\nCategoryForm.NameField = (props: TextFieldProps) => (\n  <NameField placeholder=\"Entrez le nom de la catégorie ...\" {...props} required />\n);\n\nCategoryForm.DescriptionField = (props: TextFieldProps) => <DescriptionField {...props} />;\n","import * as React from 'react';\nimport { useNavigate, useSearchParams } from 'react-router-dom';\n\nimport Staff from '@miq/staffjs';\nimport { Response } from '@miq/utiljs';\nimport { useRequest } from '@miq/hookjs';\nimport { Table, Pagination } from '@miq/componentjs';\n\nimport { PublishedIcon } from '../components';\nimport { StaffCategory } from './models';\nimport { CategoryCreateForm } from './forms';\nimport { CategoryType } from '../types';\n\nexport default function CategoryStaffIndexView() {\n  const navigate = useNavigate();\n  const [params] = useSearchParams();\n  const page = params.get('page');\n\n  const { res } = useRequest(() => StaffCategory().list({ params: { page } }), { refreshDeps: [page] });\n\n  const [isAdding, setAdding] = React.useState(false);\n\n  const r = new Response(res);\n  if (!r.isSuccess) return null;\n\n  return (\n    <Staff.View\n      title=\"Catégories\"\n      back=\"/staff/shop/\"\n      actions={\n        <Staff.Button\n          onClick={() => setAdding(!isAdding)}\n          className=\"btn-primary-3\"\n          title=\"Add a new category\"\n          requiredPerms={['store.add_category']}\n        >\n          Ajouter\n        </Staff.Button>\n      }\n      requiredPerms={['store.view_category']}\n    >\n      {isAdding && (\n        <div className=\"miq-container center\">\n          <Staff.Section title=\"Add a category\" requiredPerms={['store.add_category']} border>\n            <CategoryCreateForm onSuccess={({ data }: any) => navigate(data.slug)} />\n          </Staff.Section>\n        </div>\n      )}\n\n      {r.items.length === 0 && !isAdding && (\n        <div className=\"text-center p-staff-list-empty py-3 my-3\">\n          <p className=\"fw-light text-md\">Ajouter une catégorie pour commencer</p>\n\n          <div className=\"my-4\">\n            <Staff.Button\n              onClick={() => setAdding(!isAdding)}\n              requiredPerms={['store.add_category']}\n              className=\"btn btn-primary btn-md\"\n            >\n              Add a category\n            </Staff.Button>\n          </div>\n        </div>\n      )}\n\n      <CategoryStaffTable r={r} />\n    </Staff.View>\n  );\n}\n\nconst CategoryStaffTable: React.FC<{ r: Response }> = (props) => {\n  const { r } = props;\n\n  if (r.items.length === 0) return null;\n\n  return (\n    <div className=\"\">\n      <Table\n        items={r.items}\n        className=\"cat-staff-table w-100\"\n        header={\n          <>\n            <Table.Th></Table.Th>\n            <Table.Th>Catégorie</Table.Th>\n            <Table.Th title=\"\">Produits</Table.Th>\n          </>\n        }\n        renderItem={(item: CategoryType) => {\n          const instance = StaffCategory(item);\n          return (\n            <Table.Tr key={item.slug}>\n              <Table.Th>\n                <div className=\"\" style={{ maxWidth: 48 }}>\n                  <Staff.Img.Thumb {...instance.cover_data} className=\"rounded\" />\n                </div>\n              </Table.Th>\n\n              <Table.Td>\n                <Staff.Link to={`${instance.slug}/`}>\n                  <div className=\"text-ellipsis\">\n                    {instance.name}\n                    <PublishedIcon show={instance.is_published} />\n                  </div>\n                </Staff.Link>\n              </Table.Td>\n\n              <Table.Td>\n                <ul>\n                  <li>Publié: {instance.published_count}</li>\n                  <li>Non-publié: {instance.draft_count}</li>\n                  <li>Total: {instance.products_count}</li>\n                </ul>\n              </Table.Td>\n            </Table.Tr>\n          );\n        }}\n      />\n\n      <Pagination {...r.data} component={Staff.Link} to />\n    </div>\n  );\n};\n\nexport * from './models';\n","import { StaffModel, StaffService } from '@miq/staffjs';\nimport { CategoryType } from '../types';\n\n\nclass StaffCategoryService extends StaffService<CategoryType> {\n  publish() {\n    return this.update({ is_published: true });\n  }\n\n  unpublish() {\n    return this.update({ is_published: true });\n  }\n}\n\nexport const StaffCategory = (data: CategoryType = {}) => {\n  let { dt_published } = data;\n  if (dt_published) dt_published = new Date(dt_published);\n\n  return StaffModel<CategoryType, StaffCategoryService>(\n    { ...data, dt_published },\n    'categories',\n    StaffCategoryService\n  );\n};\n","import React from 'react';\nimport { Button, ButtonProps, Icons, ToastEmitter } from '@miq/componentjs';\n\n// https://www.bennadel.com/blog/3961-having-fun-with-the-horizontal-usage-of-position-sticky-in-angular-11-0-5.htm\n\nimport './component.scss';\n\nimport { StaffCategory } from './Category';\nimport { StaffProduct } from './Product';\nimport { PriceDataType, ProductType } from './types';\nimport { getClassName as getCN } from '@miq/utiljs';\n\ntype InstanceType = ReturnType<typeof StaffProduct> | ReturnType<typeof StaffCategory>;\n\ninterface UpdateButtonProps extends ButtonProps {\n  instance: InstanceType;\n  onSuccess: (r: any) => void;\n}\n\nexport const PublishButton: React.FC<UpdateButtonProps> = (props) => {\n  const { instance, onClick, onSuccess, onError, ...rest } = props;\n\n  const handleClick = () => {\n    if (instance.is_published) return null;\n    return instance\n      .publish()\n      .then((res: any) => onSuccess?.(res))\n      .catch((err: any) => onError?.(err));\n  };\n\n  return <Button onClick={handleClick} className=\"btn-primary btn-md\" {...rest} disabled={instance.is_published} />;\n};\n\nexport const UnPublishButton: React.FC<UpdateButtonProps> = (props) => {\n  const { instance, onClick, onSuccess, onError, ...rest } = props;\n\n  const handleClick = () => {\n    if (!instance.is_published) return null;\n    return instance\n      .unpublish()\n      .then((res: any) => onSuccess?.(res))\n      .catch((err: any) => onError?.(err));\n  };\n\n  return <Button className=\"btn-danger btn-md\" onClick={handleClick} {...rest} disabled={!instance.is_published} />;\n};\n\n//#region ================================== COMPONENTS =============================================================\n\nexport type PriceDisplayProps = PriceDataType & {\n  className?: string;\n  sale?: string | boolean;\n  lineThrough?: string | boolean;\n};\n\nexport const PriceDisplay = ({ amountWithSymbol, className, sale, lineThrough }: PriceDisplayProps) => (\n  <div className={getCN(['miq-price-display', sale && 'text-danger', lineThrough && 'text-line-through', className])}>\n    {amountWithSymbol}\n  </div>\n);\n\nexport const ProductPriceDisplay = ({\n  retail_price_data,\n  is_on_sale,\n  sale_price_data,\n  ...props\n}: ProductType & { className?: string; style?: any }) => {\n  if (!retail_price_data) return null;\n\n  const isSale = is_on_sale && sale_price_data?.amountWithSymbol != null;\n\n  return (\n    <div className={getCN(['miq-product-price-display', props.className])} style={props.style}>\n      {isSale && <PriceDisplay sale {...sale_price_data} className=\"miq-sale-price me-1\" />}\n      <PriceDisplay {...retail_price_data} lineThrough={isSale} className=\"miq-retail-price\" />\n    </div>\n  );\n};\n\nexport const ProductSupplierData = (props: { instance: InstanceType }) => {\n  // const { instance } = props;\n\n  return (\n    <div className=\"supplier-data\">\n      <div className=\"item\">\n        <span className=\"title\">Supplier</span>\n        {/* <span className=\"value\">{instance.supplier_name}</span> */}\n      </div>\n      <div className=\"item\">\n        <span className=\"title\">Item ID</span>\n        {/* <span className=\"value\">{instance.supplier_item_id}</span> */}\n      </div>\n      <div className=\"item\">\n        <span className=\"title\">Category</span>\n        {/* <span className=\"value\">{instance.supplier_item_category}</span> */}\n      </div>\n      <div className=\"item\">\n        <span className=\"title\"> Item cost</span>\n        <span className=\"value\">{/* {instance.supplier_item_cost} ({instance.supplier_item_cost_currency}) */}</span>\n      </div>\n    </div>\n  );\n};\n\nexport const PublishedIcon = ({ show, ...props }: React.ComponentPropsWithoutRef<'svg'> & { show?: boolean }) =>\n  show ? <Icons.CheckCircle {...props} className=\"published-icon\" /> : null;\n\n//#endregion ===============================================================================================\n\nexport const toast = new ToastEmitter();\n\n{\n  /* <Toaster instance={t}></Toaster> */\n}\n// <button\n//   onClick={() => {\n//     t.info({ message: 'Hello', autoClose: true });\n//   }}\n// >\n//   Click me\n// </button>\n"],"names":["CategoryCreateForm","props","form","useForm","name","CategoryForm","context","onSubmit","e","preventDefault","StaffCategory","create","values","then","res","onSuccess","catch","err","handleError","onError","className","NameField","error","errors","value","CategoryUpdateForm","instance","isR","fields","onWillSubmit","rest","fd","forEach","field","update","placeholder","required","DescriptionField","CategoryStaffIndexView","navigate","useNavigate","useSearchParams","page","get","useRequest","list","params","refreshDeps","React","isAdding","setAdding","r","Response","isSuccess","title","back","actions","onClick","requiredPerms","border","data","slug","items","length","CategoryStaffTable","header","renderItem","item","style","maxWidth","cover_data","to","show","is_published","published_count","draft_count","products_count","component","Staff","StaffCategoryService","this","StaffService","dt_published","Date","StaffModel","PublishButton","publish","disabled","UnPublishButton","unpublish","PriceDisplay","amountWithSymbol","sale","lineThrough","getCN","ProductPriceDisplay","retail_price_data","is_on_sale","sale_price_data","isSale","PublishedIcon","ToastEmitter"],"sourceRoot":""}
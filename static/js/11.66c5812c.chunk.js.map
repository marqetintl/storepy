{"version":3,"sources":["shop/category/utils.jsx","shop/category/components.jsx","shop/category/index.jsx"],"names":["catServices","catSlug","values","oldValues","this","patchPath","path","StaffService","CatNameInput","props","TextInput","placeholder","maxLength","required","name","StaffCategoryUpdateView","lazy","CategoryCreateForm","form","useForm","context","onSubmit","e","canAdd","preventDefault","post","then","data","slug","history","push","addForwardSlash","match","url","catch","err","handleError","className","Label","value","error","errors","Submit","disabled","StaffCategoryIndexView","useState","setData","isAdding","setAdding","perms","useContext","SharedDataCtx","useEffect","list","hasPerms","title","count","back","actions","onClick","Section","results","items","renderItem","cat","Tr","Td","cover_data","to","products_count","total","published","is_published","page","pill","pagination","next","previous","onPreviousClick","get","toast","message","SHOP_MSGS","default","onNextClick","products","StaffCategoryRoutes","render","args","requiredPerms"],"mappings":"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","file":"static/js/11.66c5812c.chunk.js","sourcesContent":["import { StaffService } from '@miq/utils'\n\nclass StaffCategoryService extends StaffService {\n  patchPage(catSlug, values, oldValues) {\n    return this.patchPath(`${this.path}${catSlug}/page/`, values, oldValues)\n  }\n}\n\nexport const catServices = new StaffCategoryService('categories/')\n","import Form from '@miq/form'\n\nexport const CatNameInput = (props) => (\n  <Form.TextInput placeholder=\"Entrez le nom de la catégorie ...\" maxLength={99} {...props} required name=\"name\" />\n)\n","import React, { lazy, useContext, useEffect, useState } from 'react';\nimport { Switch, Link } from 'react-router-dom';\n\nimport Form, { useForm } from '@miq/form';\nimport { SharedDataCtx } from '@miq/contexts';\nimport { AdminRoute, AdminView, hasPerms, PublishedStatusSpan } from '@miq/adminjs';\nimport { Table, ItemTable, Button, ImgSquare } from '@miq/components';\nimport { catServices } from './utils';\nimport { addForwardSlash } from '@miq/utils';\nimport { CatNameInput } from './components';\n\n// import \"./category.scss\";\n\nconst StaffCategoryUpdateView = lazy(() => import('./UpdateView'));\n\nconst CategoryCreateForm = (props) => {\n  const form = useForm({ name: '' });\n\n  const handleSubmit = (e) => {\n    if (!props.canAdd) return;\n\n    e.preventDefault();\n\n    return catServices\n      .post(form.values)\n      .then((data = { slug }) => {\n        return props.history.push(`${addForwardSlash(props.match?.url)}${data.slug}/`);\n      })\n      .catch((err) => {\n        form.handleError(err);\n      });\n  };\n  return (\n    <Form context={form} onSubmit={handleSubmit}>\n      <div className=\"\">\n        <Form.Label value=\"Nom de la catégorie\" />\n        <CatNameInput error={form.errors.name} />\n      </div>\n\n      <div className=\"my-3\">\n        <Form.Submit value={'Save category'} disabled={!props?.canAdd} className=\"btn btn-primary\" />\n      </div>\n    </Form>\n  );\n};\n\nconst StaffCategoryIndexView = (props) => {\n  const [data, setData] = useState({});\n  const [isAdding, setAdding] = useState(false);\n  const { perms } = useContext(SharedDataCtx);\n\n  useEffect(() => {\n    catServices.list().then((data) => {\n      setData(data);\n    });\n  }, []);\n\n  const canAdd = hasPerms(perms.perms, ['shop.add_category']);\n\n  return (\n    <AdminView\n      title={`Categories (${data.count})`}\n      back={props.back}\n      actions={\n        <Button\n          onClick={() => setAdding(!isAdding)}\n          disabled={!canAdd}\n          className=\"btn-primary-3\"\n          title={canAdd ? 'Add a new category' : 'You cannot perform this action'}\n        >\n          Add category\n        </Button>\n      }\n    >\n      {isAdding && (\n        <AdminView.Section title=\"Add a category\">\n          <CategoryCreateForm history={props.history} match={props.match} canAdd={canAdd} />\n        </AdminView.Section>\n      )}\n\n      {data?.results && (\n        <AdminView.Section className=\"category-table mb-3\">\n          <ItemTable\n            className=\"w-100\"\n            items={data.results}\n            // renderItem={(item) => <CategoryRow {...props} category={item} key={item.slug} />}\n            renderItem={(cat) => {\n              return (\n                <Table.Tr className=\"border-bottom\" key={cat.slug}>\n                  <Table.Td className=\"\">\n                    <ImgSquare {...cat.cover_data} className=\"rounded\" />\n                  </Table.Td>\n\n                  <Table.Td className=\"w-100\">\n                    <Link to={`${addForwardSlash(props.match.url)}${cat.slug}/`}>\n                      <div className=\"fw-bold\" title={cat.title}>\n                        {cat.name}\n                      </div>\n                    </Link>\n                    <div className=\"text-muted text-sm\">\n                      <span className=\"me-1\">Products: {cat?.products_count?.total ?? 0}</span>\n                      <span>Published: {cat?.products_count?.published ?? 0}</span>\n                    </div>\n                  </Table.Td>\n\n                  <Table.Td className=\"d-none d-md-table-cell text-sm text-center\">\n                    <PublishedStatusSpan is_published={cat?.page?.is_published} pill />\n                  </Table.Td>\n                </Table.Tr>\n              );\n            }}\n            pagination={{\n              count: data.count,\n              next: data.next,\n              previous: data.previous,\n              onPreviousClick: () => {\n                catServices\n                  .get(data.previous)\n                  .then((data) => {\n                    setData(data);\n                  })\n                  .catch((err) => {\n                    toast?.error({ message: SHOP_MSGS.default });\n                  });\n              },\n              onNextClick: () => {\n                catServices\n                  .get(products.next)\n                  .then((data) => {\n                    setData(data);\n                  })\n                  .catch((err) => {\n                    toast?.error({ message: SHOP_MSGS.default });\n                  });\n              },\n            }}\n          />\n        </AdminView.Section>\n      )}\n    </AdminView>\n  );\n};\n\nexport default function StaffCategoryRoutes(props) {\n  const { path, url } = props.match;\n\n  return (\n    <Switch>\n      <AdminRoute\n        path={`${path}:catSlug/`}\n        render={(args) => <StaffCategoryUpdateView {...args} back={addForwardSlash(url)} />}\n        requiredPerms={['shop.change_category']}\n      />\n      <AdminRoute\n        requiredPerms={['shop.view_category']}\n        render={(args) => <StaffCategoryIndexView {...args} back={props.back} />}\n      />\n    </Switch>\n  );\n}\n"],"sourceRoot":""}
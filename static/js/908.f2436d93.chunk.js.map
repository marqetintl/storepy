{"version":3,"file":"static/js/908.f2436d93.chunk.js","mappings":"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","sources":["../../../../packages/shopy-storejs/src/Product/UpdateView.tsx","../../../../packages/shopy-storejs/src/Product/forms.tsx"],"sourcesContent":["import * as React from 'react';\nimport { useParams, useNavigate, useSearchParams } from 'react-router-dom';\n\nimport Staff from '@miq/staffjs';\nimport { useForm } from '@miq/formjs';\nimport { useRequest } from '@miq/hookjs';\nimport { Loading, QueryButton } from '@miq/componentjs';\nimport { addForwardSlash, Response } from '@miq/utiljs';\n\nimport './updateview.scss';\n\nimport { StaffProduct } from './models';\nimport { PublishButton, UnPublishButton } from '../components';\nimport {\n  ProductUpdateInfoTab,\n  ProductUpdateInventoryTab,\n  ProductUpdateMediaTab,\n  ProductUpdateSettingsTab,\n  ProductUpdateTabProps,\n} from './UpdateViewTabs';\nimport { ProductCardItem } from './components';\nimport { emitter } from '../events';\n\n//#region FIELDS\n\nconst formInfoFields = [\n  'name',\n  'category',\n  'description',\n  'retail_price',\n  'is_pre_sale',\n  'is_pre_sale_text',\n  'is_pre_sale_dt',\n  'is_on_sale',\n  'sale_price',\n];\nconst configFormFields = ['cost', 'color_group_pk', 'stage'];\nconst supplierFormFields = [\n  'supplier_name',\n  'supplier_item_id',\n  'supplier_item_sn',\n  'supplier_item_category',\n  'supplier_item_url',\n  'supplier_item_cost',\n  'supplier_item_cost_currency',\n  'supplier_order_id',\n];\nconst seoFields = ['meta_title', 'meta_description', 'meta_slug'];\nconst formFields = [...formInfoFields, ...configFormFields, ...supplierFormFields, ...seoFields];\nconst formDefaultValues: any = {\n  retail_price: 0.0,\n  is_pre_sale: false,\n  sale_price: 0.0,\n  is_on_sale: false,\n  is_published: false,\n};\nconst mapData2Values = (data: any = {}) => {\n  const values: any = {};\n  formFields.forEach((f) => {\n    const value = data?.[f];\n    if (value == null) {\n      values[f] = formDefaultValues[f] ?? '';\n      return;\n    }\n    values[f] = value;\n  });\n  return { ...formDefaultValues, ...values };\n};\n\n//#endregion FIELDS\n\n//#region ProductStaffUpdateView\n\nexport default function ProductStaffUpdateView(props: any) {\n  let { back } = props;\n  const { prodSlug } = useParams();\n  const [params] = useSearchParams();\n  const navigate = useNavigate();\n\n  const form = useForm(mapData2Values());\n  const { res, setRes, loading, ...request } = useRequest(() => StaffProduct({ slug: prodSlug }).retrieve(), {\n    refreshDeps: [prodSlug],\n    onSuccess: ({ data }) => form.setValues(mapData2Values(data)),\n    onError: ({ response }) => {\n      if (response?.status === 404) return navigate('../');\n    },\n  });\n\n  const r = new Response(res);\n  if (!r.isSuccess) return null;\n\n  if (loading) return <Loading />;\n\n  const instance = StaffProduct(r.data);\n\n  const updateData = (d: any) => {\n    request.updateData(d);\n    emitter.update(d);\n  };\n\n  const tab = params.get('tab');\n\n  const tabsProps = {\n    instance,\n    form,\n    setRes,\n    onUpdate: updateData,\n    navigate,\n    back,\n    params,\n    tab,\n    categories: r?.data?.categories,\n  };\n  const page = params.get('page');\n  return (\n    <Staff.View\n      back={`${addForwardSlash(back)}${page ? `?page=${page}` : ''}`}\n      title={<ProductCardItem data={{ ...instance.export() }} />}\n      requiredPerms={['store.change_product']}\n      className=\"product-staff-update-view\"\n    >\n      <Staff.Section\n        title={QButtons}\n        actions={\n          instance.is_published ? (\n            <UnPublishButton instance={instance} onSuccess={({ data }) => updateData(data)}>\n              Dépublier ce produit\n            </UnPublishButton>\n          ) : (\n            <PublishButton\n              instance={instance}\n              onSuccess={({ data }) => updateData(data)}\n              onError={(err) => form.handleError(err)}\n            >\n              Publier ce produit\n            </PublishButton>\n          )\n        }\n      >\n        {(() => {\n          switch (tab) {\n            case 'inventory':\n              return <ProductUpdateInventoryTab {...tabsProps} />;\n            case 'settings':\n              return <ProductUpdateSettingsTab {...tabsProps} />;\n            case 'media':\n              return <ProductUpdateMediaTab {...tabsProps} />;\n\n            default:\n              return <ProductUpdateInfoTab {...tabsProps} />;\n          }\n        })()}\n      </Staff.Section>\n    </Staff.View>\n  );\n}\n\n//#endregion ProductStaffUpdateView\n\nconst QButtons = (\n  <div className=\"query-buttons\">\n    <QueryButton index target=\"tab\" className=\"btn-md\">\n      Info\n    </QueryButton>\n    <QueryButton target=\"tab\" value=\"media\" className=\"btn-md\">\n      Media\n    </QueryButton>\n    <QueryButton target=\"tab\" value=\"inventory\" className=\"btn-md\">\n      Inventory\n    </QueryButton>\n    <QueryButton target=\"tab\" value=\"settings\" className=\"btn-md\">\n      Settings\n    </QueryButton>\n  </div>\n);\n","import * as React from 'react';\n\nimport Form, {\n  CheckboxFieldProps,\n  DescriptionField,\n  FormProps,\n  IFormCallbackProps,\n  IFormUpdateProps,\n  NameField,\n  SelectFieldProps,\n  TextChoicesType,\n  TextFieldProps,\n  useForm,\n} from '@miq/formjs';\nimport { getClassName as getCN, isRequired as isR } from '@miq/utiljs';\n\nimport { emitter } from '../events';\nimport { CategoryChoicesType } from '../types';\n\nimport { StaffProduct } from './models';\nimport { URLSearchParamsInit, useSearchParams } from 'react-router-dom';\n\n/**\n *\n */\n\ninterface IProductUpdateFormProps extends IFormUpdateProps {\n  instance: ReturnType<typeof StaffProduct>;\n  onWillSubmit?: () => void;\n  fields?: string[];\n}\n\nexport const ProductQuickUpdateForm = (\n  props: Omit<IProductUpdateFormProps, 'context'> & { categories: CategoryChoicesType }\n) => {\n  const { instance, categories, ...rest } = props;\n\n  const form = useForm({\n    name: instance.name || '',\n    category: instance.category || '',\n    description: instance.description || '',\n    retail_price: instance?.retail_price || 0.0,\n    is_pre_sale: instance.is_pre_sale || false,\n    is_pre_sale_text: instance.is_pre_sale_text || '',\n  });\n\n  const { errors } = form;\n  const { fields = ['name', 'category', 'description', 'retail_price', 'is_pre_sale', 'is_pre_sale_text'] } = props;\n\n  return (\n    <ProductUpdateForm {...rest} context={form} instance={instance} fields={fields}>\n      <ProductForm.NameField error={errors.name} />\n\n      <ProductForm.DescriptionField error={errors.description} />\n\n      <div className=\"d-grid grid-md-3 gap-2\">\n        {categories && <ProductForm.CategoryField categories={categories} error={errors.category} />}\n        <ProductForm.RetailPriceField error={errors.retail_price} />\n      </div>\n\n      <ProductForm.PresaleCheckboxField label=\"En pré-vente\" error={errors.is_pre_sale} />\n      {form.values.is_pre_sale && (\n        <ProductForm.PresaleTextField label=\"Pre-sale text\" placeholder=\"Explain ...\" error={errors.is_pre_sale_text} />\n      )}\n      <Form.Submit value=\"Sauvegarder\" className=\"btn-primary-3\" />\n    </ProductUpdateForm>\n  );\n};\n\nexport function ProductUpdateForm({ children, ...props }: IProductUpdateFormProps) {\n  const {\n    instance = isR('StaffProduct instance'),\n    fields = isR('fields instance'),\n    onSuccess,\n    onError,\n    ...rest\n  } = props;\n\n  const { context } = rest;\n\n  const handleSubmit = (e: React.FormEvent) => {\n    e.preventDefault();\n    props?.onWillSubmit?.();\n\n    const fd: any = {};\n    fields.forEach((field) => {\n      const value = context.values[field];\n      if (value == null) return;\n      if (field == 'is_pre_sale_dt' && !value) return;\n\n      fd[field] = value;\n    });\n\n    return instance\n      .update(fd)\n      .then(({ data }: any) => {\n        onSuccess?.(data);\n        emitter.update(data);\n      })\n      .catch((err: any) => {\n        if (onError) return onError(err);\n        return context.handleError(err);\n      });\n  };\n\n  return (\n    <ProductForm {...rest} onSubmit={handleSubmit}>\n      {children}\n    </ProductForm>\n  );\n}\n\n/**\n *\n */\n\nexport interface ProductCreateFormProps extends IFormCallbackProps {}\n\nexport const ProductCreateForm: React.FC<ProductCreateFormProps> = (props) => {\n  const form = useForm({ name: '', retail_price: '', description: '' });\n\n  const { errors } = form;\n\n  const handleCreate = (e: React.FormEvent) => {\n    e.preventDefault();\n    StaffProduct()\n      .create(form.values)\n      .then((res: any) => props?.onSuccess?.(res))\n      .catch((err: any) => form.handleError(err));\n  };\n\n  return (\n    <ProductForm context={form} onSubmit={handleCreate}>\n      <ProductForm.NameField label=\"Nom du produit\" error={errors.name} />\n      <ProductForm.RetailPriceField required={false} label=\"Prix du produit\" error={errors.retail_price} />\n      <ProductForm.DescriptionField label=\"Description du produit\" error={errors.description} />\n\n      <Form.Submit value=\"Sauvegarder\" className=\"btn-primary-3\" />\n    </ProductForm>\n  );\n};\n\n/**\n *\n */\n\nexport const ProductForm = (props: FormProps) => <Form {...props} />;\n\n/**\n *\n */\n\nProductForm.NameField = (props: TextFieldProps) => (\n  <NameField placeholder=\"Entrez un titre clair et concis ...\" {...props} />\n);\nProductForm.DescriptionField = (props: TextFieldProps) => (\n  <DescriptionField placeholder=\"Décrivez les caractéristiques et les avantages ...\" {...props} />\n);\n\nProductForm.CategoryField = (props: SelectFieldProps & { categories: CategoryChoicesType }) => {\n  const { label, text, error, categories, ...rest } = props;\n\n  return (\n    <Form.Field {...{ label, text, error }}>\n      <Form.Select {...rest} required name=\"category\" nullValue={{ label: 'Sélectionnez une catégorie ...' }}>\n        {categories?.items?.map((cat) => {\n          return <Form.Option {...cat} key={cat.value} />;\n        })}\n      </Form.Select>\n    </Form.Field>\n  );\n};\n\nProductForm.SalePriceField = (props: TextFieldProps) => {\n  const { label, text, error, ...rest } = props;\n  return (\n    <Form.Field {...{ label, text, error }}>\n      <Form.Text\n        aria-describedby=\"sale_price_label\"\n        min=\"0\"\n        step=\"0.01\"\n        required\n        placeholder=\"Prix réduit\"\n        {...rest}\n        type=\"number\"\n        name=\"sale_price\"\n      />\n    </Form.Field>\n  );\n};\n\nProductForm.OnSaleCheckboxField = (props: CheckboxFieldProps) => {\n  const { label, text, error, ...rest } = props;\n\n  return (\n    <Form.Field {...{ label, text, error }} checkbox>\n      <Form.Checkbox {...rest} name=\"is_on_sale\" />\n    </Form.Field>\n  );\n};\n\nProductForm.PresaleCheckboxField = (props: CheckboxFieldProps) => {\n  const { label, text, error, ...rest } = props;\n\n  return (\n    <Form.Field {...{ label, text, error }} checkbox>\n      <Form.Checkbox {...rest} name=\"is_pre_sale\" />\n    </Form.Field>\n  );\n};\n\nProductForm.PresaleTextField = (props: TextFieldProps) => {\n  const { label, text, error, ...rest } = props;\n  return (\n    <Form.Field {...{ label, text, error }}>\n      <Form.TextAreaX placeholder=\"\" {...rest} name=\"is_pre_sale_text\" aria-describedby=\"is_pre_sale_text_label\" />\n    </Form.Field>\n  );\n};\n\nProductForm.RetailPriceField = (props: TextFieldProps) => {\n  const { label, text, error, ...rest } = props;\n\n  return (\n    <Form.Field {...{ label, text, error }}>\n      <Form.Text\n        required\n        placeholder=\"Prix\"\n        aria-describedby=\"retail_price_label\"\n        min=\"0\"\n        step=\"0.01\"\n        {...rest}\n        type=\"number\"\n        name=\"retail_price\"\n      />\n    </Form.Field>\n  );\n};\n\nProductForm.StageSelectField = (props: SelectFieldProps & { stages: TextChoicesType }) => {\n  const { label, text, error, stages, ...rest } = props;\n\n  return (\n    <Form.Field {...{ label, text, error }}>\n      <Form.Select required name={'stage'} nullValue={{ label: 'Select stage' }} {...rest}>\n        {stages?.map?.((stage) => {\n          return <Form.Option {...stage} key={stage.value} />;\n        })}\n      </Form.Select>\n    </Form.Field>\n  );\n};\n\ntype ProductListFilterFormProps = {\n  children?: React.ReactNode;\n  categories?: CategoryChoicesType;\n};\n\nexport const ProductListFilterForm = ({ children, ...props }: ProductListFilterFormProps) => {\n  const [params, setParams] = useSearchParams();\n  const { categories, ...rest } = props;\n\n  return (\n    <form {...rest} action=\".\" method=\"GET\" onSubmit={(e) => e.preventDefault()}>\n      {children || (\n        <>\n          {categories && <ProductListFilterForm.Category {...{ params, setParams, categories }} />}\n          <ProductListFilterForm.Published {...{ params, setParams }} />\n          <ProductListFilterForm.Sale {...{ params, setParams }} />\n          <ProductListFilterForm.PreSale {...{ params, setParams }} />\n        </>\n      )}\n    </form>\n  );\n};\n\ntype QuerySelectFieldProps = {\n  emptyLabel?: string;\n  name: string;\n  children?: React.ReactNode;\n  params: URLSearchParams;\n  setParams: (\n    nextInit: URLSearchParamsInit,\n    navigateOptions?:\n      | {\n          replace?: boolean | undefined;\n          state?: any;\n        }\n      | undefined\n  ) => void;\n};\n\nProductListFilterForm.Category = (props: Omit<QuerySelectFieldProps, 'name'> & { categories: CategoryChoicesType }) => {\n  const { categories, ...rest } = props;\n\n  return (\n    <QuerySelectField emptyLabel=\"Categorie ...\" {...rest} name=\"cat\">\n      {categories.items.map((cat) => {\n        return (\n          <option value={cat.value} key={cat.slug}>\n            {cat.label}\n          </option>\n        );\n      })}\n    </QuerySelectField>\n  );\n};\n\nProductListFilterForm.Published = (props: Omit<QuerySelectFieldProps, 'name'>) => {\n  return (\n    <QuerySelectField emptyLabel=\"Tous les produits ...\" {...props} name=\"published\">\n      <option value=\"include\">Produits publiés</option>\n      <option value=\"exclude\">Produits non publiés</option>\n    </QuerySelectField>\n  );\n};\n\nconst QuerySelectField = ({ children, ...props }: QuerySelectFieldProps) => {\n  const { name, params, setParams, emptyLabel } = props;\n  return (\n    <select\n      className=\"miq-select\"\n      name={name}\n      value={params.get(name) || ''}\n      onChange={(e) => {\n        const { value } = e.target;\n\n        if (!value) params.delete(name);\n        else params.set(name, value);\n        params.delete('page');\n\n        setParams(params);\n      }}\n    >\n      {emptyLabel && <option value=\"\">{emptyLabel}</option>}\n      {children}\n    </select>\n  );\n};\n\nProductListFilterForm.PreSale = (props: Omit<QueryToggleFieldProps, 'name' | 'label'>) => {\n  return <QueryToggleField {...props} name=\"presale\" label=\"En pré-vente\" />;\n};\n\nProductListFilterForm.Sale = (props: Omit<QueryToggleFieldProps, 'name' | 'label'>) => {\n  return <QueryToggleField {...props} name=\"sale\" label=\"En promo\" />;\n};\n\ntype QueryToggleFieldProps = Omit<QuerySelectFieldProps, 'emptyLabel'> & { label: string; inputId?: string };\n\nconst QueryToggleField = (props: QueryToggleFieldProps) => {\n  const { label, name, params, setParams, inputId } = props;\n\n  return (\n    <div className={getCN(['miq-query-filter-toggle d-flex align-items-center'])}>\n      <input\n        type=\"checkbox\"\n        className=\"miq-checkbox me-1\"\n        id={inputId}\n        onChange={(e) => {\n          const { checked } = e.target;\n          if (!checked) params.delete(name);\n          else params.set(name, `${checked}`);\n          params.delete('page');\n          setParams(params);\n        }}\n        checked={Boolean(params.get(name)) || false}\n      />\n      <label htmlFor={inputId}>{label}</label>\n    </div>\n  );\n};\n"],"names":["formFields","formDefaultValues","retail_price","is_pre_sale","sale_price","is_on_sale","is_published","mapData2Values","data","values","forEach","f","value","ProductStaffUpdateView","props","back","prodSlug","useParams","useSearchParams","params","navigate","useNavigate","form","useForm","useRequest","StaffProduct","slug","retrieve","refreshDeps","onSuccess","setValues","onError","response","status","res","setRes","loading","request","r","Response","isSuccess","instance","updateData","d","emitter","tab","get","tabsProps","onUpdate","categories","page","addForwardSlash","title","export","requiredPerms","className","QButtons","actions","err","handleError","index","target","ProductQuickUpdateForm","rest","name","category","description","is_pre_sale_text","errors","fields","ProductUpdateForm","context","ProductForm","NameField","error","DescriptionField","CategoryField","RetailPriceField","PresaleCheckboxField","label","PresaleTextField","placeholder","children","isR","onSubmit","e","preventDefault","onWillSubmit","fd","field","update","then","catch","ProductCreateForm","create","required","text","nullValue","items","map","cat","key","SalePriceField","min","step","type","OnSaleCheckboxField","checkbox","StageSelectField","stages","stage","ProductListFilterForm","setParams","action","method","Category","Published","Sale","PreSale","QuerySelectField","emptyLabel","onChange","set","delete","QueryToggleField","inputId","getCN","id","checked","Boolean","htmlFor"],"sourceRoot":""}
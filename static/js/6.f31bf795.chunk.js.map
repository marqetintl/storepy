{"version":3,"sources":["shop/product/utils.jsx","shop/product/components.jsx","shop/orders/components.jsx","shop/product/forms.jsx","shop/orders/forms.jsx","shop/orders/UpdateView.jsx"],"names":["productServices","prodSlug","this","patchPath","path","unpublish","values","postPath","attrSlug","oldValues","deletePath","imgSlug","slug","StaffService","QueryFilterSelect","children","props","name","pushOnChange","emptyLabel","history","query","URL","window","location","href","searchParams","className","getClassName","value","get","onChange","e","target","set","delete","push","pathname","pushQuery","QueryFilterToggle","label","inputId","getWindowQuery","type","id","checked","Boolean","htmlFor","ProductListFilterForm","action","method","onSubmit","preventDefault","CategorySelect","items","map","cat","PublishedSelect","PreSaleToggle","SaleToggle","Select","Toggle","ProductImageAltTextInput","image","alt_text","form","useForm","setValues","useEffect","required","onSuccess","onError","placeholder","StaffProductDeleteButton","onClick","then","catch","err","StaffProductPublishButton","product","toast","page","is_published","onPublishSuccess","onUnpublishSuccess","data","error","message","SHOP_MSGS","default","publish","response","retail_price","category","publish_error_retail_price","handleError","publish_error_category","publish_error_page","ProductImageUploadButton","multiple","onCreate","imgsArray","filter","img","patch","images","onCreateSuccess","onCreateError","SupplierData","supplier_name","supplier_item_id","supplier_item_category","supplier_item_cost","supplier_item_cost_currency","supplier_item_url","rel","isRequired","ProductNameInput","showLabel","input","rest","Label","TextInput","maxLength","ProductCategoryInput","categories","SelectInput","nullValue","Option","key","ProductRetailPriceInput","min","step","ProductPresaleCheckboxInput","CheckboxInput","ProductPresaleTextInput","TextAreaX","ProductOnSaleCheckboxInput","ProductSalePriceInput","ProductForm","context","fields","onWillSubmit","fD","forEach","field","NameInput","DescField","text","Field","CategoryInput","RetailPriceInput","PresaleCheckboxInput","PresaleTextInput","OnSaleCheckboxInput","SalePriceInput","StageSelect","stages","stage","SupplierProductAddForm","order_slug","useState","isLoading","setLoading","url","Section","title","includes","supOrderServices","getSheinProductData","setValue","setErrors","errors","disabled","Submit","formDefault","order_id","items_stage","currency","is_paid","total_cost","SupplierOrderStaffUpdateView","sOrderSlug","match","params","order","setOrder","products","setProducts","useContext","ToastCtx","detail","status","search","URLSearchParams","published","presale","sale","list","supplier_order_slug","handleSubmit","Array","isArray","val","success","update_success","update_error","filterProps","back","SHOP_PATHS","orderList","actions","create_success","count","results","addOrUpdateArrayObject","removeItem","i","orderSlug","style","position","top","OrderItemListSection","selected","setSelected","item","isSelected","onUpdate","next","previous","onPreviousClick","onNextClick","OrderItem","loading","setError","is_pre_sale","is_pre_sale_text","cover_data","add_to_cart_count","minWidth","minHeight","pill","short","productUpdate"],"mappings":"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","file":"static/js/6.f31bf795.chunk.js","sourcesContent":["import { StaffService } from '@miq/utils';\n\nclass StaffProductService extends StaffService {\n  publish(prodSlug) {\n    return this.patchPath(`${this.path}${prodSlug}/publish/`, {});\n  }\n\n  unpublish(prodSlug) {\n    return this.patchPath(`${this.path}${prodSlug}/publish/`, { unpublish: true });\n  }\n\n  // ATTR\n\n  postAttribute(prodSlug, values) {\n    return this.postPath(`${this.path}${prodSlug}/attribute/new/`, values);\n  }\n\n  patchAttribute(prodSlug, attrSlug, values, oldValues) {\n    return this.patchPath(`${this.path}${prodSlug}/attribute/${attrSlug}/`, values, oldValues);\n  }\n\n  deleteAttribute(prodSlug, attrSlug) {\n    return this.deletePath(`${this.path}${prodSlug}/attribute/${attrSlug}/`);\n  }\n\n  // PAGE\n\n  patchPage(prodSlug, values, oldValues) {\n    return this.patchPath(`${this.path}${prodSlug}/page/`, values, oldValues);\n  }\n\n  // COVER\n\n  swapCover(prodSlug, imgSlug) {\n    return this.patchPath(`${this.path}${prodSlug}/swap-cover/`, { slug: imgSlug });\n  }\n}\n\nexport const productServices = new StaffProductService('products/');\n","import React, { useEffect } from 'react';\nimport PropTypes from 'prop-types';\n\nimport { productServices } from './utils';\nimport {\n  useForm,\n  FormProvider,\n  ImgUploadButton,\n  ImageAltTextInput,\n  Button,\n  getClassName,\n  getWindowQuery,\n} from 'src/exports';\n\n//#region FILTERS\n\nconst QueryFilterSelect = ({ children, ...props }) => {\n  const { name, pushOnChange = true, emptyLabel = 'Select', history } = props;\n  const query = new URL(window.location.href).searchParams;\n\n  const handleChange = (e) => {\n    const { value } = e.target;\n    if (!value) {\n      query.delete(name);\n    } else {\n      query.set(name, value);\n    }\n    query.delete('page');\n    pushOnChange && pushQuery(query);\n  };\n\n  function pushQuery(query) {\n    const path = new URL(window.location.href);\n    history.push(`${path.pathname}?${query}`);\n  }\n\n  return (\n    <select\n      className={getClassName(['miq-select', props.className])}\n      value={query.get(name) || ''}\n      onChange={handleChange}\n    >\n      <option value=\"\">{emptyLabel}</option>\n      {children}\n    </select>\n  );\n};\n\nQueryFilterSelect.propTypes = {\n  children: PropTypes.any,\n  name: PropTypes.string.isRequired,\n  history: PropTypes.any.isRequired,\n  pushOnChange: PropTypes.any,\n  emptyLabel: PropTypes.string,\n};\n\nconst QueryFilterToggle = (props) => {\n  const { label, name, history, pushOnChange = true, inputId, className } = props;\n  const query = getWindowQuery();\n\n  const handleChange = ({ target }) => {\n    const { checked } = target;\n    if (!checked) {\n      query.delete(name);\n    } else {\n      query.set(name, checked);\n      query.delete('page');\n    }\n    pushOnChange && pushQuery(query);\n  };\n\n  function pushQuery() {\n    const path = new URL(window.location.href);\n    history.push(`${path.pathname}?${query}`);\n  }\n\n  return (\n    <div className={getClassName(['miq-query-filter-toggle d-flex align-items-center', className])}>\n      <input\n        type=\"checkbox\"\n        className=\"miq-checkbox\"\n        id={inputId}\n        className=\"me-1\"\n        onChange={handleChange}\n        checked={Boolean(query.get(name)) || false}\n      />\n      <label htmlFor={inputId}>{label}</label>\n    </div>\n  );\n};\n\nQueryFilterToggle.propTypes = {\n  name: PropTypes.string.isRequired,\n  history: PropTypes.any.isRequired,\n  inputId: PropTypes.string,\n  className: PropTypes.string,\n};\n\nexport const ProductListFilterForm = ({ children, className }) => {\n  return (\n    <form action=\".\" method=\"GET\" className={className} onSubmit={(e) => e.preventDefault()}>\n      {children}\n    </form>\n  );\n};\n\nconst CategoryFilterSelect = ({ items, ...props }) => {\n  return (\n    <QueryFilterSelect {...props} name=\"cat\">\n      {items?.map((cat) => (\n        <option value={cat.value} key={cat.slug}>\n          {cat.label}\n        </option>\n      ))}\n    </QueryFilterSelect>\n  );\n};\n\nconst PublishedFilterSelect = (props) => {\n  return (\n    <QueryFilterSelect {...props} name=\"published\">\n      <option value=\"include\">Produits publiés</option>\n      <option value=\"exclude\">Produits non publiés</option>\n    </QueryFilterSelect>\n  );\n};\n\nconst PreSaleFilterToggle = (props) => {\n  return <QueryFilterToggle {...props} name=\"presale\" />;\n};\n\nconst SaleFilterToggle = (props) => {\n  return <QueryFilterToggle {...props} name=\"sale\" />;\n};\n\nProductListFilterForm.CategorySelect = CategoryFilterSelect;\nProductListFilterForm.PublishedSelect = PublishedFilterSelect;\nProductListFilterForm.PreSaleToggle = PreSaleFilterToggle;\nProductListFilterForm.SaleToggle = SaleFilterToggle;\nProductListFilterForm.Select = QueryFilterSelect;\nProductListFilterForm.Toggle = QueryFilterToggle;\n//#endregion FILTERS\n\n//#region ProductImageAltTextInput\n\nexport const ProductImageAltTextInput = ({ image, ...props }) => {\n  const alt_text = image?.alt_text || '';\n\n  const form = useForm({ alt_text });\n\n  const imgSlug = image?.slug;\n  const setValues = form.setValues;\n\n  useEffect(() => {\n    setValues({ alt_text });\n  }, [imgSlug, setValues, alt_text]);\n\n  if (!image || !image.slug) return null;\n\n  return (\n    <FormProvider value={form} className={props.className}>\n      <ImageAltTextInput\n        required\n        image={image}\n        onSuccess={props.onSuccess}\n        onError={props.onError}\n        placeholder=\"Add an alternative text ...\"\n      />\n    </FormProvider>\n  );\n};\n\nProductImageAltTextInput.propTypes = {\n  image: PropTypes.shape({\n    slug: PropTypes.string.isRequired,\n  }),\n\n  onUpdate: PropTypes.func,\n  onError: PropTypes.func,\n};\n\n//#endregion ProductImageAltTextInput\n\n//#region BUTTONS > >\n\n//#region StaffProductDeleteButton\n\n/**\n * Delete a product\n * Usage:\n * ```js\n * <StaffProductDeleteButton label=\"Delete me!\" prodSlug='123' onSuccess={()=>{}} onError={()=>{}} className=\"btn-danger-3\" />\n * ```\n *\n * @param {Object} props\n * @param {string} props.label\n * @param {string} props.prodSlug\n * @param {Function} props.onSuccess\n * @param {Function} props.onError\n * @param {string=} props.className\n * @param {string=} props.id\n * @augments {Component<Props, State>}\n */\nexport const StaffProductDeleteButton = ({ prodSlug, ...props }) => {\n  if (!prodSlug) return null;\n  const { className = 'btn-danger', label, onSuccess, onError } = props;\n  return (\n    <Button\n      id={props.id}\n      className={className}\n      onClick={() => {\n        return productServices\n          .delete(prodSlug)\n          .then(() => onSuccess?.({ prodSlug }))\n          .catch((err) => onError?.(err));\n      }}\n    >\n      {label || 'Supprimer cet article'}\n    </Button>\n  );\n};\n//#endregion StaffProductDeleteButton\n\n//#region StaffProductPublishButton\n\n/**\n * Button component for publishing a product\n * ```js\n * <StaffProductPublishButton\n *  product={product}\n *  prodSlug='slug'\n *  product={{slug: 'slug', page:{slug:'pageSlug'}}}\n *  onPublishSuccess={(data) => setProduct(data)}\n *  onUnpublishSuccess={(data) => setProduct(data)}\n *  onUnpublishSuccess={(err) => setError(err)}\n * />\n * ```\n * @param {Object} props\n * @param {string} props.prodSlug - slug of the product: required\n * @param {Object} props.product - product object\n * @param {Object} props.form - product form\n * @param {Function} props.onPublishSuccess publish success callback\n * @param {Function} props.onUnpublishSuccess unpublish success callback\n * @param {Function} props.onError\n * @param {Object} props.toast\n * @param {string} props.className\n * @param {string} props.id\n * @augments {Component<Props, State>}\n *\n */\n\nexport function StaffProductPublishButton(props) {\n  const { prodSlug, product, toast, ...rest } = props;\n  if (!prodSlug || !product?.page) return null;\n\n  const { is_published } = product.page;\n  const { form, onPublishSuccess, onUnpublishSuccess, onError } = props;\n\n  const handlePublish = () => {\n    if (is_published)\n      return productServices\n        .unpublish(prodSlug)\n        .then((data) => onUnpublishSuccess?.(data))\n        .catch((err) => {\n          return toast?.error({ message: SHOP_MSGS.default });\n        });\n\n    return productServices\n      .publish(prodSlug)\n      .then((data) => onPublishSuccess?.(data))\n      .catch((err) => {\n        const { response = {} } = err;\n\n        if (!response.data) {\n          toast?.error({ message: SHOP_MSGS.default });\n        }\n        const { retail_price, category, page } = response.data;\n\n        if (retail_price) {\n          toast?.error({ message: SHOP_MSGS.product.publish_error_retail_price });\n        }\n        if (category) {\n          if (form) form.handleError(err);\n          toast?.error({ message: SHOP_MSGS.product.publish_error_category });\n        }\n        if (page) {\n          toast?.error({ message: SHOP_MSGS.product.publish_error_page });\n        }\n        return onError?.(err);\n      });\n  };\n\n  return (\n    <Button\n      id={props.id}\n      onClick={handlePublish}\n      className={getClassName([\n        'staff-product-publish-button',\n        is_published ? 'btn-danger' : 'btn-primary',\n        props.className,\n      ])}\n    >\n      {is_published ? 'Unpublish' : 'Publish'} product\n    </Button>\n  );\n}\n\nStaffProductPublishButton.propTypes = {\n  /** product slug */\n  prodSlug: PropTypes.string.isRequired,\n  /** product data */\n  product: PropTypes.shape({ page: PropTypes.shape({ is_published: PropTypes.bool }).isRequired }).isRequired,\n  /** if props.form: calls form.handleError whenever applicable BEFORE calling props.onError */\n  form: PropTypes.object,\n  onPublishSuccess: PropTypes.func,\n  onUnpublishSuccess: PropTypes.func,\n  onError: PropTypes.func,\n};\n\n//#endregion\n\n//#region ProductImageUploadButton\n\n/**\n * Upload a product image\n * Usage:\n * ```js\n * <ProductImageUploadButton product={{prodData}} />\n * ```\n *\n * @param {Object} props\n * @param {Object} props.product\n * @param {bool} props.multiple\n * @param {Function} props.onCreate\n * @param {Function} props.onCreateSuccess\n * @param {Function} props.onCreateError\n * @augments {ImgUploadButton<Props, State>}\n */\n\nexport const ProductImageUploadButton = ({ product, ...props }) => {\n  if (!product || !product.slug) return null;\n\n  return (\n    <ImgUploadButton\n      multiple={true}\n      className=\"btn-primary-3\"\n      onCreate={(imgsArray) => {\n        imgsArray = imgsArray.filter((img) => img && img.slug);\n        return productServices\n          .patch(product.slug, { images: [...product.images, ...imgsArray.map((img) => img.slug)] })\n          .then((data) => {\n            if (props.onCreateSuccess) props.onCreateSuccess(data);\n          })\n          .catch((err) => {\n            if (props.onCreateError) props.onCreateError(err);\n          });\n      }}\n    />\n  );\n};\n//#endregion ProductImageButton\n\n//#region ProductCoverUploadButton\nexport const ProductCoverUploadButton = ({ children, product, ...props }) => {\n  if (!product || !product.slug) return null;\n\n  const handleCoverCreate = ({ slug }) => {\n    productServices\n      .patch(product.slug, { cover: slug })\n      .then((data) => {\n        if (props.onCreateSuccess) props.onCreateSuccess(data);\n      })\n      .catch((err) => {\n        if (props.onCreateError) props.onCreateError(err);\n      });\n  };\n  const handleCoverUpdate = (imgData) => {\n    if (props.onUpdateSuccess) props.onUpdateSuccess(imgData);\n  };\n\n  return (\n    <ImgUploadButton\n      slug={product.cover_data ? product.cover_data.slug : null}\n      onCreate={handleCoverCreate}\n      onUpdate={handleCoverUpdate}\n      className=\"product-cover-upload-button\"\n    >\n      {children}\n    </ImgUploadButton>\n  );\n};\nProductCoverUploadButton.propTypes = {\n  children: PropTypes.any.isRequired,\n  product: PropTypes.shape({ slug: PropTypes.string.isRequired }).isRequired,\n  onCreateSuccess: PropTypes.func,\n  onCreateError: PropTypes.func,\n  onUpdateSuccess: PropTypes.func,\n  onUpdateError: PropTypes.func,\n};\n//#endregion ProductCoverUploadButton\n\n//#endregion BUTTONS\n","export const SupplierData = ({ product, ...props }) => {\n  if (!product) return null;\n\n  return (\n    <div className=\"product-supplier-data\">\n      <ul>\n        <li>\n          <span className=\"\">Supplier</span>\n          <span className=\"\">{product.supplier_name}</span>\n        </li>\n        <li>\n          <span className=\"\">Item id</span>\n          <span className=\"\">{product.supplier_item_id}</span>\n        </li>\n        <li>\n          <span className=\"\">Category</span>\n          <span className=\"\">{product.supplier_item_category}</span>\n        </li>\n\n        <li>\n          <span className=\"\">Item cost</span>\n          <span className=\"\">\n            {product.supplier_item_cost} ({product.supplier_item_cost_currency})\n          </span>\n        </li>\n        <li>\n          <a href={product.supplier_item_url} className=\"text-underline\" target=\"_blank\" rel=\"noopener noreferrer\">\n            View supplier page\n          </a>\n        </li>\n      </ul>\n    </div>\n  );\n};\n","import { useEffect } from 'react';\nimport { AdminView, PublishedStatusSpan } from '@miq/adminjs';\nimport Form from '@miq/form';\nimport { isRequired } from '@miq/utils';\nimport { productServices } from './utils';\nimport { SHOP_MSGS } from '../constants';\n\nconst isR = isRequired;\n\nexport function ProductQuickUpdateForm({ form, product, ...props }) {\n  const { setProduct, toast, categories } = props;\n  const productSlug = product?.slug;\n\n  useEffect(() => {}, [productSlug]);\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    const fD = {\n      name: form.values.name,\n      retail_price: form.values.retail_price,\n      is_on_sale: form.values.is_on_sale,\n      is_pre_sale: form.values.is_pre_sale,\n    };\n\n    if (form.values.category) fD.category = form.values.category;\n    if (form.values.is_on_sale) fD.sale_price = form.values.sale_price;\n\n    if (form.values.is_pre_sale) fD.is_pre_sale_text = form.values.is_pre_sale_text;\n\n    return productServices\n      .patch(product.slug, fD)\n      .then((data) => {\n        setProduct?.({ ...product, ...data });\n        toast?.success({ message: SHOP_MSGS.product.update_success });\n      })\n      .catch((err) => {\n        toast?.error({ message: SHOP_MSGS.product.update_error });\n        return form.handleError(err);\n      });\n  };\n\n  return (\n    <ProductForm context={form} onSubmit={handleSubmit} className=\"quick-product-update-form\">\n      <div className=\"d-grid grid-md-3 gap-3\">\n        <div className=\"span-md-2\">\n          <AdminView.Section\n            title=\"Details\"\n            actions={<PublishedStatusSpan is_published={product?.page?.is_published} pill />}\n          >\n            <div className=\"mb-1\">\n              <ProductNameInput error={form.errors.name} />\n            </div>\n\n            {categories && (\n              <div className=\"mb-1\">\n                <ProductCategoryInput categories={categories} error={form?.errors?.category} />\n              </div>\n            )}\n\n            <div className=\"mb-1\">\n              <div className=\"mb-1\">\n                <ProductRetailPriceInput error={form?.errors?.retail_price} />\n              </div>\n\n              {/* PRE SALE */}\n              <div className=\"mb-1\">\n                <div className=\"d-flex align-items-center mb-1\">\n                  <ProductPresaleCheckboxInput error={form?.errors?.is_pre_sale} />\n                </div>\n\n                {form.values.is_pre_sale && (\n                  <div className=\"mb-2\">\n                    <ProductPresaleTextInput error={form?.errors?.is_pre_sale_text} />\n                  </div>\n                )}\n              </div>\n\n              {/* SALE  */}\n              <div className=\"d-flex align-items-center mb-1\">\n                <ProductOnSaleCheckboxInput error={form?.errors?.is_on_sale} />\n              </div>\n\n              {form.values.is_on_sale && (\n                <div className=\"mb-2\">\n                  <ProductSalePriceInput error={form?.errors?.sale_price} />\n                </div>\n              )}\n            </div>\n\n            <div className=\"my-3\">\n              <Form.Submit value=\"Update product\" className=\"btn btn-primary-3\" />\n            </div>\n          </AdminView.Section>\n        </div>\n      </div>\n    </ProductForm>\n  );\n}\n\n//#region INPUTS\n\nexport const ProductNameInput = (props) => {\n  const { showLabel = false, label = 'Name', ...input } = props;\n  const { placeholder = 'Give a name to the item', ...rest } = input;\n  return (\n    <>\n      {showLabel && <Form.Label value={label} className=\"mb-1\" />}\n      <Form.TextInput {...rest} required name=\"name\" placeholder={placeholder} maxLength={99} />\n    </>\n  );\n};\n\nexport const ProductDescriptionField = (props) => {\n  const { label, text, ...input } = props;\n  const { placeholder = 'Give a description to the item', ...rest } = input;\n  return (\n    <Form.Field {...{ label, text }}>\n      <Form.TextAreaX\n        {...rest}\n        name=\"description\"\n        // error={form.errors.description}\n        placeholder={placeholder}\n      />\n    </Form.Field>\n  );\n};\n\nexport const ProductCategoryInput = (props) => {\n  const { showLabel = false, label = 'Category', ...input } = props;\n  const { categories, ...rest } = input;\n\n  return (\n    <>\n      {showLabel && <Form.Label value={label} />}\n      <Form.SelectInput {...rest} required name=\"category\" nullValue={{ label: 'Sélectionnez une catégorie' }}>\n        {categories?.items?.map((cat) => {\n          return <Form.SelectInput.Option {...cat} key={cat.value} />;\n        })}\n      </Form.SelectInput>\n    </>\n  );\n};\n\nexport const ProductRetailPriceInput = (props) => {\n  const { showLabel = false, label = 'Retail price', ...rest } = props;\n\n  return (\n    <>\n      {showLabel && <Form.Label value={label} id=\"retail_price_label\" />}\n      <Form.TextInput\n        {...rest}\n        required\n        type=\"number\"\n        name=\"retail_price\"\n        aria-describedby=\"retail_price_label\"\n        min=\"0\"\n        step=\"0.01\"\n      />\n    </>\n  );\n};\n\nexport const ProductPresaleCheckboxInput = (props) => {\n  const { showLabel = false, label = 'Pre-sale', ...rest } = props;\n\n  return (\n    <div className=\"d-flex align-items-center\">\n      <Form.CheckboxInput {...rest} name=\"is_pre_sale\" className=\"me-2\" />\n      <Form.Label value={label} />\n    </div>\n  );\n};\n\nexport const ProductPresaleTextInput = (props) => {\n  return (\n    <>\n      <Form.Label value=\"Pre sale text\" id=\"is_pre_sale_text_label\" className=\"miq-checkbox-label\" />\n      <Form.TextAreaX name=\"is_pre_sale_text\" aria-describedby=\"is_pre_sale_text_label\" />\n    </>\n  );\n};\n\nexport const ProductOnSaleCheckboxInput = (props) => {\n  const { showLabel = false, label = 'On Sale', ...rest } = props;\n\n  return (\n    <div className=\"d-flex align-items-center\">\n      <Form.CheckboxInput {...rest} name=\"is_on_sale\" className=\"me-2\" />\n      <Form.Label value={label} />\n    </div>\n  );\n};\n\nexport const ProductSalePriceInput = (props) => {\n  const { showLabel = false, label = 'Sale price', ...rest } = props;\n  return (\n    <>\n      {showLabel && <Form.Label value={label} id=\"sale_price_label\" className=\"miq-checkbox-label\" />}\n      <Form.TextInput\n        {...rest}\n        required\n        type=\"number\"\n        name=\"sale_price\"\n        aria-describedby=\"sale_price_label\"\n        min=\"0\"\n        step=\"0.01\"\n      />\n    </>\n  );\n};\n\nexport const ProductStageSelect = (props) => {\n  const { showLabel = false, label = 'Stage', ...input } = props;\n  const { stages, name, ...rest } = input;\n\n  return (\n    <>\n      {showLabel && <Form.Label value={label} />}\n      <Form.SelectInput {...rest} required name={name || 'stage'} nullValue={{ label: 'Select stage' }}>\n        {stages?.map?.((stage) => {\n          return <Form.SelectInput.Option {...stage} key={stage.value} />;\n        })}\n      </Form.SelectInput>\n    </>\n  );\n};\n\n//#endregion INPUTS\n\n//#region FORMS\n\nexport const ProductForm = ({ children, context, fields = [], prodSlug, ...props }) => {\n  const { onWillSubmit, onSuccess, onError, ...rest } = props;\n\n  const handleSubmit = (e) => {\n    if (!context || !fields) return;\n\n    onWillSubmit?.();\n\n    e.preventDefault();\n    const fD = {\n      // name: context.values.name,\n      // retail_price: form.values.retail_price,\n      // is_on_sale: form.values.is_on_sale,\n      // is_pre_sale: form.values.is_pre_sale,\n    };\n\n    fields.forEach((field) => {\n      const value = context.values[field];\n      if (value == null) return;\n      fD[field] = value;\n    });\n\n    // if (form.values.category) fD.category = form.values.category;\n    // if (form.values.is_on_sale) fD.sale_price = form.values.sale_price;\n\n    // if (form.values.is_pre_sale) fD.is_pre_sale_text = form.values.is_pre_sale_text;\n    if (!prodSlug) return;\n\n    return productServices\n      .patch(prodSlug, fD)\n      .then((data) => {\n        props?.onSuccess?.(data);\n      })\n      .catch((err) => {\n        if (props.onError) return props.onError(err);\n        return context.handleError(err);\n      });\n  };\n  return (\n    <Form {...rest} context={context} onSubmit={props.onSubmit || handleSubmit}>\n      {children}\n    </Form>\n  );\n};\n\nProductForm.NameInput = ProductNameInput;\nProductForm.DescField = ProductDescriptionField;\nProductForm.CategoryInput = ProductCategoryInput;\nProductForm.RetailPriceInput = ProductRetailPriceInput;\nProductForm.PresaleCheckboxInput = ProductPresaleCheckboxInput;\nProductForm.PresaleTextInput = ProductPresaleTextInput;\nProductForm.OnSaleCheckboxInput = ProductOnSaleCheckboxInput;\nProductForm.SalePriceInput = ProductSalePriceInput;\nProductForm.StageSelect = ProductStageSelect;\n\n//#endregion\n","import { useState } from 'react';\n\nimport { AdminView } from '@miq/adminjs';\nimport Form, { useForm } from '@miq/form';\nimport { supOrderServices } from './utils';\n\nexport const SupplierProductAddForm = ({ order_slug, ...props }) => {\n  const [isLoading, setLoading] = useState(false);\n\n  const form = useForm({\n    supplier_name: 'shein',\n    url: '',\n  });\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n\n    setLoading(true);\n\n    const { url } = form.values;\n\n    switch (form.values.supplier_name) {\n      case 'zara':\n        return null;\n\n      default:\n        if (!url.includes('shein')) return null;\n        return supOrderServices\n          .getSheinProductData(order_slug, { url })\n          .then((data) => {\n            setLoading(false);\n            form.setValue('url', '');\n            return props?.onSuccess(data);\n          })\n          .catch((err) => {\n            form.setErrors({ ...form.errors, url: 'Something went wrong.' });\n            setLoading(false);\n            return props?.onError?.(err);\n          });\n    }\n  };\n\n  return (\n    <AdminView.Section title={props?.title || 'Ajouter un produit'} className=\"supplier-product-add-section mt-3\">\n      <Form context={form} onSubmit={handleSubmit} className=\"supplier-product-add-form\">\n        {isLoading && <div className=\"my-3\">Getting product data. Please wait ...</div>}\n\n        <div className=\"d-flex flex-column flex-md-row\">\n          <Form.TextInput\n            required\n            name=\"url\"\n            type=\"url\"\n            error={form.errors.url}\n            placeholder=\"Add product source url ...\"\n            className=\"me-1\"\n            disabled={isLoading}\n          />\n\n          <Form.Submit value=\"Get data\" className=\"btn btn-primary-3\" disabled={isLoading} />\n        </div>\n      </Form>\n    </AdminView.Section>\n  );\n};\n","import { useContext, useEffect, useState } from 'react';\n\nimport { AdminView, PublishedStatusSpan } from '@miq/adminjs';\nimport Form, { useForm } from '@miq/form';\nimport { ToastCtx } from '@miq/components';\nimport { ImgSquare, Pagination } from '@miq/components';\nimport { addOrUpdateArrayObject } from '@miq/utils';\n\nimport { supOrderServices } from './utils';\nimport { SupplierProductAddForm } from './forms';\nimport { ProductForm } from '../product/forms';\nimport { SupplierData } from './components';\nimport { SHOP_MSGS, SHOP_PATHS } from '../constants';\nimport { productServices } from '../product/utils';\nimport { Loading } from 'src/exports';\nimport { ProductListFilterForm as FilterForm, StaffProductDeleteButton } from '../product/components';\n\nconst formDefault = {\n  order_id: '',\n  items_stage: '',\n  currency: '',\n  is_paid: false,\n  total_cost: '',\n};\n\nexport default function SupplierOrderStaffUpdateView(props) {\n  const { sOrderSlug } = props.match.params;\n\n  const [order, setOrder] = useState({});\n  const [products, setProducts] = useState({});\n\n  const toast = useContext(ToastCtx);\n\n  const form = useForm(formDefault);\n  const { setValues } = form;\n\n  useEffect(() => {\n    if (!sOrderSlug) return;\n    return supOrderServices\n      .detail(sOrderSlug)\n      .then((data) => {\n        setOrder(data);\n\n        setValues({\n          order_id: data.order_id || '',\n          items_stage: data.items_stage || '',\n          currency: data.currency || '',\n          is_paid: data.is_paid || false,\n          total_cost: data.total_cost || '',\n        });\n      })\n      .catch((err) => {\n        if (err.response) {\n          if (err.response.status === 404) {\n            return;\n          }\n        }\n      });\n  }, [sOrderSlug, setValues]);\n\n  const { search } = props.location;\n  const query = new URLSearchParams(search);\n  const cat = query.get('cat');\n  const published = query.get('published');\n  const presale = query.get('presale');\n  const sale = query.get('sale');\n\n  useEffect(() => {\n    if (!sOrderSlug) return;\n\n    return productServices\n      .list({ supplier_order_slug: sOrderSlug, cat, published, presale, sale })\n      .then((data) => {\n        setProducts(data);\n      })\n      .catch((err) => {\n        // console.log(err);\n      });\n  }, [sOrderSlug, cat, published, presale, sale]);\n\n  if (!sOrderSlug || !order) return null;\n\n  const handleSubmit = (e, fields) => {\n    e.preventDefault();\n\n    let fD = {};\n    if (Array.isArray(fields)) {\n      fields.forEach((field) => {\n        const val = form.values[field];\n        if (val == null) return;\n        fD[field] = val;\n      });\n    } else fD = { ...form.values };\n\n    supOrderServices\n      .patch(sOrderSlug, fD)\n      .then(() => {\n        toast.success({ message: SHOP_MSGS.order.update_success });\n      })\n      .catch((err) => {\n        toast.error({ message: SHOP_MSGS.order.update_error });\n        form.handleError(err);\n      });\n  };\n\n  const removeItem = (slug) =>\n    setProducts({ ...products, count: products.count - 1, results: products.results.filter((i) => i.slug !== slug) });\n\n  const filterProps = { history: props.history };\n\n  return (\n    <AdminView\n      back={SHOP_PATHS.orderList()}\n      title=\"Modifier une commande\"\n      actions={<div></div>}\n      className=\"supplier-order-update-view\"\n    >\n      <div className=\"d-grid grid-md-3 gap-3\">\n        <div className=\"span-md-2\">\n          <SupplierProductAddForm\n            order_slug={sOrderSlug}\n            onSuccess={(product) => {\n              toast.success({ message: SHOP_MSGS.product.create_success });\n              return setProducts({\n                ...products,\n                count: products.count + 1,\n                results: addOrUpdateArrayObject(products.results, product),\n              });\n            }}\n          />\n\n          <div className=\"mb-2\">\n            <FilterForm>\n              <div className=\"d-grid grid-md-4 gap-2\">\n                <FilterForm.CategorySelect\n                  {...filterProps}\n                  items={products?.categories?.items}\n                  emptyLabel=\"Filtrer par catégorie\"\n                />\n                <FilterForm.PublishedSelect {...filterProps} emptyLabel=\"Filtrer par status\" />\n                <FilterForm.PreSaleToggle {...filterProps} label=\"En pré-vente\" />\n                <FilterForm.SaleToggle {...filterProps} label=\"En promo\" />\n              </div>\n            </FilterForm>\n          </div>\n\n          <OrderItemListSection\n            {...props}\n            order={order}\n            products={products}\n            setProducts={setProducts}\n            removeItem={removeItem}\n            orderSlug={order.slug}\n          />\n        </div>\n\n        {/* SIDEBAR */}\n\n        <div className=\"\">\n          <div className=\"\" style={{ position: 'sticky', top: 0 }}>\n            <Form context={form} onSubmit={handleSubmit} className=\"order-update-form\">\n              <AdminView.Section title=\"Order details\">\n                <ul className=\"mb-3\">\n                  <li className=\"\">Product: {products.count}</li>\n                </ul>\n                <div className=\"mb-1\">\n                  <Form.Label value=\"Order Id\" className=\"mb-1\" />\n                  <Form.TextInput\n                    required\n                    name=\"order_id\"\n                    error={form.errors.order_id}\n                    placeholder=\"Order iD\"\n                    maxLength={99}\n                  />\n                </div>\n                <div className=\"d-flex align-items-center mb-1\">\n                  <Form.CheckboxInput name=\"is_paid\" error={form.errors.is_paid} className=\"me-2\" />\n                  <Form.Label value=\"Paid\" />\n                </div>\n                {form.values.is_paid && (\n                  <div className=\"mb-1\">\n                    <Form.Label value=\"Total cost\" id=\"total_cost_label\" />\n                    <Form.TextInput\n                      required\n                      type=\"number\"\n                      name=\"retailtotal_cost_price\"\n                      error={form.errors.total_cost}\n                      aria-describedby=\"total_cost_label\"\n                      min=\"0\"\n                      step=\"0.01\"\n                    />\n                  </div>\n                )}\n                <div className=\"\">\n                  <Form.Submit value=\"Save\" className=\"btn btn-primary-3\" />\n                </div>\n              </AdminView.Section>\n            </Form>\n\n            <Form context={form} onSubmit={(e) => handleSubmit(e, ['items_stage'])} className=\"order-update-form\">\n              <AdminView.Section title=\"Stage\" text=\"This will update the stage of all products in this order.\">\n                <ProductForm.StageSelect\n                  name=\"items_stage\"\n                  stages={order?.stages}\n                  error={form.errors.items_stage}\n                  showLabel={false}\n                  className=\"mb-1\"\n                />\n\n                <div className=\"\">\n                  <Form.Submit value=\"Save\" className=\"btn btn-primary-2\" />\n                </div>\n              </AdminView.Section>\n            </Form>\n          </div>\n        </div>\n      </div>\n    </AdminView>\n  );\n}\n\nconst OrderItemListSection = (props) => {\n  const [selected, setSelected] = useState([]);\n\n  const { toast, order, products, setProducts } = props;\n\n  return (\n    <AdminView.Section className=\"order-items mb-3\">\n      {products?.results?.map((item) => {\n        const isSelected = selected.includes(item.slug);\n\n        return (\n          <div className=\"\" key={item.slug}>\n            <div className=\"\">\n              <input\n                type=\"checkbox\"\n                checked={isSelected}\n                onChange={() => {\n                  if (isSelected) setSelected(selected.filter((i) => i !== item.slug));\n                  else setSelected([...selected, item.slug]);\n                }}\n              />\n            </div>\n\n            <OrderItem\n              {...props}\n              item={item}\n              toast={toast}\n              categories={order.categories}\n              onUpdate={(data) => {\n                setProducts({\n                  ...products,\n                  results: products.results.map((i) => {\n                    if (i.slug === data.slug) return data;\n                    return i;\n                  }),\n                });\n              }}\n            />\n          </div>\n        );\n      })}\n      <Pagination\n        count={products.count}\n        next={products.next}\n        previous={products.previous}\n        onPreviousClick={() => {\n          productServices\n            .get(products.previous)\n            .then((data) => {\n              setProducts(data);\n            })\n            .catch((err) => {\n              toast?.error({ message: SHOP_MSGS.default });\n            });\n        }}\n        onNextClick={() => {\n          productServices\n            .get(products.next)\n            .then((data) => {\n              setProducts(data);\n            })\n            .catch((err) => {\n              toast?.error({ message: SHOP_MSGS.default });\n            });\n        }}\n      />\n    </AdminView.Section>\n  );\n};\n\nconst OrderItem = ({ item, ...props }) => {\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(false);\n  const form = useForm({\n    name: item.name || '',\n    category: item.category || '',\n    retail_price: item?.retail_price || 0.0,\n    supplier_item_cost: item?.supplier_item_cost || 0.0,\n    is_pre_sale: item.is_pre_sale || false,\n    is_pre_sale_text: item.is_pre_sale_text || '',\n  });\n\n  if (!item?.slug) return null;\n\n  const handleUpdate = (data) => {\n    setLoading(false);\n    return props?.onUpdate(data);\n  };\n\n  const { errors } = form;\n  return (\n    <div className=\"order-item mb-2 border-1 rounded p-1\">\n      {error && <div className=\"text-danger\">Something went wrong.</div>}\n\n      <div className=\"d-grid grid-md-3 gap-2\">\n        <ProductForm\n          context={form}\n          prodSlug={item.slug}\n          fields={['name', 'category', 'retail_price', 'is_pre_sale', 'is_pre_sale_text', 'supplier_item_cost']}\n          className=\"order-item-form span-md-2 d-grid grid-md-3 gap-1\"\n          onWillSubmit={() => setLoading(true)}\n          onSuccess={handleUpdate}\n          onError={(err) => {\n            setLoading(false);\n            return form.handleError(err);\n          }}\n        >\n          <div className=\"span-md-3 d-flex align-items-center\">\n            <ImgSquare {...item.cover_data} className=\"rounded\" />\n            <ProductForm.NameInput error={errors.name} className=\"ms-1\" />\n          </div>\n\n          <div className=\"\">\n            <ProductForm.CategoryInput categories={props?.categories} error={errors.category} />\n          </div>\n          <div className=\"\">\n            <ProductForm.RetailPriceInput error={errors.retail_price} />\n          </div>\n          <div className=\"\">\n            <Form.TextInput\n              type=\"number\"\n              name=\"supplier_item_cost\"\n              error={errors.supplier_item_cost}\n              min=\"0\"\n              step=\"0.01\"\n            />\n          </div>\n\n          <div className=\"span-md-3\">\n            <div className=\"mb-1\">\n              <ProductForm.PresaleCheckboxInput error={errors.is_pre_sale} />\n            </div>\n\n            {form.values.is_pre_sale && (\n              <div className=\"mb-1\">\n                <ProductForm.PresaleTextInput error={errors.is_pre_sale_text} />\n              </div>\n            )}\n\n            <div className=\"d-flex justify-content-between align-items-center\">\n              <StaffProductDeleteButton\n                prodSlug={item.slug}\n                onSuccess={() => {\n                  props?.removeItem?.(item.slug);\n                }}\n                onError={() => setError(true)}\n                className=\"btn-danger-3\"\n                label=\"Supprimer\"\n              />\n              <Form.Submit value=\"Sauveguarder\" className=\"submit-btn btn btn-primary min-w-35\" />\n            </div>\n          </div>\n        </ProductForm>\n\n        <div className=\"\">\n          <div className=\"d-flex align-items-center justify-content-between\">\n            <div title=\"Add to cart count\">atc: {item.add_to_cart_count}</div>\n            <div style={{ minWidth: 23, minHeight: 23 }}>\n              {loading ? (\n                <Loading className=\"icon small\" />\n              ) : (\n                <PublishedStatusSpan is_published={item?.page?.is_published} pill short />\n              )}\n            </div>\n          </div>\n\n          <SupplierData product={item} />\n\n          <a\n            href={SHOP_PATHS.productUpdate(item.slug)}\n            target=\"_blank\"\n            className=\"update-btn btn btn-primary-3 w-100 d-block text-center\"\n          >\n            Go to update page »\n          </a>\n        </div>\n      </div>\n    </div>\n  );\n};\n"],"sourceRoot":""}
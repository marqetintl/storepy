{"version":3,"sources":["../../../../packages/miq-sharedjs/src/editor/src/Section/JumbotronSection/index.jsx"],"names":["JumbotronEditForm","data","isRequired","props","form","useForm","title","text","className","section","imgSlug","image","slug","onCreate","onDataChange","onUpdate","TitleInput","TextInput","onClick","evt","html","render","values","sectionServices","patch","then","res","JumbotronSection","forwardRef","ref","id","getClassName","Icon","Icons","TextareaT","context","isEdit","dangerouslySetInnerHTML","__html","label","IS_DEV","displayName"],"mappings":"4PAiBMA,EAAoB,SAAC,GAAqD,IAAD,IAAlDC,YAAkD,MAA3CC,WAAW,gBAAgC,EAAZC,EAAY,iBACvEC,EAAOC,YAAQ,CAAEC,MAAOL,EAAKK,OAAS,GAAIC,KAAMN,EAAKM,MAAQ,KAUnE,OACE,cAAC,IAAD,CAAiBH,KAAMA,EAAvB,SACE,sBAAKI,UAAU,SAAf,UACE,qBAAKA,UAAU,OAAf,SACE,cAAC,IAAD,CACEC,QAASR,EACTS,QAAST,EAAKU,MAAQV,EAAKU,MAAMC,KAAO,KACxCC,SAAUV,EAAMW,aAChBC,SAAUZ,EAAMW,aAJlB,SAME,cAAC,IAAD,eAASb,EAAKU,YAGlB,sBAAKH,UAAU,SAAf,UACE,qBAAKA,UAAU,OAAf,SACE,cAAC,IAAgBQ,WAAjB,MAEF,qBAAKR,UAAU,OAAf,SACE,cAAC,IAAgBS,UAAjB,MAGF,qBAAKT,UAAU,GAAf,SACE,cAAC,IAAD,CAAQA,UAAU,gBAAgBU,QA9BvB,SAACC,GAEpB,IAAMC,EAAOC,YAAO,2BAAKpB,GAASG,EAAKkB,SACvC,OAAOC,IAAgBC,MAAMvB,EAAKW,KAA3B,2BAAsCR,EAAKkB,QAA3C,IAAmDF,SAAQnB,GAAMwB,MAAK,SAACC,GACxEvB,EAAMW,cAAcX,EAAMW,aAAaY,OA0BrC,6BAUNC,EAAmBC,sBAAW,SAACzB,EAAO0B,GACX1B,EAAvBF,KAAuBE,EAAjBW,aAEd,OACE,sBAAKgB,GAAI3B,EAAM2B,GAAUD,MAAOrB,UAAWuB,YAAa,CAAC5B,EAAMK,YAA/D,UACE,cAAC,IAAD,CAAewB,KAAMC,IAAMC,YAE3B,cAAC,IAAD,UACG/B,EAAMgC,QAAQC,OACb,cAACpC,EAAD,eAAuBG,IAEvB,qBAAKkC,wBAAyB,CAAEC,OAAQnC,EAAMF,KAAKmB,MAAQ,0BAI/D,cAAC,IAAD,UACE,sBAAKZ,UAAU,UAAf,UACE,cAAC,IAAD,CAAqB2B,QAAShC,EAAMgC,QAASlC,KAAME,EAAMF,KAAMsC,MAAM,WAErE,cAAC,IAAD,CAAmBJ,QAAShC,EAAMgC,QAASlC,KAAME,EAAMF,kBAOlD0B,YAMXa,MACFb,EAAiBc,YAAc","file":"static/js/7.b82d410f.chunk.js","sourcesContent":["import PropTypes from 'prop-types';\n\nimport { getClassName, IS_DEV } from '@miq/utils';\nimport { forwardRef } from 'react';\nimport { Icons, Img, Button } from '@miq/components';\nimport Form, { FormProvider, useForm } from '@miq/form';\nimport { SectionDeleteButton, SectionEditButton, SectionEditForm, SectionImgUploadButton } from '../section-components';\nimport { SectionBody, SectionFooter, SectionHeader } from '../section-ui';\n\nimport './jumb-section.scss';\nimport render from '../section-renderers';\nimport { sectionRequiredProps, sectionServices } from '../utils';\n\n/**\n * JUMBOTRON SECTION\n */\n\nconst JumbotronEditForm = ({ data = isRequired('section data'), ...props }) => {\n  const form = useForm({ title: data.title || '', text: data.text || '' });\n\n  const handleSubmit = (evt) => {\n    // evt.preventDefault();\n    const html = render({ ...data, ...form.values });\n    return sectionServices.patch(data.slug, { ...form.values, html }, data).then((res) => {\n      if (props.onDataChange) props.onDataChange(res);\n    });\n  };\n\n  return (\n    <SectionEditForm form={form}>\n      <div className=\"d-flex\">\n        <div className=\"me-1\">\n          <SectionImgUploadButton\n            section={data}\n            imgSlug={data.image ? data.image.slug : null}\n            onCreate={props.onDataChange}\n            onUpdate={props.onDataChange}\n          >\n            <Img {...data.image} />\n          </SectionImgUploadButton>\n        </div>\n        <div className=\"flex-1\">\n          <div className=\"mb-1\">\n            <SectionEditForm.TitleInput />\n          </div>\n          <div className=\"mb-1\">\n            <SectionEditForm.TextInput />\n          </div>\n\n          <div className=\"\">\n            <Button className=\"btn-primary-2\" onClick={handleSubmit}>\n              Save\n            </Button>\n          </div>\n        </div>\n      </div>\n    </SectionEditForm>\n  );\n};\n\nconst JumbotronSection = forwardRef((props, ref) => {\n  const { data, onDataChange } = props;\n\n  return (\n    <div id={props.id} {...{ ref }} className={getClassName([props.className])}>\n      <SectionHeader Icon={Icons.TextareaT}></SectionHeader>\n\n      <SectionBody>\n        {props.context.isEdit ? (\n          <JumbotronEditForm {...props} />\n        ) : (\n          <div dangerouslySetInnerHTML={{ __html: props.data.html || 'Nothing to preview' }} />\n        )}\n      </SectionBody>\n\n      <SectionFooter>\n        <div className=\"actions\">\n          <SectionDeleteButton context={props.context} data={props.data} label=\"Delete\" />\n\n          <SectionEditButton context={props.context} data={props.data} />\n        </div>\n      </SectionFooter>\n    </div>\n  );\n});\n\nexport default JumbotronSection;\n\nJumbotronSection.propTypes = {\n  ...sectionRequiredProps,\n};\n\nif (IS_DEV) {\n  JumbotronSection.displayName = 'JumbotronSection';\n}\n"],"sourceRoot":""}
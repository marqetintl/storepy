{"version":3,"file":"static/js/631.b8fa2626.chunk.js","mappings":"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","sources":["../../../../packages/miq-socialjs/src/CaptionRoutes.tsx","../../../../packages/miq-socialjs/src/models.ts"],"sourcesContent":["import React from 'react';\nimport { Link, Route, Routes, useParams } from 'react-router-dom';\n\nimport { useRequest } from '@miq/hookjs';\nimport { FormFieldProps } from '@miq/formjs';\nimport Staff from '@miq/staffjs';\n\nimport Form, { useForm } from '@miq/formjs';\nimport { Response } from '@miq/utiljs';\nimport { Caption, CaptionType } from './models';\n\nexport default function CaptionRoutes() {\n  const { res, setRes } = useRequest(() => Caption().list());\n\n  const r = new Response(res);\n  if (!r.isSuccess) return null;\n\n  return (\n    <Staff.View\n      title=\"Captions\"\n      actions={\n        <Link to=\"new/\" className=\"btn btn-primary-3\">\n          Add caption\n        </Link>\n      }\n    >\n      <div className=\"d-grid grid-md-11\">\n        <div className=\"span-md-5\">\n          {r.items.map((item: CaptionType) => {\n            const instance = Caption(item);\n            return (\n              <Link to={`${item.slug}/`} key={item.slug}>\n                <div className=\"mb-3\">\n                  {instance.text}\n                  <div className=\"text-sm text-muted\">{instance.template}</div>\n                </div>\n              </Link>\n            );\n          })}\n        </div>\n\n        <div className=\"span-md-6\">\n          <Routes>\n            <Route\n              path=\"new/\"\n              element={\n                <Staff.View title=\"Add a new caption\">\n                  <CaptionCreateForm\n                    onSuccess={(newRes: any) => {\n                      setRes({ ...res, data: { ...res.data, results: [newRes.data, ...res.data.results] } });\n                    }}\n                  />\n                </Staff.View>\n              }\n            />\n            <Route path=\":capSlug/\" element={<CaptionUpdateForm />} />\n          </Routes>\n        </div>\n      </div>\n    </Staff.View>\n  );\n}\n\nconst CaptionUpdateForm = (props: any) => {\n  const { capSlug } = useParams();\n\n  const form = useForm({ text: '', template: '' });\n  const { res } = useRequest(() => Caption({ slug: capSlug }).retrieve(), {\n    refreshDeps: [capSlug],\n    onSuccess: (res) => form.setValues({ text: res.data.text, template: res.data.template }),\n  });\n\n  const r = new Response(res);\n  if (!r.isSuccess) return null;\n\n  const instance = Caption(r.data);\n  const { text, template } = instance;\n\n  return (\n    <Form\n      context={form}\n      onSubmit={(e) => {\n        e.preventDefault();\n        const { onSuccess, onError } = props;\n        instance\n          .patch(form.values, { text, template })\n          .then((res) => onSuccess?.(res))\n          .catch((err) => onError?.(err));\n      }}\n    >\n      <CaptionTextField {...{ form }} />\n      <CaptionTemplateField {...{ form }} />\n\n      <Form.Submit value=\"Update caption\" className=\"btn-primary-3 btn-md\" />\n    </Form>\n  );\n};\n\nconst CaptionCreateForm = (props: any) => {\n  const { onSuccess, onError } = props;\n  const form = useForm({ text: '', template: '' });\n\n  return (\n    <Form\n      context={form}\n      onSubmit={(e) => {\n        e.preventDefault();\n        Caption()\n          .retrieve(form.values)\n          .then((res) => onSuccess?.(res))\n          .catch((err) => onError?.(err));\n      }}\n    >\n      <CaptionTextField {...{ form }} />\n      <CaptionTemplateField {...{ form }} />\n\n      <Form.Submit value=\"Save caption\" className=\"btn-primary-3 btn-md\" />\n    </Form>\n  );\n};\n\nconst CaptionTextField = (props: FormFieldProps & { form: any }) => {\n  const { form, label = 'Text' } = props;\n  return (\n    <Form.Field label={label} text=\"Enter the text verbatim.\" error={form.errors.text}>\n      <Form.TextAreaX required name=\"text\" />\n    </Form.Field>\n  );\n};\n\nconst CaptionTemplateField = (props: FormFieldProps & { form: any }) => {\n  const { form, label = 'Template' } = props;\n  return (\n    <Form.Field label={label} error={form?.errors?.template}>\n      <Form.TextAreaX name=\"template\" />\n    </Form.Field>\n  );\n};\n","import { StaffModel } from '@miq/staffjs';\n\nexport type CaptionType = {\n  slug?: string;\n  text?: string;\n  template?: string;\n  use_count?: number;\n  score?: number;\n};\n\nexport const Caption = (data: CaptionType) => StaffModel<CaptionType>(data, 'social-post-texts');\n\nexport type HashtagType = {\n  slug?: string;\n  name?: string;\n};\n\nexport const Hashtag = (data: HashtagType) => StaffModel<HashtagType>(data, 'social-hashtags');\n"],"names":["CaptionRoutes","useRequest","Caption","list","res","setRes","r","Response","isSuccess","title","actions","to","className","items","map","item","instance","slug","text","template","path","element","CaptionCreateForm","onSuccess","newRes","data","results","CaptionUpdateForm","props","capSlug","useParams","form","useForm","retrieve","refreshDeps","setValues","context","onSubmit","e","preventDefault","onError","patch","values","then","catch","err","CaptionTextField","CaptionTemplateField","value","label","error","errors","required","name","StaffModel","Hashtag"],"sourceRoot":""}
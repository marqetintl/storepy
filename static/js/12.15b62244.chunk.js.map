{"version":3,"sources":["shop/product/components.jsx","shop/product/Attribute.jsx","shop/product/UpdateView.jsx"],"names":["ProductNameInput","onSuccess","onError","props","product","placeholder","form","rest","Label","value","className","TextInput","required","name","onSave","slug","productServices","patch","then","data","catch","err","error","errors","maxLength","ProductUpdateForm","children","context","NameInput","ProductImageUploadButton","multiple","onCreate","imgsArray","filter","img","images","map","onCreateSuccess","onCreateError","ProductImageAltTextInput","image","useForm","alt_text","SupplierData","supplier_name","supplier_item_id","supplier_item_category","supplier_item_cost","supplier_item_cost_currency","href","supplier_item_url","target","rel","AttrNameInput","minLength","AttrValueInput","AttributeUpdateForm","instance","onSubmit","e","preventDefault","patchAttribute","values","handleError","style","alignItems","Icon","Icons","Trash","render","args","onClick","deleteAttribute","setOpen","toast","message","renderHeader","Submit","AttributeCreateForm","initValues","postAttribute","setValues","type","ViewTabs","tab","prodSlug","setProduct","useState","addAtr","setAddAtr","Section","title","text","actions","productData","attributes","attr","pData","gap","images_data","label","i","fD","slug_public","patchPage","page","success","TextAreaX","description","productFormDefaultValues","category","retail_price","is_pre_sale","is_pre_sale_text","sale_price","is_on_sale","ProductUpdateView","match","params","setTab","useContext","ToastCtx","useEffect","detail","response","status","console","log","back","is_published","pill","SelectInput","nullValue","categories","items","cat","Option","key","id","min","step","CheckboxInput","cover","cover_data","imgData","onUpdate","onDelete","getClassName","ProductPublishButton","publish"],"mappings":"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","file":"static/js/12.15b62244.chunk.js","sourcesContent":["import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nimport Form, { useForm, FormProvider } from \"@miq/form\";\nimport { ImageAltTextInput } from \"@miq/adminjs\";\nimport { ImgUploadButton } from \"@miq/components\";\nimport { productServices } from \"./utils\";\n\n//\n// ========================= FORM COMPONENTS ===================================================================\n//\n\nexport const ProductCategoryInput = ({ onSuccess, onError, ...props }) => {\n  const { placeholder = \"Give a name to the item\", form } = props;\n  if (!form) return null;\n\n  return (\n    <>\n      <Form.Label value=\"Name\" className=\"mb-1\" />\n      <Form.TextInput {...props} name=\"name\" error={form.errors.name} placeholder={placeholder} maxLength={99} />\n    </>\n  );\n};\n\nexport const ProductNameInput = ({ onSuccess, onError, ...props }) => {\n  const { product, placeholder = \"Give a name to the item\", form, ...rest } = props;\n\n  if (!form) return null;\n\n  return (\n    <>\n      <Form.Label value=\"Name\" className=\"mb-1\" />\n      <Form.TextInput\n        {...rest}\n        required\n        name=\"name\"\n        onSave={({ value }) => {\n          if (!value || !product || !product.slug) return;\n\n          return productServices\n            .patch(product.slug, { name: value }, { name: product.name })\n            .then((data) => {\n              if (onSuccess) return onSuccess(data);\n            })\n            .catch((err) => {\n              if (onError) return onError(err);\n            });\n        }}\n        error={form.errors.name}\n        placeholder={placeholder}\n        maxLength={99}\n      />\n    </>\n  );\n};\n\nexport const ProductUpdateForm = ({ children, form, ...props }) => {\n  if (!form) return null;\n  return (\n    <Form {...props} context={form}>\n      {children}\n    </Form>\n  );\n};\n\nProductUpdateForm.NameInput = ProductNameInput;\n\nexport const ProductImageUploadButton = ({ product, ...props }) => {\n  if (!product || !product.slug) return null;\n\n  return (\n    <ImgUploadButton\n      multiple={true}\n      className=\"btn-primary-3\"\n      onCreate={(imgsArray) => {\n        imgsArray = imgsArray.filter((img) => img && img.slug);\n        return productServices\n          .patch(product.slug, { images: [...product.images, ...imgsArray.map((img) => img.slug)] })\n          .then((data) => {\n            if (props.onCreateSuccess) props.onCreateSuccess(data);\n          })\n          .catch((err) => {\n            if (props.onCreateError) props.onCreateError(err);\n          });\n      }}\n    />\n  );\n};\n\nexport const ProductImageAltTextInput = ({ image, ...props }) => {\n  const form = useForm({ alt_text: image?.alt_text || \"\" });\n\n  if (!image || !image.slug) return null;\n\n  return (\n    <FormProvider value={form} className={props.className}>\n      <ImageAltTextInput\n        required\n        image={image}\n        onSuccess={props.onSuccess}\n        onError={props.onError}\n        placeholder=\"Add an alternative text ...\"\n      />\n    </FormProvider>\n  );\n};\n\nProductImageAltTextInput.propTypes = {\n  image: PropTypes.shape({\n    slug: PropTypes.string.isRequired,\n  }),\n\n  onUpdate: PropTypes.func,\n  onError: PropTypes.func,\n};\n\nexport const ProductCoverUploadButton = ({ children, product, ...props }) => {\n  if (!product || !product.slug) return null;\n\n  const handleCoverCreate = ({ slug }) => {\n    productServices\n      .patch(product.slug, { cover: slug })\n      .then((data) => {\n        if (props.onCreateSuccess) props.onCreateSuccess(data);\n      })\n      .catch((err) => {\n        if (props.onCreateError) props.onCreateError(err);\n      });\n  };\n  const handleCoverUpdate = (imgData) => {\n    if (props.onUpdateSuccess) props.onUpdateSuccess(imgData);\n  };\n\n  return (\n    <ImgUploadButton\n      slug={product.cover_data ? product.cover_data.slug : null}\n      onCreate={handleCoverCreate}\n      onUpdate={handleCoverUpdate}\n      className=\"product-cover-upload-button\"\n    >\n      {children}\n    </ImgUploadButton>\n  );\n};\n\nProductCoverUploadButton.propTypes = {\n  children: PropTypes.any.isRequired,\n  product: PropTypes.shape({ slug: PropTypes.string.isRequired }).isRequired,\n  onCreateSuccess: PropTypes.func,\n  onCreateError: PropTypes.func,\n  onUpdateSuccess: PropTypes.func,\n  onUpdateError: PropTypes.func,\n};\n\nexport const SupplierData = ({ product, ...props }) => {\n  if (!product) return null;\n\n  return (\n    <div className=\"product-supplier-data\">\n      <ul>\n        <li>\n          <span className=\"\">Supplier</span>\n          <span className=\"\">{product.supplier_name}</span>\n        </li>\n        <li>\n          <span className=\"\">Item id</span>\n          <span className=\"\">{product.supplier_item_id}</span>\n        </li>\n        <li>\n          <span className=\"\">Category</span>\n          <span className=\"\">{product.supplier_item_category}</span>\n        </li>\n\n        <li>\n          <span className=\"\">Item cost</span>\n          <span className=\"\">\n            {product.supplier_item_cost} ({product.supplier_item_cost_currency})\n          </span>\n        </li>\n        <li>\n          <a href={product.supplier_item_url} className=\"text-underline\" target=\"_blank\" rel=\"noopener noreferrer\">\n            View supplier page\n          </a>\n        </li>\n      </ul>\n    </div>\n  );\n};\n","import { useContext, useState } from \"react\";\n\nimport { IBtnSave, ConfirmIconButton, Icons, Button } from \"@miq/components\";\n\nimport Form, { useForm } from \"@miq/form\";\nimport { productServices } from \"./utils\";\n\nconst AttrNameInput = (props) => (\n  <Form.TextInput placeholder=\"Nom de l'attribut\" {...props} required name=\"name\" maxLength={30} minLength={3} />\n);\n\nconst AttrValueInput = (props) => (\n  <Form.TextInput placeholder=\"Valeur de l'attribut\" {...props} required name=\"value\" maxLength={99} minLength={3} />\n);\n\nexport const AttributeUpdateForm = ({ instance, product, ...props }) => {\n  const form = useForm({ name: instance?.name || \"\", value: instance?.value || \"\" });\n\n  if (!instance || !instance.slug || !product || !product.slug) return null;\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n\n    return productServices\n      .patchAttribute(product.slug, instance.slug, form.values)\n      .then((data) => {\n        return props?.onSuccess(data);\n      })\n      .catch((err) => {\n        return form.handleError(err);\n      });\n  };\n\n  return (\n    <Form context={form} onSubmit={handleSubmit}>\n      <div className=\"d-flex flex-column flex-md-row\" style={{ alignItems: \"end\" }}>\n        <div className=\"me-md-1\">\n          <AttrNameInput error={form.errors.name} />\n        </div>\n\n        <div className=\"w-100 me-md-1\">\n          <AttrValueInput error={form.errors.value} />\n        </div>\n\n        <div className=\"d-flex ms-md-1\">\n          <ConfirmIconButton\n            Icon={Icons.Trash}\n            render={(args) => (\n              <div className=\"p-3 w-100 d-flex justify-content-center\">\n                <div className=\"w-md-50 d-flex align-items-center justify-content-between\">\n                  <div>\n                    <Button\n                      onClick={() =>\n                        productServices\n                          .deleteAttribute(product.slug, instance.slug)\n                          .then((data) => {\n                            args?.setOpen(false);\n                            return props?.onSuccess(data);\n                          })\n                          .catch(() => {\n                            props?.toast?.error({ message: \"Could not delete attribute.\" });\n                          })\n                      }\n                      className=\"btn-danger\"\n                    >\n                      Supprimer\n                    </Button>\n                  </div>\n                  <div>\n                    <Button onClick={() => args?.setOpen(false)}>Annuler</Button>\n                  </div>\n                </div>\n              </div>\n            )}\n            renderHeader={(args) => {\n              return (\n                <div className=\"p-3\">\n                  <div className=\"fw-bold\">Supprimer l'attribut \"{instance.name}\"</div>\n                </div>\n              );\n            }}\n            className=\"btn-danger-3 me-1\"\n          />\n          <Form.Submit value=\"Save\" className=\"btn btn-primary-2\" />\n        </div>\n      </div>\n    </Form>\n  );\n};\n\nexport function AttributeCreateForm({ product, ...props }) {\n  const initValues = { name: \"\", value: \"\" };\n  const form = useForm(initValues);\n\n  if (!product || !product.slug) return null;\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    // if (form.hasErrors()) return;\n\n    return productServices\n      .postAttribute(product.slug, form.values)\n      .then((data) => {\n        form.setValues(initValues);\n        return props?.onSuccess(data);\n      })\n      .catch((err) => {\n        return form.handleError(err);\n      });\n  };\n\n  // const invalidAttrNames = product?.attributes?.map((at) => at.name) || [];\n\n  return (\n    <Form context={form} onSubmit={handleSubmit}>\n      <div className=\"d-flex flex-column flex-md-row\" style={{ alignItems: \"end\" }}>\n        <div className=\"me-md-1\">\n          <Form.Label value=\"Name\" />\n          <AttrNameInput error={form.errors.name} />\n        </div>\n\n        <div className=\"w-100 me-md-1\">\n          <Form.Label value=\"Value\" />\n          <AttrValueInput error={form.errors.value} />\n        </div>\n\n        <div className=\"ms-md-1\">\n          <IBtnSave type=\"submit\" className=\"btn-primary-3\" />\n        </div>\n      </div>\n    </Form>\n  );\n}\n","import { useContext, useEffect, useState } from \"react\";\n\nimport { AdminView, StaffCoverUpdateForm, PublishedStatusSpan } from \"@miq/adminjs\";\nimport Form, { useForm } from \"@miq/form\";\nimport { getClassName } from \"@miq/utils\";\nimport { ToastCtx, Button, Img, ImgDeleteIconButton } from \"@miq/components\";\n\nimport { productServices } from \"./utils\";\nimport { ProductImageAltTextInput, ProductUpdateForm, ProductImageUploadButton, SupplierData } from \"./components\";\nimport { AttributeCreateForm, AttributeUpdateForm } from \"./Attribute\";\n\nconst ViewTabs = ({ tab, ...props }) => {\n  const { prodSlug, product, setProduct, form, toast } = props;\n  const [addAtr, setAddAtr] = useState(false);\n\n  switch (tab) {\n    case \"inventory\":\n      const { supplier_name } = product;\n      return (\n        <div className=\"d-flex flex-column flex-md-row\">\n          <div className=\"flex-1\">\n            <AdminView.Section title=\"Sizes\" text=\"Add sizes\"></AdminView.Section>\n            <AdminView.Section\n              title=\"Attributes\"\n              actions={\n                <Button onClick={() => setAddAtr(!addAtr)} className=\"btn-primary-3\">\n                  Ajouter attribut\n                </Button>\n              }\n            >\n              {addAtr && (\n                <div className=\"border-bottom mb-2 pb-3\">\n                  <p className=\"text-center mb-3\">Ajouter un attribut au produit.</p>\n                  <AttributeCreateForm\n                    product={product}\n                    onSuccess={(productData) => setProduct({ ...product, ...productData })}\n                  />\n                </div>\n              )}\n\n              <div className=\"my-3\">\n                {product.attributes.map((attr) => (\n                  <div className=\"mb-1\" key={attr.slug}>\n                    <AttributeUpdateForm\n                      instance={attr}\n                      product={product}\n                      onSuccess={(pData) => setProduct({ ...product, ...pData })}\n                    />\n                  </div>\n                ))}\n              </div>\n            </AdminView.Section>\n          </div>\n\n          <div className=\"w-md-35 ms-md-2\">\n            <SupplierData product={product} />\n          </div>\n        </div>\n      );\n    case \"imgs\":\n      return (\n        <AdminView.Section\n          title=\"Images\"\n          text=\"Add images to your product\"\n          actions={\n            <ProductImageUploadButton\n              product={product}\n              onCreateSuccess={(data) => {\n                setProduct({ ...product, ...data });\n              }}\n            />\n          }\n        >\n          <div className=\"d-grid grid-md-3 grid-lg-4\" style={{ gap: 4 }}>\n            {product.images_data.map((img) => (\n              <div className=\"mb-1\" key={img.slug}>\n                <Img {...img} className=\"product-img\" />\n\n                <div className=\"d-flex\">\n                  <ProductImageAltTextInput image={img} />\n                  <ImgDeleteIconButton\n                    slug={img.slug}\n                    label=\"\"\n                    className=\"btn-danger-3 ms-1\"\n                    onSuccess={() => {\n                      setProduct({\n                        ...product,\n                        images_data: product.images_data.filter((i) => i.slug !== img.slug),\n                        images: product.images.filter((i) => i !== img.slug),\n                      });\n                    }}\n                  />\n                </div>\n              </div>\n            ))}\n          </div>\n        </AdminView.Section>\n      );\n\n    case \"seo\":\n      return (\n        <Form\n          context={form}\n          onSubmit={(e) => {\n            e.preventDefault();\n            const fD = { title: form.values.title, slug_public: form.values.slug_public };\n\n            return productServices\n              .patchPage(prodSlug, fD, { title: product?.page?.title, slug_public: product?.page?.slug_public })\n              .then((data) => {\n                setProduct({ ...product, ...data });\n                toast.success({ message: \"Product page updated.\" });\n              })\n              .catch((err) => {\n                form.handleError(err);\n                toast.error({ message: \"Could not update.\" });\n              });\n          }}\n        >\n          <AdminView.Section title=\"Seo\">\n            <div className=\"mb-1\">\n              <Form.Label value=\"Meta title\" className=\"mb-1\" />\n              <Form.TextInput\n                required\n                name=\"title\"\n                error={form.errors.title}\n                placeholder=\"Give a name to the item\"\n                maxLength={99}\n              />\n            </div>\n            <div className=\"mb-1\">\n              <Form.Label value=\"Slug\" className=\"mb-1\" />\n              <Form.TextInput\n                required\n                name=\"slug_public\"\n                error={form.errors.slug_public}\n                placeholder={\"Write slug ...\"}\n                maxLength={99}\n              />\n            </div>\n\n            <div className=\"my-2\">\n              <Form.Submit value=\"Update\" className=\"btn btn-primary-3\" />\n            </div>\n          </AdminView.Section>\n        </Form>\n      );\n\n    default:\n      return (\n        <div>\n          <AdminView.Section title=\"Description\">\n            <ProductUpdateForm form={form}>\n              <Form.TextAreaX\n                name=\"description\"\n                onSave={({ name, value }) =>\n                  productServices\n                    .patch(product.slug, { [name]: value }, { [name]: product[name] })\n                    .then((data) => {\n                      setProduct({ ...product, ...data });\n                      toast.success({ message: \"Product updated.\" });\n                    })\n                    .catch((err) => {\n                      form.handleError(err);\n                      toast.error({ message: \"Could not update item.\" });\n                    })\n                }\n                error={form.errors.description}\n                placeholder=\"Give a description to the item\"\n              />\n            </ProductUpdateForm>\n          </AdminView.Section>\n\n          <div className=\"\">\n            <ProductPublishButton product={product} setProduct={setProduct} toast={toast} />\n          </div>\n        </div>\n      );\n  }\n};\n\nconst productFormDefaultValues = {\n  name: \"\",\n  description: \"\",\n  title: \"\",\n  category: \"\",\n  slug_public: \"\",\n  retail_price: 0.0,\n  is_pre_sale: false,\n  is_pre_sale_text: \"\",\n  sale_price: 0.0,\n  is_on_sale: false,\n};\n\nexport default function ProductUpdateView(props) {\n  const { prodSlug } = props.match.params;\n\n  const [product, setProduct] = useState(null);\n  const [tab, setTab] = useState(\"info\");\n  const toast = useContext(ToastCtx);\n\n  const form = useForm(productFormDefaultValues);\n  const { setValues } = form;\n\n  useEffect(() => {\n    productServices\n      .detail(prodSlug)\n      .then((data) => {\n        setProduct(data);\n        setValues({\n          name: data.name || \"\",\n          description: data.description || \"\",\n          category: data.category || \"\",\n          retail_price: data?.retail_price || 0.0,\n          // PRESALE\n          is_pre_sale: data.is_pre_sale || false,\n          is_pre_sale_text: data.is_pre_sale_text || \"\",\n          // SALE\n          is_on_sale: data.is_on_sale || false,\n          sale_price: data?.sale_price || 0.0,\n          // SEO\n          title: data.page.title || \"\",\n          slug_public: data?.page?.slug_public || \"\",\n        });\n      })\n      .catch((err) => {\n        if (err.response) {\n          toast.error({ message: \"Something went wrong\" });\n          if (err.response.status === 404) {\n            return;\n          }\n        }\n      });\n  }, [prodSlug, setValues]);\n\n  if (!product) return null;\n\n  console.log(product);\n\n  return (\n    <AdminView back={props?.back} className=\"product-update-view\">\n      <Form\n        context={form}\n        onSubmit={(e) => {\n          e.preventDefault();\n          const fD = {\n            retail_price: form.values.retail_price,\n            is_on_sale: form.values.is_on_sale,\n          };\n\n          if (form.values.category) fD.category = form.values.category;\n          if (form.values.is_on_sale) fD.sale_price = form.values.sale_price;\n\n          if (form.values.is_pre_sale) {\n            fD.is_pre_sale = form.values.is_pre_sale;\n            fD.is_pre_sale_text = form.values.is_pre_sale_text;\n          }\n\n          return productServices\n            .patch(product.slug, fD)\n            .then((data) => {\n              setProduct({ ...product, ...data });\n              toast.success({ message: \"Product updated.\" });\n            })\n            .catch((err) => {\n              toast.error({ message: \"Could not update product.\" });\n              return form.handleError(err);\n            });\n        }}\n      >\n        <div className=\"d-flex flex-column-reverse flex-md-row mb-2\">\n          <div className=\"flex-1\">\n            <AdminView.Section\n              title=\"Details\"\n              actions={<PublishedStatusSpan is_published={product?.page?.is_published} pill />}\n            >\n              <div className=\"mb-1\">\n                <ProductUpdateForm.NameInput\n                  product={product}\n                  form={form}\n                  onSuccess={(data) => {\n                    setProduct({ ...product, ...data });\n                    toast.success({ message: \"Item updated.\" });\n                  }}\n                  onError={(err) => {\n                    form.handleError(err);\n                    toast.error({ message: \"Could not update item.\" });\n                  }}\n                />\n              </div>\n\n              <div className=\"mb-1\">\n                <Form.Label value=\"Category\" />\n                <Form.SelectInput required name=\"category\" nullValue={{ label: \"Select category\" }}>\n                  {product?.categories?.items?.map((cat) => {\n                    return <Form.SelectInput.Option {...cat} key={cat.value} />;\n                  })}\n                </Form.SelectInput>\n              </div>\n\n              <div className=\"mb-1\">\n                <div className=\"mb-1\">\n                  <Form.Label value=\"Retail price\" id=\"retail_price_label\" />\n                  <Form.TextInput\n                    required\n                    type=\"number\"\n                    name=\"retail_price\"\n                    error={form.errors.retail_price}\n                    aria-describedby=\"retail_price_label\"\n                    min=\"0\"\n                    step=\"0.01\"\n                  />\n                </div>\n\n                {/* PRE SALE */}\n                <div className=\"mb-1\">\n                  <div className=\"d-flex align-items-center mb-1\">\n                    <Form.CheckboxInput name=\"is_pre_sale\" error={form.errors.is_pre_sale} className=\"me-2\" />\n                    <Form.Label value=\"Pre-sale\" />\n                  </div>\n\n                  {form.values.is_pre_sale && (\n                    <div className=\"mb-2\">\n                      <Form.Label value=\"Pre sale text\" id=\"is_pre_sale_text_label\" className=\"miq-checkbox-label\" />\n                      <Form.TextAreaX\n                        name=\"is_pre_sale_text\"\n                        error={form.errors.is_pre_sale_text}\n                        aria-describedby=\"is_pre_sale_text_label\"\n                      />\n                    </div>\n                  )}\n                </div>\n\n                {/* SALE  */}\n                <div className=\"d-flex align-items-center mb-1\">\n                  <Form.CheckboxInput name=\"is_on_sale\" error={form.errors.is_on_sale} className=\"me-2\" />\n                  <Form.Label value=\"On Sale\" />\n                </div>\n\n                {form.values.is_on_sale && (\n                  <div className=\"mb-2\">\n                    <Form.Label value=\"Sale price\" id=\"sale_price_label\" className=\"miq-checkbox-label\" />\n                    <Form.TextInput\n                      required\n                      type=\"number\"\n                      name=\"sale_price\"\n                      error={form.errors.sale_price}\n                      aria-describedby=\"sale_price_label\"\n                      min=\"0\"\n                      step=\"0.01\"\n                    />\n                  </div>\n                )}\n              </div>\n\n              <div className=\"my-3\">\n                <Form.Submit value=\"Update product\" className=\"btn btn-primary-3\" />\n              </div>\n            </AdminView.Section>\n          </div>\n\n          <div className=\" ms-md-2 mb-2 w-md-35 w-lg-25\">\n            <StaffCoverUpdateForm\n              slug={product?.cover}\n              data={product.cover_data}\n              onCreate={(imgData) => {\n                productServices\n                  .patch(product.slug, { cover: imgData.slug })\n                  .then((data) => {\n                    setProduct({ ...product, ...data });\n                    toast.success({ message: \"Product cover updated.\" });\n                  })\n                  .catch((err) => {\n                    toast.error({ message: \"Could not upload cover image.\" });\n                  });\n              }}\n              onUpdate={(cover_data) => {\n                toast.success({ message: \"Product cover updated.\" });\n                return setProduct({ ...product, cover_data });\n              }}\n              onDelete={() => {\n                return setProduct({ ...product, cover_data: null, cover: null });\n              }}\n              className=\"mb-1\"\n            />\n            <ProductImageAltTextInput image={product?.cover_data} />\n          </div>\n        </div>\n      </Form>\n\n      <div className=\"my-2\">\n        <div className=\"d-flex justify-content-center mb-3\">\n          <div className=\"d-flex align-items-center\">\n            <Button\n              onClick={() => setTab(\"info\")}\n              className={getClassName([\"me-1\", tab === \"info\" && \"btn-primary-3\"])}\n            >\n              Info\n            </Button>\n            <Button\n              onClick={() => setTab(\"inventory\")}\n              className={getClassName([\"me-1\", tab === \"inventory\" && \"btn-primary-3\"])}\n            >\n              Inventory\n            </Button>\n            <Button\n              onClick={() => setTab(\"imgs\")}\n              className={getClassName([\"me-1\", tab === \"imgs\" && \"btn-primary-3\"])}\n            >\n              Images\n            </Button>\n            <Button onClick={() => setTab(\"seo\")} className={getClassName([tab === \"seo\" && \"btn-primary-3\"])}>\n              Settings\n            </Button>\n          </div>\n        </div>\n        <ViewTabs tab={tab} prodSlug={prodSlug} product={product} setProduct={setProduct} form={form} toast={toast} />\n      </div>\n    </AdminView>\n  );\n}\n\nexport const ProductPublishButton = ({ product, setProduct, toast }) => {\n  return (\n    <Button\n      onClick={() => {\n        productServices\n          .publish(product.slug)\n          .then((data) => {\n            setProduct?.({ ...product, ...data });\n          })\n          .catch(({ response = {} }) => {\n            if (!response.data) {\n              return toast?.error({ message: \"Something went awfully wrong!\" });\n            }\n            const { retail_price, category, page } = response.data;\n\n            if (retail_price) {\n              return toast?.error({ message: \"You can not publish a product without price\" });\n            }\n            if (category) {\n              return toast?.error({ message: \"You can not publish a product without category\" });\n            }\n            if (page) {\n              return toast?.error({ message: \"You can not publish a product without page\" });\n            }\n            // console.log(response.data);\n          });\n      }}\n      className=\"btn-primary\"\n    >\n      Publish product\n    </Button>\n  );\n};\n"],"sourceRoot":""}
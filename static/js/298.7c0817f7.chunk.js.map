{"version":3,"file":"static/js/298.7c0817f7.chunk.js","mappings":"qVAkBMA,EAAoBC,EAAAA,MAAW,kBAAM,gCACrCC,EAAyBD,EAAAA,MAAW,kBAAM,yDAEjC,SAASE,IAAyB,IAAD,EAC9C,GAAyBC,EAAAA,EAAAA,KAAjBC,EAAR,EAAQA,IAAQC,GAAhB,aACAC,EAAAA,EAAAA,GAAe,CAAEC,SAAUF,EAAKG,WAAYC,UAAWJ,EAAKK,aAE5D,IAAMC,EAAI,IAAIC,EAAAA,GAASR,GAEvB,OAAKO,EAAEE,WAGL,UAAC,KAAD,YACE,SAAC,KAAD,CAAOC,KAAK,aAAaC,SAAS,SAACb,EAAsBc,WAAvB,CAAwCC,SAAUN,OACpF,SAAC,KAAD,CAAOG,KAAK,MAAMC,SAAS,SAAChB,EAAD,OAC3B,SAAC,KAAD,CACEmB,OAAK,EACLH,SACE,UAAC,UAAD,CACEI,MAAM,WACNC,KAAK,gBACLC,SACE,SAAC,UAAD,CAAYC,GAAG,OAAOC,cAAe,CAAC,qBAAsBC,UAAU,oBAAtE,yBAIFD,cAAe,CAAC,sBARlB,WAUE,SAAC,KAAD,CAAuBE,WAAU,UAAEd,EAAEe,YAAJ,aAAE,EAAQD,cAC3C,SAACE,EAAD,CAAmBV,SAAUN,YApBd,KA4B3BT,EAAsBc,WAAa,YAA2C,IAAxCC,EAAuC,EAAvCA,SACpC,OACE,iBAAKO,UAAU,yBAAf,WACE,SAAC,QAAD,WACE,SAAC,KAAD,CAAiBI,MAAOX,EAASW,MAAOC,SAAS,WAGnD,gBAAKL,UAAU,YAAf,UACE,SAACvB,EAAD,CAAwBmB,KAAK,iCAMrC,IAAMO,EAAoB,SAApBA,EAAqBG,GACzB,IAAQb,EAAaa,EAAbb,SACR,GAAiBc,EAAAA,EAAAA,MAAVC,GAAP,eAEA,OAA8B,IAA1Bf,EAASW,MAAMK,QAEf,iBAAKT,UAAU,2CAAf,WACE,cAAGA,UAAU,mBAAb,uDACA,gBAAKA,UAAU,OAAf,UACE,SAAC,UAAD,CAAYF,GAAG,OAAOC,cAAe,CAAC,qBAAsBC,UAAU,yBAAtE,qCAQN,iBAAKA,UAAU,GAAf,WACE,SAAC,KAAD,CACEI,MAAOX,EAASW,MAChBM,QAAQ,SAACP,EAAkBQ,OAAnB,IACRX,UAAU,4BACVY,WAAY,SAACC,GAAuB,IAAD,EACjC,GAAI,OAACA,QAAD,IAACA,IAAAA,EAASC,KAAM,OAAO,KAE3B,IAAMC,GAAWC,EAAAA,EAAAA,GAAaH,GACxBf,EAAE,UAAMiB,EAASD,KAAf,YAAuB,UAAGN,GAAH,WAAkBA,GAAW,IACpDS,EAAkBF,EAAlBE,cACR,OACE,UAAC,QAAD,YACE,SAAC,QAAD,WACE,SAAC,YAAD,yBAAoBJ,QAApB,IAAoBA,OAApB,EAAoBA,EAASK,YAA7B,IAAyClB,UAAU,gBAGrD,SAAC,QAAD,WACE,UAAC,UAAD,CAAYF,GAAIA,EAAhB,UACGe,EAAQM,SAAU,iBAAMnB,UAAU,sBAAhB,2BACnB,iBAAKA,UAAU,gBAAf,WACE,iBAAMA,UAAU,eAAhB,SAAgCa,EAAQO,QACxC,SAAC,KAAD,CAAeC,KAAMR,EAAQS,eAAgB,QAE/C,2BACE,oCACGT,EAAQU,qBADX,aACG,EAAuBH,MACxB,kBAAMpB,UAAU,aAAhB,UACG,MADH,OAEGiB,QAFH,IAEGA,OAFH,EAEGA,EAAeO,eAGnBX,EAAQY,WAAc,IAAK,oCAAYZ,EAAQY,uBAKtD,UAAC,QAAD,WACGZ,EAAQa,aACP,gBAAK1B,UAAU,OAAf,UACE,SAAC,MAAD,UAAkBa,EAAQc,qBAG9B,SAAC,MAAD,kBAAkBd,EAAQe,mBAA1B,IAA6CC,YAAahB,EAAQa,eAClE,gBAAK1B,UAAU,qBAAf,gBAAqCiB,QAArC,IAAqCA,OAArC,EAAqCA,EAAea,WAEtD,SAAC,QAAD,UAAWjB,EAAQM,QAAU,mBAlChBN,EAAQC,UAwC7B,SAAC,MAAD,kBAAgBrB,EAASS,MAAzB,IAA+B6B,UAAWC,EAAAA,GAAAA,KAAYlC,IAAE,SAK9DK,EAAkBQ,OAAS,kBACzB,iCACE,SAAC,QAAD,uBACA,SAAC,QAAD,KACA,SAAC,QAAD,qBACA,SAAC,QAAD","sources":["../../../../shopy/shopy-storejs/src/Product/IndexView.tsx"],"sourcesContent":["import * as React from 'react';\nimport { Routes, Route, useSearchParams } from 'react-router-dom';\n\nimport { Response } from '@miq/utiljs';\nimport Staff, { StaffImg } from '@miq/staffjs';\nimport { Table, Pagination, Viewports } from '@miq/componentjs';\n\nimport './indexview.scss';\n\nimport { TProduct } from '../types';\nimport { useCrudEmitter } from '../events';\nimport { PriceDisplay, PublishedIcon } from '../components';\n\nimport { StaffProduct } from './models';\nimport { ProductCardList } from './components';\nimport { ProductListFilterForm } from './forms';\nimport { useProductListRequest } from './utils';\n\nconst ProductCreateView = React.lazy(() => import('./CreateView'));\nconst ProductStaffUpdateView = React.lazy(() => import('./UpdateView'));\n\nexport default function ProductStaffIndexView() {\n  const { res, ...rest } = useProductListRequest();\n  useCrudEmitter({ onUpdate: rest.updateItem, onDestroy: rest.removeItem });\n\n  const r = new Response(res);\n\n  if (!r.isSuccess) return null;\n\n  return (\n    <Routes>\n      <Route path=\":prodSlug/\" element={<ProductStaffIndexView.UpdateView {...{ response: r }} />} />\n      <Route path=\"new\" element={<ProductCreateView />} />\n      <Route\n        index\n        element={\n          <Staff.View\n            title=\"Products\"\n            back=\"/staff/store/\"\n            actions={\n              <Staff.Link to=\"new/\" requiredPerms={['store.add_product']} className=\"btn btn-primary-3\">\n                Add product\n              </Staff.Link>\n            }\n            requiredPerms={['store.view_product']}\n          >\n            <ProductListFilterForm categories={r.data?.categories} />\n            <ProductStaffTable response={r} />\n          </Staff.View>\n        }\n      />\n    </Routes>\n  );\n}\n\nProductStaffIndexView.UpdateView = ({ response }: { response: Response }) => {\n  return (\n    <div className=\"d-grid grid-xl-4 gap-1\">\n      <Viewports.XLUp>\n        <ProductCardList items={response.items} itempath=\"../\" />\n      </Viewports.XLUp>\n\n      <div className=\"span-xl-3\">\n        <ProductStaffUpdateView back=\"/staff/store/products/\" />\n      </div>\n    </div>\n  );\n};\n\nconst ProductStaffTable = (props: { response: Response }) => {\n  const { response } = props;\n  const [params] = useSearchParams();\n\n  if (response.items.length === 0)\n    return (\n      <div className=\"text-center p-staff-list-empty py-3 my-3\">\n        <p className=\"fw-light text-md\">Add products to your shop to get started</p>\n        <div className=\"my-4\">\n          <Staff.Link to=\"new/\" requiredPerms={['store.add_product']} className=\"btn btn-primary btn-md\">\n            Add a new product\n          </Staff.Link>\n        </div>\n      </div>\n    );\n\n  return (\n    <div className=\"\">\n      <Table\n        items={response.items}\n        header={<ProductStaffTable.Header />}\n        className=\"product-staff-table w-100\"\n        renderItem={(product: TProduct) => {\n          if (!product?.slug) return null;\n\n          const instance = StaffProduct(product);\n          const to = `${instance.slug}/${`${params}` ? `?${params}` : ''}`;\n          const { supplier_item } = instance;\n          return (\n            <Table.Tr key={product.slug}>\n              <Table.Th>\n                <StaffImg.Thumb {...product?.cover_data} className=\"rounded\" />\n              </Table.Th>\n\n              <Table.Td>\n                <Staff.Link to={to}>\n                  {product.is_oos && <span className=\"text-sm text-danger\">Out of stock</span>}\n                  <div className=\"text-ellipsis\">\n                    <span className=\"me-1 fw-bold\">{product.name}</span>\n                    <PublishedIcon show={product.is_published || false} />\n                  </div>\n                  <ul>\n                    <li>\n                      {product.category_data?.name}\n                      <span className=\"text-muted\">\n                        {' | '}\n                        {supplier_item?.category}\n                      </span>\n                    </li>\n                    {product.size_count! > 0 && <li>Sizes: {product.size_count}</li>}\n                  </ul>\n                </Staff.Link>\n              </Table.Td>\n\n              <Table.Td>\n                {product.is_on_sale && (\n                  <div className=\"me-1\">\n                    <PriceDisplay {...product.sale_price_data} />\n                  </div>\n                )}\n                <PriceDisplay {...product.retail_price_data} lineThrough={product.is_on_sale} />\n                <div className=\"text-muted text-sm\">{supplier_item?.cost}</div>\n              </Table.Td>\n              <Table.Td>{product.is_oos && 'Out of stock'}</Table.Td>\n            </Table.Tr>\n          );\n        }}\n      />\n\n      <Pagination {...response.data} component={Staff.Link} to />\n    </div>\n  );\n};\n\nProductStaffTable.Header = () => (\n  <>\n    <Table.Th>Product</Table.Th>\n    <Table.Th />\n    <Table.Th>Price</Table.Th>\n    <Table.Th>Availability</Table.Th>\n  </>\n);\n"],"names":["ProductCreateView","React","ProductStaffUpdateView","ProductStaffIndexView","useProductListRequest","res","rest","useCrudEmitter","onUpdate","updateItem","onDestroy","removeItem","r","Response","isSuccess","path","element","UpdateView","response","index","title","back","actions","to","requiredPerms","className","categories","data","ProductStaffTable","items","itempath","props","useSearchParams","params","length","header","Header","renderItem","product","slug","instance","StaffProduct","supplier_item","cover_data","is_oos","name","show","is_published","category_data","category","size_count","is_on_sale","sale_price_data","retail_price_data","lineThrough","cost","component","Staff"],"sourceRoot":""}
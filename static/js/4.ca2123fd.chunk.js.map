{"version":3,"sources":["shop/public/components.jsx","shop/product/components.jsx","exports.jsx","shop/orders/components.jsx","shop/product/forms.jsx","shop/product/Attribute.jsx","shop/product/UpdateView/ProductList.jsx","shop/product/UpdateView/index.jsx"],"names":["ProductPriceDisplay","product","retail_price","sale_price","is_on_sale","className","amountWithSymbol","ProductAttributeList","attributes","map","attr","name","value","CategoryLinks","props","ctx","useContext","SharedDataCtx","isLoaded","categories","cat","href","url","title","showCover","cover","src_mobile","thumb_sq","name_truncated","slug","SearchForm","search","location","push","useRef","debounce","history","query","URLSearchParams","action","required","initialValue","get","onChange","e","target","length","delete","set","current","path","URL","window","pathname","placeholder","minLength","maxLength","BreadCrumbs","breadcrumbs","role","item","label","ProductImageAltTextInput","image","alt_text","form","useForm","imgSlug","setValues","useEffect","onSuccess","onError","StaffProductPublishButton","prodSlug","toast","page","is_published","onPublishSuccess","onUnpublishSuccess","id","onClick","productServices","unpublish","then","data","catch","err","error","message","SHOP_MSGS","default","publish","response","category","publish_error_retail_price","handleError","publish_error_category","publish_error_page","getClassName","ProductImageUploadButton","multiple","onCreate","imgsArray","filter","img","patch","images","onCreateSuccess","onCreateError","SupplierData","supplier_name","supplier_item_id","supplier_item_category","supplier_item_cost","supplier_item_cost_currency","supplier_item_url","rel","isRequired","ProductNameInput","showLabel","input","rest","Label","TextInput","ProductCategoryInput","SelectInput","nullValue","items","Option","key","ProductRetailPriceInput","type","min","step","ProductPresaleCheckboxInput","CheckboxInput","ProductPresaleTextInput","TextAreaX","ProductOnSaleCheckboxInput","ProductSalePriceInput","ProductForm","children","context","fields","onSubmit","preventDefault","fD","forEach","field","values","NameInput","DescField","text","Field","CategoryInput","RetailPriceInput","PresaleCheckboxInput","PresaleTextInput","OnSaleCheckboxInput","SalePriceInput","StageSelect","stages","stage","AttrNameInput","AttrValueInput","AttributeUpdateForm","instance","patchAttribute","style","alignItems","errors","Icon","Icons","Trash","render","args","deleteAttribute","setOpen","renderHeader","Submit","AttributeCreateForm","initValues","postAttribute","ProductListItemCard","cover_data","pill","short","retail_price_data","sale_price_data","ProductListCard","state","loading","results","prod","ProductUpdateStaffView","useState","setState","match","params","pFormInitial","console","log","detail","mapProductDataToForm","ToastCtx","tab","sharedProps","setProduct","setError","prev_slug","next_slug","LABELS","viewTitle","viewText","actions","to","SHOP_PATHS","productUpdate","CN","view","back","QState","setQState","ViewTabs","success","update_success","footer","bottom","name_field_text","none","is_pre_sale","is_pre_sale_text","desc_field_text","description","top","publish_success","unpublish_success","MediaViewTab","Section","gap","imgData","cover_create_success","cover_update_error","onUpdate","cover_update_success","onDelete","cover_delete_success","images_data","swapCover","i","bodyClassName","InventoryViewTab","addAtr","setAddAtr","Attribute","productData","pData","SettingsViewTab","delete_success","productList","delete_error","ProductSEOForm","slug_public","patchPage","page_update_success","page_update_error","QueryButton","pushQuery","viewCn"],"mappings":"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","file":"static/js/4.ca2123fd.chunk.js","sourcesContent":["import ReactDOM from 'react-dom';\nimport { useContext, useEffect, useRef, useState } from 'react';\n\nimport { SharedDataCtx } from '@miq/contexts';\n// import Form, { useForm } from \"@miq/form\";\nimport { Img, Picture, SearchTextInput } from '@miq/components';\nimport { IS_DEV } from '@miq/utils';\nimport debounce from 'lodash.debounce';\n\n/**\n * PRODUCT\n */\n\nexport const ProductPriceDisplay = ({ product }) => {\n  if (!product || !product.retail_price) return null;\n\n  const { retail_price, sale_price } = product;\n\n  if (product.is_on_sale && sale_price != null) {\n    return (\n      <div className=\"product-price-display d-flex align-items-center\">\n        <div className=\"text-danger fw-bold me-2\">{sale_price.amountWithSymbol}</div>\n        <div className=\"text-line-through\">{retail_price.amountWithSymbol}</div>\n      </div>\n    );\n  }\n  return (\n    <div className=\"product-price-display d-flex align-items-center\">\n      <div className=\"fw-bold\">{retail_price.amountWithSymbol}</div>\n    </div>\n  );\n};\n\nexport const ProductAttributeList = ({ product }) => {\n  const { attributes = [] } = product || {};\n\n  if (!attributes) return null;\n\n  return (\n    <ul className=\"product-attr-list\">\n      {attributes?.map((attr) => {\n        return (\n          <li className=\"attr\" key={attr.name}>\n            <span className=\"attr-label\">{attr.name} : </span>\n            <span className=\"attr-value\">{attr.value}</span>\n          </li>\n        );\n      })}\n    </ul>\n  );\n};\n\n/**\n * CATEGORY\n */\n\nexport const CategoryLinks = (props) => {\n  const ctx = useContext(SharedDataCtx);\n\n  if (!ctx.isLoaded || !ctx.categories) return null;\n\n  // console.log(ctx.categories);\n\n  return (\n    <div className=\"category-links pb-2\">\n      {ctx.categories?.map((cat) => {\n        return (\n          <div className=\"item w-25 w-md-15\" key={cat.slug}>\n            <a href={cat.url} className=\"\" title={cat.name}>\n              {props.showCover && cat?.cover && (\n                <Picture {...cat.cover} src_mobile={cat?.cover?.thumb_sq || cat?.cover?.src_mobile} />\n              )}\n              <div className=\"info\">{cat.name_truncated}</div>\n            </a>\n          </div>\n        );\n      })}\n    </div>\n  );\n};\n\nexport function SearchForm(props) {\n  const { search } = props.location;\n\n  const push = useRef(debounce((url) => props?.history?.push(url), 300));\n\n  const query = new URLSearchParams(search);\n  const handleSearch = ({ e }) => {\n    const { value } = e.target;\n\n    if (!value || value.length < 3) {\n      query.delete('q');\n    } else {\n      query.set('q', e.target.value);\n    }\n\n    if (!push.current) return;\n\n    const path = new URL(window.location.href);\n    push.current(`${path.pathname}?${query}`);\n  };\n\n  return (\n    <form action=\"/shop/\" className=\"product-search-form\">\n      <SearchTextInput\n        required\n        initialValue={query.get('q')}\n        onChange={handleSearch}\n        className=\"search-input\"\n        placeholder={'Cherchez un produit ...'}\n        minLength={3}\n        maxLength={99}\n      />\n    </form>\n  );\n}\n\nexport const BreadCrumbs = (props) => {\n  const { isLoaded, breadcrumbs } = useContext(SharedDataCtx);\n\n  if (!isLoaded || !breadcrumbs) {\n    return null;\n  }\n\n  return (\n    <section className=\"miq-breadcrumbs\" role={'navigation'} aria-label=\"breadcrumbs\">\n      {breadcrumbs.map((item) => {\n        return (\n          <a href={item.path} className=\"item\" key={item.label} title={item.title} aria-label={item.title}>\n            {item.label}\n          </a>\n        );\n      })}\n    </section>\n  );\n};\n\n//\n// NOT USED\nexport const ProductDetailImages = ({ product, ...props }) => {\n  const { images = [], cover } = product;\n  const [active, setActive] = useState(cover);\n\n  const [root, setRoot] = useState(null);\n\n  useEffect(() => {\n    if (IS_DEV) return;\n\n    const el = document.getElementById('product-detail-images');\n    if (el) setRoot(el);\n  }, [setRoot]);\n\n  if (!product) return null;\n\n  const render = (\n    <div className=\"product-images d-flex flex-column-reverse flex-sm-row\">\n      <div className=\"thumbnails d-flex flex-row flex-sm-column me-1\">\n        <Img src={cover.thumb} className=\"mb-1\" onClick={() => setActive(cover)} />\n\n        {images.map((img) => (\n          <Img src={img.thumb} onClick={() => setActive(img)} className=\"mb-1\" key={img.src} />\n        ))}\n      </div>\n\n      <div className=\"\">\n        <Img src={active.src} />\n      </div>\n    </div>\n  );\n\n  return IS_DEV ? render : root ? ReactDOM.createPortal(render, root) : null;\n};\n","import React, { useEffect } from 'react';\nimport PropTypes from 'prop-types';\n\nimport { productServices } from './utils';\nimport { useForm, FormProvider, ImgUploadButton, ImageAltTextInput, Button, getClassName } from 'src/exports';\n\n//#region ProductImageAltTextInput\nexport const ProductImageAltTextInput = ({ image, ...props }) => {\n  const alt_text = image?.alt_text || '';\n\n  const form = useForm({ alt_text });\n\n  const imgSlug = image?.slug;\n  const setValues = form.setValues;\n\n  useEffect(() => {\n    setValues({ alt_text });\n  }, [imgSlug, setValues, alt_text]);\n\n  if (!image || !image.slug) return null;\n\n  return (\n    <FormProvider value={form} className={props.className}>\n      <ImageAltTextInput\n        required\n        image={image}\n        onSuccess={props.onSuccess}\n        onError={props.onError}\n        placeholder=\"Add an alternative text ...\"\n      />\n    </FormProvider>\n  );\n};\n\nProductImageAltTextInput.propTypes = {\n  image: PropTypes.shape({\n    slug: PropTypes.string.isRequired,\n  }),\n\n  onUpdate: PropTypes.func,\n  onError: PropTypes.func,\n};\n//#endregion ProductImageAltTextInput\n\n//#region BUTTONS > >\n\n//#region StaffProductPublishButton\n\n/**\n * Button component for publishing a product\n * ```js\n * <StaffProductPublishButton\n *  product={product}\n *  prodSlug='slug'\n *  product={{slug: 'slug', page:{slug:'pageSlug'}}}\n *  onPublishSuccess={(data) => setProduct(data)}\n *  onUnpublishSuccess={(data) => setProduct(data)}\n *  onUnpublishSuccess={(err) => setError(err)}\n * />\n * ```\n * @param {Object} props\n * @param {string} props.prodSlug - slug of the product: required\n * @param {Object} props.product - product object\n * @param {Object} props.form - product form\n * @param {Function} props.onPublishSuccess publish success callback\n * @param {Function} props.onUnpublishSuccess unpublish success callback\n * @param {Function} props.onError\n * @param {Object} props.toast\n * @param {string} props.className\n * @param {string} props.id\n * @augments {Component<Props, State>}\n *\n */\n\nexport function StaffProductPublishButton(props) {\n  const { prodSlug, product, toast, ...rest } = props;\n  if (!prodSlug || !product?.page) return null;\n\n  const { is_published } = product.page;\n  const { form, onPublishSuccess, onUnpublishSuccess, onError } = props;\n\n  const handlePublish = () => {\n    if (is_published)\n      return productServices\n        .unpublish(prodSlug)\n        .then((data) => onUnpublishSuccess?.(data))\n        .catch((err) => {\n          return toast?.error({ message: SHOP_MSGS.default });\n        });\n\n    return productServices\n      .publish(prodSlug)\n      .then((data) => onPublishSuccess?.(data))\n      .catch((err) => {\n        const { response = {} } = err;\n\n        if (!response.data) {\n          toast?.error({ message: SHOP_MSGS.default });\n        }\n        const { retail_price, category, page } = response.data;\n\n        if (retail_price) {\n          toast?.error({ message: SHOP_MSGS.product.publish_error_retail_price });\n        }\n        if (category) {\n          if (form) form.handleError(err);\n          toast?.error({ message: SHOP_MSGS.product.publish_error_category });\n        }\n        if (page) {\n          toast?.error({ message: SHOP_MSGS.product.publish_error_page });\n        }\n        return onError?.(err);\n      });\n  };\n\n  return (\n    <Button\n      id={props.id}\n      onClick={handlePublish}\n      className={getClassName([\n        'staff-product-publish-button',\n        is_published ? 'btn-danger' : 'btn-primary',\n        props.className,\n      ])}\n    >\n      {is_published ? 'Unpublish' : 'Publish'} product\n    </Button>\n  );\n}\n\nStaffProductPublishButton.propTypes = {\n  /** product slug */\n  prodSlug: PropTypes.string.isRequired,\n  /** product data */\n  product: PropTypes.shape({ page: PropTypes.shape({ is_published: PropTypes.bool }).isRequired }).isRequired,\n  /** if props.form: calls form.handleError whenever applicable BEFORE calling props.onError */\n  form: PropTypes.object,\n  onPublishSuccess: PropTypes.func,\n  onUnpublishSuccess: PropTypes.func,\n  onError: PropTypes.func,\n};\n\n//#endregion\n\n//#region ProductImageUploadButton\n\n/**\n * Upload a product image\n * Usage:\n * ```js\n * <ProductImageUploadButton product={{prodData}} />\n * ```\n *\n * @param {Object} props\n * @param {Object} props.product\n * @param {bool} props.multiple\n * @param {Function} props.onCreate\n * @param {Function} props.onCreateSuccess\n * @param {Function} props.onCreateError\n * @augments {ImgUploadButton<Props, State>}\n */\n\nexport const ProductImageUploadButton = ({ product, ...props }) => {\n  if (!product || !product.slug) return null;\n\n  return (\n    <ImgUploadButton\n      multiple={true}\n      className=\"btn-primary-3\"\n      onCreate={(imgsArray) => {\n        imgsArray = imgsArray.filter((img) => img && img.slug);\n        return productServices\n          .patch(product.slug, { images: [...product.images, ...imgsArray.map((img) => img.slug)] })\n          .then((data) => {\n            if (props.onCreateSuccess) props.onCreateSuccess(data);\n          })\n          .catch((err) => {\n            if (props.onCreateError) props.onCreateError(err);\n          });\n      }}\n    />\n  );\n};\n//#endregion ProductImageButton\n\n//#region ProductCoverUploadButton\nexport const ProductCoverUploadButton = ({ children, product, ...props }) => {\n  if (!product || !product.slug) return null;\n\n  const handleCoverCreate = ({ slug }) => {\n    productServices\n      .patch(product.slug, { cover: slug })\n      .then((data) => {\n        if (props.onCreateSuccess) props.onCreateSuccess(data);\n      })\n      .catch((err) => {\n        if (props.onCreateError) props.onCreateError(err);\n      });\n  };\n  const handleCoverUpdate = (imgData) => {\n    if (props.onUpdateSuccess) props.onUpdateSuccess(imgData);\n  };\n\n  return (\n    <ImgUploadButton\n      slug={product.cover_data ? product.cover_data.slug : null}\n      onCreate={handleCoverCreate}\n      onUpdate={handleCoverUpdate}\n      className=\"product-cover-upload-button\"\n    >\n      {children}\n    </ImgUploadButton>\n  );\n};\nProductCoverUploadButton.propTypes = {\n  children: PropTypes.any.isRequired,\n  product: PropTypes.shape({ slug: PropTypes.string.isRequired }).isRequired,\n  onCreateSuccess: PropTypes.func,\n  onCreateError: PropTypes.func,\n  onUpdateSuccess: PropTypes.func,\n  onUpdateError: PropTypes.func,\n};\n//#endregion ProductCoverUploadButton\n\n//#endregion BUTTONS\n","export { ImageAltTextInput, PublishedStatusSpan } from '@miq/adminjs';\n\nexport { Button, ImgUploadButton, ImgSquare, Loading, Card } from '@miq/components';\n\nexport { getClassName } from '@miq/utils';\n\nexport { default as Form } from '@miq/form';\nexport { useForm, FormProvider } from '@miq/form';\n","export const SupplierData = ({ product, ...props }) => {\n  if (!product) return null;\n\n  return (\n    <div className=\"product-supplier-data\">\n      <ul>\n        <li>\n          <span className=\"\">Supplier</span>\n          <span className=\"\">{product.supplier_name}</span>\n        </li>\n        <li>\n          <span className=\"\">Item id</span>\n          <span className=\"\">{product.supplier_item_id}</span>\n        </li>\n        <li>\n          <span className=\"\">Category</span>\n          <span className=\"\">{product.supplier_item_category}</span>\n        </li>\n\n        <li>\n          <span className=\"\">Item cost</span>\n          <span className=\"\">\n            {product.supplier_item_cost} ({product.supplier_item_cost_currency})\n          </span>\n        </li>\n        <li>\n          <a href={product.supplier_item_url} className=\"text-underline\" target=\"_blank\" rel=\"noopener noreferrer\">\n            View supplier page\n          </a>\n        </li>\n      </ul>\n    </div>\n  );\n};\n","import { useEffect } from 'react';\nimport { AdminView, StaffCoverUpdateForm, PublishedStatusSpan } from '@miq/adminjs';\nimport Form from '@miq/form';\nimport { isRequired } from '@miq/utils';\nimport { productServices } from './utils';\nimport { ProductImageAltTextInput } from './components';\nimport { SHOP_MSGS } from '../constants';\n\nconst isR = isRequired;\n\nexport function ProductQuickUpdateForm({ form, product, ...props }) {\n  const { setProduct, toast, categories } = props;\n  const productSlug = product?.slug;\n\n  useEffect(() => {}, [productSlug]);\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    const fD = {\n      name: form.values.name,\n      retail_price: form.values.retail_price,\n      is_on_sale: form.values.is_on_sale,\n      is_pre_sale: form.values.is_pre_sale,\n    };\n\n    if (form.values.category) fD.category = form.values.category;\n    if (form.values.is_on_sale) fD.sale_price = form.values.sale_price;\n\n    if (form.values.is_pre_sale) fD.is_pre_sale_text = form.values.is_pre_sale_text;\n\n    return productServices\n      .patch(product.slug, fD)\n      .then((data) => {\n        setProduct?.({ ...product, ...data });\n        toast?.success({ message: SHOP_MSGS.product.update_success });\n      })\n      .catch((err) => {\n        toast?.error({ message: SHOP_MSGS.product.update_error });\n        return form.handleError(err);\n      });\n  };\n\n  return (\n    <ProductForm context={form} onSubmit={handleSubmit} className=\"quick-product-update-form\">\n      <div className=\"d-grid grid-md-3 gap-3\">\n        <div className=\"span-md-2\">\n          <AdminView.Section\n            title=\"Details\"\n            actions={<PublishedStatusSpan is_published={product?.page?.is_published} pill />}\n          >\n            <div className=\"mb-1\">\n              <ProductNameInput error={form.errors.name} />\n            </div>\n\n            {categories && (\n              <div className=\"mb-1\">\n                <ProductCategoryInput categories={categories} error={form?.errors?.category} />\n              </div>\n            )}\n\n            <div className=\"mb-1\">\n              <div className=\"mb-1\">\n                <ProductRetailPriceInput error={form?.errors?.retail_price} />\n              </div>\n\n              {/* PRE SALE */}\n              <div className=\"mb-1\">\n                <div className=\"d-flex align-items-center mb-1\">\n                  <ProductPresaleCheckboxInput error={form?.errors?.is_pre_sale} />\n                </div>\n\n                {form.values.is_pre_sale && (\n                  <div className=\"mb-2\">\n                    <ProductPresaleTextInput error={form?.errors?.is_pre_sale_text} />\n                  </div>\n                )}\n              </div>\n\n              {/* SALE  */}\n              <div className=\"d-flex align-items-center mb-1\">\n                <ProductOnSaleCheckboxInput error={form?.errors?.is_on_sale} />\n              </div>\n\n              {form.values.is_on_sale && (\n                <div className=\"mb-2\">\n                  <ProductSalePriceInput error={form?.errors?.sale_price} />\n                </div>\n              )}\n            </div>\n\n            <div className=\"my-3\">\n              <Form.Submit value=\"Update product\" className=\"btn btn-primary-3\" />\n            </div>\n          </AdminView.Section>\n        </div>\n      </div>\n    </ProductForm>\n  );\n}\n\n//#region INPUTS\n\nexport const ProductNameInput = (props) => {\n  const { showLabel = false, label = 'Name', ...input } = props;\n  const { placeholder = 'Give a name to the item', ...rest } = input;\n  return (\n    <>\n      {showLabel && <Form.Label value={label} className=\"mb-1\" />}\n      <Form.TextInput {...rest} required name=\"name\" placeholder={placeholder} maxLength={99} />\n    </>\n  );\n};\n\nexport const ProductDescriptionField = (props) => {\n  const { label, text, ...input } = props;\n  const { placeholder = 'Give a description to the item', ...rest } = input;\n  return (\n    <Form.Field {...{ label, text }}>\n      <Form.TextAreaX\n        {...rest}\n        name=\"description\"\n        // error={form.errors.description}\n        placeholder={placeholder}\n      />\n    </Form.Field>\n  );\n};\n\nexport const ProductCategoryInput = (props) => {\n  const { showLabel = false, label = 'Category', ...input } = props;\n  const { categories, ...rest } = input;\n\n  return (\n    <>\n      {showLabel && <Form.Label value={label} />}\n      <Form.SelectInput {...rest} required name=\"category\" nullValue={{ label: 'Sélectionnez une catégorie' }}>\n        {categories?.items?.map((cat) => {\n          return <Form.SelectInput.Option {...cat} key={cat.value} />;\n        })}\n      </Form.SelectInput>\n    </>\n  );\n};\n\nexport const ProductRetailPriceInput = (props) => {\n  const { showLabel = false, label = 'Retail price', ...rest } = props;\n\n  return (\n    <>\n      {showLabel && <Form.Label value={label} id=\"retail_price_label\" />}\n      <Form.TextInput\n        {...rest}\n        required\n        type=\"number\"\n        name=\"retail_price\"\n        aria-describedby=\"retail_price_label\"\n        min=\"0\"\n        step=\"0.01\"\n      />\n    </>\n  );\n};\n\nexport const ProductPresaleCheckboxInput = (props) => {\n  const { showLabel = false, label = 'Pre-sale', ...rest } = props;\n\n  return (\n    <div className=\"d-flex align-items-center\">\n      <Form.CheckboxInput {...rest} name=\"is_pre_sale\" className=\"me-2\" />\n      <Form.Label value={label} />\n    </div>\n  );\n};\n\nexport const ProductPresaleTextInput = (props) => {\n  return (\n    <>\n      <Form.Label value=\"Pre sale text\" id=\"is_pre_sale_text_label\" className=\"miq-checkbox-label\" />\n      <Form.TextAreaX name=\"is_pre_sale_text\" aria-describedby=\"is_pre_sale_text_label\" />\n    </>\n  );\n};\n\nexport const ProductOnSaleCheckboxInput = (props) => {\n  const { showLabel = false, label = 'On Sale', ...rest } = props;\n\n  return (\n    <div className=\"d-flex align-items-center\">\n      <Form.CheckboxInput {...rest} name=\"is_on_sale\" className=\"me-2\" />\n      <Form.Label value={label} />\n    </div>\n  );\n};\n\nexport const ProductSalePriceInput = (props) => {\n  const { showLabel = false, label = 'Sale price', ...rest } = props;\n  return (\n    <>\n      {showLabel && <Form.Label value={label} id=\"sale_price_label\" className=\"miq-checkbox-label\" />}\n      <Form.TextInput\n        {...rest}\n        required\n        type=\"number\"\n        name=\"sale_price\"\n        aria-describedby=\"sale_price_label\"\n        min=\"0\"\n        step=\"0.01\"\n      />\n    </>\n  );\n};\n\nexport const ProductStageSelect = (props) => {\n  const { showLabel = false, label = 'Stage', ...input } = props;\n  const { stages, name, ...rest } = input;\n\n  return (\n    <>\n      {showLabel && <Form.Label value={label} />}\n      <Form.SelectInput {...rest} required name={name || 'stage'} nullValue={{ label: 'Select stage' }}>\n        {stages?.map?.((stage) => {\n          return <Form.SelectInput.Option {...stage} key={stage.value} />;\n        })}\n      </Form.SelectInput>\n    </>\n  );\n};\n\n//#endregion INPUTS\n\n//#region FORMS\n\nexport const ProductForm = ({ children, context, fields = [], prodSlug, ...props }) => {\n  const { onSuccess, onError, ...rest } = props;\n\n  const handleSubmit = (e) => {\n    if (!context || !fields) return;\n\n    e.preventDefault();\n    const fD = {\n      // name: context.values.name,\n      // retail_price: form.values.retail_price,\n      // is_on_sale: form.values.is_on_sale,\n      // is_pre_sale: form.values.is_pre_sale,\n    };\n\n    fields.forEach((field) => {\n      const value = context.values[field];\n      if (value == null) return;\n      fD[field] = value;\n    });\n\n    // if (form.values.category) fD.category = form.values.category;\n    // if (form.values.is_on_sale) fD.sale_price = form.values.sale_price;\n\n    // if (form.values.is_pre_sale) fD.is_pre_sale_text = form.values.is_pre_sale_text;\n    if (!prodSlug) return;\n\n    return productServices\n      .patch(prodSlug, fD)\n      .then((data) => {\n        props?.onSuccess?.(data);\n      })\n      .catch((err) => {\n        if (props.onError) return props.onError(err);\n        return context.handleError(err);\n      });\n  };\n  return (\n    <Form {...rest} context={context} onSubmit={props.onSubmit || handleSubmit}>\n      {children}\n    </Form>\n  );\n};\n\nProductForm.NameInput = ProductNameInput;\nProductForm.DescField = ProductDescriptionField;\nProductForm.CategoryInput = ProductCategoryInput;\nProductForm.RetailPriceInput = ProductRetailPriceInput;\nProductForm.PresaleCheckboxInput = ProductPresaleCheckboxInput;\nProductForm.PresaleTextInput = ProductPresaleTextInput;\nProductForm.OnSaleCheckboxInput = ProductOnSaleCheckboxInput;\nProductForm.SalePriceInput = ProductSalePriceInput;\nProductForm.StageSelect = ProductStageSelect;\n\n//#endregion\n\n//#region BUTTONS\n//#endregion\n","import { IBtnSave, ConfirmIconButton, Icons, Button } from '@miq/components'\n\nimport Form, { useForm } from '@miq/form'\nimport { productServices } from './utils'\n\nconst AttrNameInput = (props) => (\n  <Form.TextInput placeholder=\"Nom de l'attribut\" {...props} required name=\"name\" maxLength={30} minLength={3} />\n)\n\nconst AttrValueInput = (props) => (\n  <Form.TextInput placeholder=\"Valeur de l'attribut\" {...props} required name=\"value\" maxLength={99} minLength={3} />\n)\n\nexport const AttributeUpdateForm = ({ instance, product, ...props }) => {\n  const form = useForm({ name: instance?.name || '', value: instance?.value || '' })\n\n  if (!instance || !instance.slug || !product || !product.slug) return null\n\n  const handleSubmit = (e) => {\n    e.preventDefault()\n\n    return productServices\n      .patchAttribute(product.slug, instance.slug, form.values)\n      .then((data) => {\n        return props?.onSuccess(data)\n      })\n      .catch((err) => {\n        return form.handleError(err)\n      })\n  }\n\n  return (\n    <Form context={form} onSubmit={handleSubmit}>\n      <div className=\"d-flex flex-column flex-md-row\" style={{ alignItems: 'end' }}>\n        <div className=\"me-md-1\">\n          <AttrNameInput error={form.errors.name} />\n        </div>\n\n        <div className=\"w-100 me-md-1\">\n          <AttrValueInput error={form.errors.value} />\n        </div>\n\n        <div className=\"d-flex ms-md-1\">\n          <ConfirmIconButton\n            Icon={Icons.Trash}\n            render={(args) => (\n              <div className=\"p-3 w-100 d-flex justify-content-center\">\n                <div className=\"w-md-50 d-flex align-items-center justify-content-between\">\n                  <div>\n                    <Button\n                      onClick={() =>\n                        productServices\n                          .deleteAttribute(product.slug, instance.slug)\n                          .then((data) => {\n                            args?.setOpen(false)\n                            return props?.onSuccess(data)\n                          })\n                          .catch(() => {\n                            props?.toast?.error({ message: 'Could not delete attribute.' })\n                          })\n                      }\n                      className=\"btn-danger\"\n                    >\n                      Supprimer\n                    </Button>\n                  </div>\n                  <div>\n                    <Button onClick={() => args?.setOpen(false)}>Annuler</Button>\n                  </div>\n                </div>\n              </div>\n            )}\n            renderHeader={(args) => {\n              return (\n                <div className=\"p-3\">\n                  <div className=\"fw-bold\">Supprimer l'attribut \"{instance.name}\"</div>\n                </div>\n              )\n            }}\n            className=\"btn-danger-3 me-1\"\n          />\n          <Form.Submit value=\"Save\" className=\"btn btn-primary-2\" />\n        </div>\n      </div>\n    </Form>\n  )\n}\n\nexport function AttributeCreateForm({ product, ...props }) {\n  const initValues = { name: '', value: '' }\n  const form = useForm(initValues)\n\n  if (!product || !product.slug) return null\n\n  const handleSubmit = (e) => {\n    e.preventDefault()\n    // if (form.hasErrors()) return;\n\n    return productServices\n      .postAttribute(product.slug, form.values)\n      .then((data) => {\n        form.setValues(initValues)\n        return props?.onSuccess(data)\n      })\n      .catch((err) => {\n        return form.handleError(err)\n      })\n  }\n\n  // const invalidAttrNames = product?.attributes?.map((at) => at.name) || [];\n\n  return (\n    <Form context={form} onSubmit={handleSubmit}>\n      <div className=\"d-flex flex-column flex-md-row\" style={{ alignItems: 'end' }}>\n        <div className=\"me-md-1\">\n          <Form.Label value=\"Name\" />\n          <AttrNameInput error={form.errors.name} />\n        </div>\n\n        <div className=\"w-100 me-md-1\">\n          <Form.Label value=\"Value\" />\n          <AttrValueInput error={form.errors.value} />\n        </div>\n\n        <div className=\"ms-md-1\">\n          <IBtnSave type=\"submit\" className=\"btn-primary-3\" />\n        </div>\n      </div>\n    </Form>\n  )\n}\n","import React from 'react';\n\nimport { ProductPriceDisplay } from 'src/shop/public/components';\nimport { ImgSquare, Loading, PublishedStatusSpan } from 'src/exports';\n\nexport const ProductListItemCard = ({ product = {}, ...props }) => {\n  return (\n    <div className=\"product-list-item-card d-flex\">\n      <div className=\"me-1\">\n        <ImgSquare {...product?.cover_data} className=\"rounded\" />\n      </div>\n\n      <div className=\"flex-1\">\n        <div className=\"d-flex align-items-center\">\n          <span className=\"product-title me-2\">{product.name}</span>\n          <PublishedStatusSpan is_published={product?.page?.is_published} pill short />\n        </div>\n        <ProductPriceDisplay\n          product={{ ...product, retail_price: product.retail_price_data, sale_price: product.sale_price_data }}\n        />\n      </div>\n    </div>\n  );\n};\n\nexport function ProductListCard(props) {\n  const { state = {} } = props;\n\n  if (!state) return null;\n  if (state.loading) return <Loading />;\n  if (!state.data) return null;\n\n  return state?.data?.results.map((prod) => {\n    return (\n      <div className=\"d-flex mb-1\" key={prod.slug}>\n        <ProductListItemCard product={prod} />\n      </div>\n    );\n  });\n}\n","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport { useContext, useEffect, useState } from 'react';\n\nimport { AdminView, StaffCoverUpdateForm, PublishedStatusSpan } from '@miq/adminjs';\nimport Form, { useForm } from '@miq/form';\nimport { Card, ToastCtx, Button, Img, ImgDeleteIconButton, Loading } from '@miq/components';\n\nimport './update-view.scss';\n\nimport { SupplierData } from 'src/shop/orders/components';\n\nimport { productServices } from 'src/shop/product/utils';\nimport {\n  ProductImageAltTextInput,\n  ProductImageUploadButton,\n  StaffProductPublishButton,\n} from 'src/shop/product/components';\nimport { AttributeCreateForm, AttributeUpdateForm } from 'src/shop/product/Attribute';\nimport { ProductForm } from 'src/shop/product/forms';\nimport { SHOP_MSGS, SHOP_PATHS } from 'src/shop/constants';\n\nimport { ProductListCard, ProductListItemCard } from './ProductList';\n\nconst getProduct = (slug, setState) => {\n  if (!slug) return null;\n\n  setState({ loading: true, data: null, error: null });\n  productServices\n    .detail(slug)\n    .then((data) => {\n      // setValues(mapProductDataToForm(data));\n      setState({ loading: false, data, error: null });\n      return data;\n    })\n    .catch((error) => {\n      setState({ loading: false, data: null, error });\n    });\n};\n\nexport default function ProductUpdateStaffView(props) {\n  const { search } = props.location;\n\n  const query = new URLSearchParams(search);\n\n  const [state, setState] = useState({ loading: true, data: null, error: null });\n\n  const { prodSlug } = props.match.params;\n  const form = useForm(pFormInitial);\n  const { setValues } = form;\n  useEffect(() => {\n    if (!prodSlug) return null;\n\n    console.log('reqst detail');\n\n    setState({ loading: true, data: null, error: null });\n    productServices\n      .detail(prodSlug)\n      .then((data) => {\n        setState({ loading: false, data, error: null });\n        setValues(mapProductDataToForm(data));\n      })\n      .catch((error) => {\n        setState({ loading: false, data: null, error });\n      });\n  }, [prodSlug, setValues]);\n\n  const toast = useContext(ToastCtx);\n\n  if (state.loading) return <Loading />;\n\n  const product = state?.data;\n  if (!product) return null;\n\n  const tab = query.get('tab') || 'info';\n\n  const setProduct = (data) => setState({ ...state, data: { ...state.data, ...data } });\n  const setError = (error) => setState({ ...state, error });\n\n  const { history } = props;\n  const sharedProps = { ...props, tab, prodSlug, product, setProduct, state, setState, setError, form, toast };\n  const { prev_slug, next_slug } = product;\n\n  return (\n    <AdminView\n      title={LABELS.viewTitle}\n      text={LABELS.viewText}\n      actions={\n        <div>\n          {prev_slug && (\n            <Link\n              to={SHOP_PATHS.productUpdate(prev_slug, query)}\n              className=\"btn me-1\"\n              title=\"Voir le produit précédent\"\n            >\n              Previous\n            </Link>\n          )}\n          {next_slug && (\n            <Link to={SHOP_PATHS.productUpdate(next_slug, query)} className=\"btn\" title=\"Voir le produit suivant\">\n              Next\n            </Link>\n          )}\n        </div>\n      }\n      className={CN.view}\n      back={props?.back}\n    >\n      <div className=\"me-1 w-25 d-none d-lg-block\">\n        <ProductListCard {...props} state={props?.QState} setState={props?.setQState} />\n      </div>\n\n      <div className=\"flex-1\">\n        <div className=\"d-flex flex-column-reverse flex-md-row align-items-center justify-content-between\">\n          {\n            //#region QueryButtons\n          }\n          <div className=\"mb-1\">\n            <QueryButton {...{ history, query }} onClick={(query) => query.set('tab', 'info')}>\n              Info\n            </QueryButton>\n            <QueryButton {...{ history, query }} onClick={(query) => query.set('tab', 'media')}>\n              Media\n            </QueryButton>\n            <QueryButton {...{ history, query }} onClick={(query) => query.set('tab', 'inventory')}>\n              Inventory\n            </QueryButton>\n            <QueryButton {...{ history, query }} onClick={(query) => query.set('tab', 'settings')}>\n              Settings\n            </QueryButton>\n          </div>\n          {\n            //#endregion\n          }\n\n          <div className=\"mb-2 min-w-35\">\n            <ProductListItemCard product={state?.data} />\n          </div>\n        </div>\n\n        <ViewTabs {...sharedProps} />\n      </div>\n    </AdminView>\n  );\n}\n\n//#region TABS\n\n//#region ViewTab\nconst ViewTabs = ({ tab, ...props }) => {\n  const { prodSlug, form, product, state, setProduct, toast } = props;\n\n  if (state?.loading) return <Loading />;\n\n  switch (tab) {\n    case 'media':\n      return <MediaViewTab {...props} />;\n    case 'inventory':\n      return <InventoryViewTab {...props} />;\n    case 'settings':\n      return <SettingsViewTab {...props} />;\n\n    default:\n      const { setError } = props;\n      const { categories } = product;\n      const fields = [\n        'name',\n        'category',\n        'description',\n        'retail_price',\n        'is_pre_sale',\n        'is_pre_sale_text',\n        'is_on_sale',\n        'sale_price',\n      ];\n\n      return (\n        <div className=\"d-grid grid-md-3 gap-1\">\n          {\n            //#region MAIN\n          }\n          <div className=\"span-md-2\">\n            <ProductForm\n              context={form}\n              prodSlug={prodSlug}\n              product={product}\n              fields={fields}\n              onSuccess={(data) => {\n                setProduct(data);\n                toast.success({ message: SHOP_MSGS.product.update_success });\n              }}\n              toast={toast}\n            >\n              <Card\n                title=\"Details\"\n                text=\"Modifier les informations de cet article.\"\n                footer={\n                  <div className=\"sticky\" style={{ bottom: 0 }}>\n                    <div className=\"d-flex justify-content-center\">\n                      <Form.Submit value=\"Sauvegarder\" className=\"submit-btn btn btn-primary min-w-25\" />\n                    </div>\n                  </div>\n                }\n                className=\"mb-1\"\n              >\n                <Form.Field label=\"Nom\" text={LABELS.name_field_text}>\n                  <ProductForm.NameInput error={form.errors.name} />\n                </Form.Field>\n                <Form.Field label=\"Catégorie\" text={LABELS.none}>\n                  <ProductForm.CategoryInput {...{ categories }} error={form.errors.category} className=\"d-block\" />\n                </Form.Field>\n                <Form.Field label=\"Prix\">\n                  <ProductForm.RetailPriceInput error={form.errors.retail_price} />\n                </Form.Field>\n\n                <Form.Field label=\"Pré-vente\">\n                  <ProductForm.PresaleCheckboxInput\n                    label=\"Cet article est en pré-vente\"\n                    error={form.errors.is_pre_sale}\n                  />\n                </Form.Field>\n                {form.values.is_pre_sale && (\n                  <Form.Field text=\"Ajouter un text de pré-vente.(facultatif)\">\n                    <ProductForm.PresaleTextInput error={form.errors.is_pre_sale_text} />\n                  </Form.Field>\n                )}\n\n                <Form.Field label=\"Promotion\" text=\"\">\n                  <ProductForm.OnSaleCheckboxInput label=\"Cet article est en promo\" error={form.errors.is_on_sale} />\n                </Form.Field>\n                {form.values.is_on_sale && (\n                  <Form.Field label=\"Prix réduit\" text=\"\">\n                    <ProductForm.SalePriceInput error={form.errors.sale_price} />\n                  </Form.Field>\n                )}\n\n                <ProductForm.DescField\n                  label=\"Description\"\n                  text={LABELS.desc_field_text}\n                  error={form.errors.description}\n                  placeholder=\"\"\n                />\n              </Card>\n\n              <Card title=\"Seo\">\n                <ProductSEOForm {...props} />\n              </Card>\n            </ProductForm>\n          </div>\n          {\n            //#endregion\n          }\n\n          {\n            //#region SIDEBAR\n          }\n          <div className=\"bg-gray p-1\">\n            <div className=\"sticky\" style={{ top: 0 }}>\n              <div className=\"mb-2\">\n                <StaffProductPublishButton\n                  {...{ prodSlug, product }}\n                  className=\"w-100\"\n                  onPublishSuccess={(data) => {\n                    setProduct(data);\n                    return toast?.success({ message: SHOP_MSGS.product.publish_success });\n                  }}\n                  onUnpublishSuccess={(data) => {\n                    setProduct(data);\n                    return toast?.success({ message: SHOP_MSGS.product.unpublish_success });\n                  }}\n                  onError={(err) => {\n                    setError(err);\n                  }}\n                />\n              </div>\n\n              <div className=\"mb-2\">\n                <SupplierData product={product} />\n              </div>\n            </div>\n          </div>\n          {\n            //#endregion\n          }\n        </div>\n      );\n  }\n};\n//#endregion\n\n//#region MediaViewTab\nconst MediaViewTab = (props) => {\n  const { product, setProduct, toast } = props;\n  return (\n    <AdminView.Section\n      title=\"Images\"\n      actions={\n        <ProductImageUploadButton\n          product={product}\n          onCreateSuccess={(data) => {\n            setProduct({ ...product, ...data });\n          }}\n        />\n      }\n    >\n      <div className=\"d-grid grid-md-3 grid-lg-4\" style={{ gap: 4 }}>\n        <div className=\"\">\n          <StaffCoverUpdateForm\n            slug={product?.cover}\n            data={product.cover_data}\n            onCreate={(imgData) => {\n              productServices\n                .patch(product.slug, { cover: imgData.slug })\n                .then((data) => {\n                  setProduct?.({ ...product, ...data });\n                  toast?.success({ message: SHOP_MSGS.product.cover_create_success });\n                })\n                .catch((err) => {\n                  toast?.error({ message: SHOP_MSGS.product.cover_update_error });\n                });\n            }}\n            onUpdate={(cover_data) => {\n              toast?.success({ message: SHOP_MSGS.product.cover_update_success });\n              return setProduct?.({ ...product, cover_data });\n            }}\n            onDelete={() => {\n              toast?.success({ message: SHOP_MSGS.product.cover_delete_success });\n              return setProduct?.({ ...product, cover_data: null, cover: null });\n            }}\n            className=\"mb-1\"\n          />\n          <ProductImageAltTextInput image={product?.cover_data} />\n        </div>\n\n        {product.images_data.map((img) => {\n          return (\n            <Card\n              title={\n                <Button\n                  onClick={() =>\n                    productServices\n                      .swapCover(product.slug, img.slug)\n                      .then((data) => {\n                        setProduct(data);\n                      })\n                      .catch((err) => {})\n                  }\n                >\n                  Set as cover\n                </Button>\n              }\n              actions={\n                <ImgDeleteIconButton\n                  slug={img.slug}\n                  label=\"\"\n                  className=\"btn-danger-3 ms-1\"\n                  onSuccess={() => {\n                    setProduct({\n                      ...product,\n                      images_data: product.images_data.filter((i) => i.slug !== img.slug),\n                      images: product.images.filter((i) => i !== img.slug),\n                    });\n                  }}\n                />\n              }\n              footer={<ProductImageAltTextInput image={img} />}\n              className=\"mb-1\"\n              bodyClassName=\"p-0\"\n              key={img.slug}\n            >\n              <Img {...img} className=\"product-img\" />\n            </Card>\n          );\n        })}\n      </div>\n    </AdminView.Section>\n  );\n};\n//#endregion\n\n//#region InventoryTab\nconst InventoryViewTab = (props) => {\n  const [addAtr, setAddAtr] = useState(false);\n  const { product, setProduct } = props;\n\n  return (\n    <div className=\"d-grid grid-md-3 gap-1\">\n      <div className=\"span-md-2 p-1 bg-gray\">\n        <AdminView.Section title=\"Tailles\" text=\"Ajouter des tailles\"></AdminView.Section>\n        <AdminView.Section\n          title=\"Attributes\"\n          actions={\n            <Button onClick={() => setAddAtr(!addAtr)} className=\"btn-primary-3\">\n              Ajouter un attribut\n            </Button>\n          }\n        >\n          {addAtr && (\n            <div className=\"border-bottom mb-2 pb-3\">\n              <p className=\"text-center mb-3\">Ajouter un attribut au produit.</p>\n              <AttributeCreateForm\n                product={product}\n                onSuccess={(productData) => setProduct({ ...product, ...productData })}\n              />\n            </div>\n          )}\n\n          <div className=\"my-3\">\n            {product.attributes.map((attr) => (\n              <div className=\"mb-1\" key={attr.slug}>\n                <AttributeUpdateForm\n                  instance={attr}\n                  product={product}\n                  onSuccess={(pData) => setProduct({ ...product, ...pData })}\n                />\n              </div>\n            ))}\n          </div>\n        </AdminView.Section>\n      </div>\n\n      <div className=\"p-1\">\n        <div className=\"sticky\" style={{ top: 0 }}>\n          <div className=\"\">\n            <SupplierData product={product} />\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n//#endregion\n\n//#region SettingsTab\nconst SettingsViewTab = (props) => {\n  const { prodSlug, toast } = props;\n\n  return (\n    <div className=\"\">\n      <AdminView.Section title=\"Supprimer cet article\">\n        <Button\n          className=\"btn-danger\"\n          onClick={() => {\n            return productServices\n              .delete(prodSlug)\n              .then(() => {\n                toast?.success({ message: SHOP_MSGS.product.delete_success });\n                if (props.onDelete) return props?.onDelete?.({ prodSlug });\n                return props.history.push(SHOP_PATHS.productList());\n              })\n              .catch((err) => {\n                return toast?.error({ message: SHOP_MSGS.product.delete_error });\n              });\n          }}\n        >\n          Delete product\n        </Button>\n      </AdminView.Section>\n    </div>\n  );\n};\n//#endregion SettingTab\n\n//#endregion TABS\n\n//#region ProductSEOForm\nconst ProductSEOForm = ({ prodSlug, product, form, ...props }) => {\n  if (!form || !prodSlug) return null;\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    const fD = { title: form.values.title, slug_public: form.values.slug_public };\n\n    return productServices\n      .patchPage(prodSlug, fD, { title: product?.page?.title, slug_public: product?.page?.slug_public })\n      .then((data) => {\n        setProduct({ ...product, ...data });\n        toast.success({ message: SHOP_MSGS.product.page_update_success });\n      })\n      .catch((err) => {\n        form.handleError(err);\n        toast.error({ message: SHOP_MSGS.product.page_update_error });\n      });\n  };\n  return (\n    <Form context={form} onSubmit={handleSubmit}>\n      <Form.Field label=\"Meta title\" className=\"mb-1\">\n        <Form.TextInput\n          required\n          name=\"title\"\n          error={form.errors.title}\n          placeholder=\"Give a name to the item\"\n          maxLength={99}\n        />\n      </Form.Field>\n\n      <Form.Field label=\"Slug\" className=\"mb-1\">\n        <Form.TextInput\n          required\n          name=\"slug_public\"\n          error={form.errors.slug_public}\n          placeholder={'Write slug ...'}\n          maxLength={99}\n        />\n      </Form.Field>\n\n      <div className=\"my-2\">\n        <Form.Submit value=\"Update\" className=\"btn btn-primary-3\" />\n      </div>\n    </Form>\n  );\n};\n//#endregion ProductSEOForm\n\nconst QueryButton = ({ children, query, onClick, ...props }) => {\n  const { history, ...rest } = props;\n  const handleClick = (e) => {\n    onClick?.(query);\n    pushQuery();\n  };\n\n  function pushQuery() {\n    const path = new URL(window.location.href);\n    history?.push?.(`${path.pathname}?${query}`);\n  }\n\n  return (\n    <Button {...rest} onClick={handleClick}>\n      {children}\n    </Button>\n  );\n};\n\nexport const pFormInitial = {\n  name: '',\n  description: '',\n  category: '',\n  retail_price: 0.0,\n  is_pre_sale: false,\n  is_pre_sale_text: '',\n  sale_price: 0.0,\n  is_on_sale: false,\n  //\n  title: '',\n  slug_public: '',\n};\n\nconst mapProductDataToForm = (data) => ({\n  name: data.name || '',\n  description: data.description || '',\n  category: data.category || '',\n  retail_price: data?.retail_price || 0.0,\n  //\n  is_pre_sale: data.is_pre_sale || false,\n  is_pre_sale_text: data.is_pre_sale_text || '',\n  //\n  is_on_sale: data.is_on_sale || false,\n  sale_price: data?.sale_price || 0.0,\n  //\n  title: data.page.title || '',\n  slug_public: data?.page?.slug_public || '',\n});\n\nconst LABELS = {\n  viewTitle: 'Modifier cet article',\n  viewText: '',\n  viewCn: '',\n\n  name_field_text: `Ajoutez un nom qui décrit cet article. Les noms peuvent contenir jusqu’à 99 caractères.\\nNous recommandons 65 caractères au max.`,\n\n  desc_field_text: `Ajoutez les caractéristiques uniques qui décrivent cet article.`,\n  none: '',\n};\n\nconst CN = {\n  view: 'staff-product-update-view',\n};\n"],"sourceRoot":""}
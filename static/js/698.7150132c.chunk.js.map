{"version":3,"file":"static/js/698.7150132c.chunk.js","mappings":"+TAUe,SAASA,IACtB,IAAMC,GAAWC,EAAAA,EAAAA,MACjB,GAAiBC,EAAAA,EAAAA,MACXC,GADN,eACoBC,IAAI,QAEhBC,GAAQC,EAAAA,EAAAA,KAAW,kBAAMC,EAAAA,EAAAA,KAAgBC,KAAK,CAAEC,OAAQ,CAAEN,KAAAA,OAAW,CAAEO,YAAa,CAACP,KAArFE,IAEFM,EAAI,IAAIC,EAAAA,GAASP,GACvB,OAAKM,EAAEE,WAGL,SAAC,UAAD,CACEC,MAAM,SACNC,KAAK,eACLC,SACE,SAAC,YAAD,CACEC,QAAS,YACPV,EAAAA,EAAAA,KACGW,OAAO,IACPC,MAAK,YAAoB,IAAjBC,EAAgB,EAAhBA,KACP,OAAOpB,EAAS,GAAD,OAAIoB,EAAKC,KAAT,SAEhBC,OAAM,SAACC,QAIZC,UAAU,gBACVC,cAAe,CAAC,2BAChBX,MAAO,kBAbT,uBAkBFW,cAAe,CAAC,4BAtBlB,UAwBE,SAAC,aAAD,CAAeC,QAAQ,SAAC,MAAD,kBAAgBf,EAAES,MAAlB,IAAwBO,UAAWC,EAAAA,GAAAA,KAAYC,IAAE,KAAxE,UACE,SAAC,KAAD,CACEC,QAAM,EACNC,MAAOpB,EAAEoB,MACTC,QACE,iCACE,SAAC,QAAD,KACA,SAAC,QAAD,qBACA,SAAC,QAAD,oBACA,SAAC,QAAD,0BACA,SAAC,QAAD,8BAGJC,WAAY,SAACC,GACX,MAAgFA,EAAxEC,KAAAA,OAAR,MAAe,YAAf,EAA4Bd,EAAoDa,EAApDb,KAAMe,EAA8CF,EAA9CE,QAASL,EAAqCG,EAArCH,MAAOM,EAA8BH,EAA9BG,WAAYC,EAAkBJ,EAAlBI,cAE9D,OACE,UAAC,QAAD,YACE,UAAC,QAAD,YACE,SAAC,UAAD,CAAYT,GAAE,UAAKR,EAAL,KAAcG,UAAU,GAAtC,UACE,gBAAKA,UAAU,gBAAf,SAAgCW,MAEjCD,EAAKK,aAGR,SAAC,QAAD,iBAAWR,QAAX,IAAWA,OAAX,EAAWA,EAAOS,UAClB,SAAC,QAAD,UAAWJ,KACX,SAAC,QAAD,WACE,SAACK,GAAD,UAAWJ,OAEb,SAAC,QAAD,WACE,SAACI,GAAD,UAAWH,QAdAjB,IAmBnBG,UAAU,cA/DO,KAsE3B,IAAMiB,EAAQ,SAACC,GACb,IAAQC,EAAqBD,EAArBC,iBACR,OAAO,gBAAKnB,UAAU,YAAf,SAA4BmB,M,2GCvF/BC,EAAU,IAEVC,EAAAA,SAAAA,IAAAA,EAAAA,EAAAA,GAAAA,EAAAA,GAAAA,IAAAA,GAAAA,EAAAA,EAAAA,GAAAA,GAAAA,SAAAA,IAAAA,OAAAA,EAAAA,EAAAA,GAAAA,KAAAA,GAAAA,EAAAA,MAAAA,KAAAA,WAUH,OAVGA,EAAAA,EAAAA,GAAAA,EAAAA,CAAAA,CAAAA,IAAAA,YAAAA,MACJ,SAAUC,GACR,OAAOC,KAAKC,KAAL,UAAaD,KAAKE,MAAlB,UAAiC,CAAEH,IAAAA,GAAO,CAAEF,QAAAA,MACpD,qBACD,SAAQE,GACN,OAAOC,KAAKC,KAAL,UAAaD,KAAKE,MAAlB,QAA+B,CAAEH,IAAAA,GAAO,CAAEF,QAAAA,MAClD,uBAED,SAAUE,GACR,OAAOC,KAAKC,KAAL,UAAaD,KAAKE,MAAlB,UAAiC,CAAEH,IAAAA,GAAO,CAAEF,QAAAA,QACpD,EAVGC,CAA6BK,EAAAA,IAatB3C,EAAgB,eAACa,EAAD,uDAA2B,GAA3B,OAC3B+B,EAAAA,EAAAA,IAAoD/B,EAAM,iBAAkByB","sources":["../../../../packages/shopy-storejs/src/Supplier/index.tsx","../../../../packages/shopy-storejs/src/Supplier/models.tsx"],"sourcesContent":["import * as React from 'react';\n\nimport { useRequest } from '@miq/hookjs';\nimport Staff from '@miq/staffjs';\nimport { Response } from '@miq/utiljs';\nimport { useNavigate, useSearchParams } from 'react-router-dom';\nimport { SupplierOrder } from './models';\nimport { Pagination, Table } from '@miq/componentjs';\nimport { SupplierOrderType } from '../types';\n\nexport default function SupplierOrderIndexView() {\n  const navigate = useNavigate();\n  const [params] = useSearchParams();\n  const page = params.get('page');\n\n  const { res } = useRequest(() => SupplierOrder().list({ params: { page } }), { refreshDeps: [page] });\n\n  const r = new Response(res);\n  if (!r.isSuccess) return null;\n\n  return (\n    <Staff.View\n      title=\"Orders\"\n      back=\"/staff/shop/\"\n      actions={\n        <Staff.Button\n          onClick={() => {\n            SupplierOrder()\n              .create({})\n              .then(({ data }: any) => {\n                return navigate(`${data.slug}/`);\n              })\n              .catch((err: any) => {\n                // console.log(err);\n              });\n          }}\n          className=\"btn-primary-3\"\n          requiredPerms={['store.add_supplierorder']}\n          title={'Add a new order'}\n        >\n          Add order\n        </Staff.Button>\n      }\n      requiredPerms={['store.view_supplierorder']}\n    >\n      <Staff.Section footer={<Pagination {...r.data} component={Staff.Link} to />}>\n        <Table\n          border\n          items={r.items}\n          header={\n            <>\n              <Table.Th></Table.Th>\n              <Table.Th>Items</Table.Th>\n              <Table.Th>Paid</Table.Th>\n              <Table.Th>Total Cost</Table.Th>\n              <Table.Th>Est. Revenue</Table.Th>\n            </>\n          }\n          renderItem={(item: SupplierOrderType) => {\n            const { name = 'New order', slug, is_paid, items, items_cost, items_revenue } = item;\n\n            return (\n              <Table.Tr key={slug}>\n                <Table.Td>\n                  <Staff.Link to={`${slug}/`} className=\"\">\n                    <div className=\"text-ellipsis\">{name}</div>\n                  </Staff.Link>\n                  {item.avg_cost}\n                </Table.Td>\n\n                <Table.Td>{items?.length}</Table.Td>\n                <Table.Td>{is_paid}</Table.Td>\n                <Table.Td>\n                  <Price {...items_cost} />\n                </Table.Td>\n                <Table.Td>\n                  <Price {...items_revenue} />\n                </Table.Td>\n              </Table.Tr>\n            );\n          }}\n          className=\"w-100\"\n        />\n      </Staff.Section>\n    </Staff.View>\n  );\n}\n\nconst Price = (props: any) => {\n  const { amountWithSymbol } = props;\n  return <div className=\"miq-price\">{amountWithSymbol}</div>;\n};\n\nexport * from './models';\n\n// <div className=\"miq-container\">\n","import { StaffModel, StaffService } from '@miq/staffjs';\nimport { SupplierOrderType } from '../types';\n\nconst timeout = 10000;\n\nclass SupplierOrderService extends StaffService<SupplierOrderType> {\n  postFnova(url: string) {\n    return this.post(`${this._path}fnova/`, { url }, { timeout });\n  }\n  postPlt(url: string) {\n    return this.post(`${this._path}plt/`, { url }, { timeout });\n  }\n\n  postShein(url: string) {\n    return this.post(`${this._path}shein/`, { url }, { timeout });\n  }\n}\n\nexport const SupplierOrder = (data: SupplierOrderType = {}) =>\n  StaffModel<SupplierOrderType, SupplierOrderService>(data, 'supplierorders', SupplierOrderService);\n\nexport type SupplierType = {\n  slug?: string;\n  name_choices: any;\n  created: any;\n  updated: any;\n};\n"],"names":["SupplierOrderIndexView","navigate","useNavigate","useSearchParams","page","get","res","useRequest","SupplierOrder","list","params","refreshDeps","r","Response","isSuccess","title","back","actions","onClick","create","then","data","slug","catch","err","className","requiredPerms","footer","component","Staff","to","border","items","header","renderItem","item","name","is_paid","items_cost","items_revenue","avg_cost","length","Price","props","amountWithSymbol","timeout","SupplierOrderService","url","this","post","_path","StaffService","StaffModel"],"sourceRoot":""}
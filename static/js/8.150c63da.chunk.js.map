{"version":3,"sources":["shop/category/utils.jsx","shop/category/components.jsx","shop/category/index.jsx"],"names":["catServices","path","catSlug","values","oldValues","this","patchPath","StaffService","CatNameInput","props","TextInput","placeholder","maxLength","required","name","StaffCategoryUpdateView","lazy","CategoryCreateForm","form","useForm","context","onSubmit","e","canAdd","preventDefault","post","then","data","history","push","addForwardSlash","match","url","slug","catch","err","handleError","className","Label","value","error","errors","Submit","disabled","StaffCategoryIndexView","useState","setData","isAdding","setAdding","perms","useContext","SharedDataCtx","useEffect","list","hasPerms","title","back","actions","onClick","Section","results","items","renderItem","cat","Tr","Td","cover_data","to","products_count","total","published","is_published","page","pill","pagination","count","next","previous","StaffCategoryRoutes","render","args","requiredPerms"],"mappings":"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","file":"static/js/8.150c63da.chunk.js","sourcesContent":["import { StaffService } from \"@miq/utils\";\n\nclass StaffCategoryService extends StaffService {\n  constructor(path) {\n    super(path);\n  }\n\n  patchPage(catSlug, values, oldValues) {\n    return this.patchPath(`${this.path}${catSlug}/page/`, values, oldValues);\n  }\n}\n\nexport const catServices = new StaffCategoryService(\"categories/\");\n","import Form from \"@miq/form\";\n\nexport const CatNameInput = (props) => (\n  <Form.TextInput placeholder=\"Entrez le nom de la catégorie ...\" maxLength={99} {...props} required name=\"name\" />\n);\n","import React, { lazy, useContext, useEffect, useState } from \"react\";\nimport { Switch, Link } from \"react-router-dom\";\n\nimport Form, { useForm } from \"@miq/form\";\nimport { SharedDataCtx } from \"@miq/contexts\";\nimport { AdminRoute, AdminView, hasPerms, PublishedStatusSpan } from \"@miq/adminjs\";\nimport { Table, ItemTable, Button, ImgSquare } from \"@miq/components\";\nimport { catServices } from \"./utils\";\nimport { addForwardSlash } from \"@miq/utils\";\nimport { CatNameInput } from \"./components\";\n\n// import \"./category.scss\";\n\nconst StaffCategoryUpdateView = lazy(() => import(\"./UpdateView\"));\n\nconst CategoryCreateForm = (props) => {\n  const form = useForm({ name: \"\" });\n\n  const handleSubmit = (e) => {\n    if (!props.canAdd) return;\n\n    e.preventDefault();\n\n    catServices\n      .post(form.values)\n      .then((data) => {\n        props?.history?.push(`${addForwardSlash(props.match.url)}${data.slug}/`);\n      })\n      .catch((err) => {\n        form.handleError(err);\n      });\n  };\n  return (\n    <Form context={form} onSubmit={handleSubmit}>\n      <div className=\"\">\n        <Form.Label value=\"Nom de la catégorie\" />\n        <CatNameInput error={form.errors.name} />\n      </div>\n\n      <div className=\"my-3\">\n        <Form.Submit value={\"Save category\"} disabled={!props?.canAdd} className=\"btn btn-primary\" />\n      </div>\n    </Form>\n  );\n};\n\nconst StaffCategoryIndexView = (props) => {\n  const [data, setData] = useState({});\n  const [isAdding, setAdding] = useState(false);\n  const { perms } = useContext(SharedDataCtx);\n\n  useEffect(() => {\n    catServices.list().then((data) => {\n      setData(data);\n    });\n  }, []);\n\n  const canAdd = hasPerms(perms.perms, [\"shop.add_category\"]);\n\n  return (\n    <AdminView\n      title=\"Categories\"\n      back={props.back}\n      actions={\n        <Button\n          onClick={() => setAdding(!isAdding)}\n          disabled={!canAdd}\n          className=\"btn-primary-3\"\n          title={canAdd ? \"Add a new category\" : \"You cannot perform this action\"}\n        >\n          Add category\n        </Button>\n      }\n    >\n      {isAdding && (\n        <AdminView.Section title=\"Add a category\">\n          <CategoryCreateForm history={props.history} match={props.match} canAdd={canAdd} />\n        </AdminView.Section>\n      )}\n\n      {data?.results && (\n        <AdminView.Section className=\"category-table mb-3\">\n          <ItemTable\n            className=\"w-100\"\n            items={data.results}\n            // renderItem={(item) => <CategoryRow {...props} category={item} key={item.slug} />}\n            renderItem={(cat) => {\n              return (\n                <Table.Tr className=\"border-bottom\" key={cat.slug}>\n                  <Table.Td className=\"\">\n                    <ImgSquare {...cat.cover_data} className=\"rounded\" />\n                  </Table.Td>\n\n                  <Table.Td className=\"w-100\">\n                    <Link to={`${addForwardSlash(props.match.url)}${cat.slug}/`}>\n                      <div className=\"fw-bold\" title={cat.title}>\n                        {cat.name}\n                      </div>\n                    </Link>\n                    <div className=\"text-muted text-sm\">\n                      <span className=\"me-1\">Products: {cat?.products_count?.total ?? 0}</span>\n                      <span>Published: {cat?.products_count?.published ?? 0}</span>\n                    </div>\n                  </Table.Td>\n\n                  <Table.Td className=\"d-none d-md-table-cell text-sm text-center\">\n                    <PublishedStatusSpan is_published={cat?.page?.is_published} pill />\n                  </Table.Td>\n                </Table.Tr>\n              );\n            }}\n            pagination={{\n              count: data.count,\n              next: data.next,\n              previous: data.previous,\n              // onPreviousClick: handlePreviousClick,\n              // onNextClick: handleNextClick,\n            }}\n          />\n        </AdminView.Section>\n      )}\n    </AdminView>\n  );\n};\n\nexport default function StaffCategoryRoutes(props) {\n  const { path, url } = props.match;\n\n  return (\n    <Switch>\n      <AdminRoute\n        path={`${path}:catSlug/`}\n        render={(args) => <StaffCategoryUpdateView {...args} back={addForwardSlash(url)} />}\n        requiredPerms={[\"shop.change_category\"]}\n      />\n      <AdminRoute\n        requiredPerms={[\"shop.view_category\"]}\n        render={(args) => <StaffCategoryIndexView {...args} back={props.back} />}\n      />\n    </Switch>\n  );\n}\n"],"sourceRoot":""}
{"version":3,"sources":["shop/product/utils.jsx","shop/product/index.jsx"],"names":["productServices","prodSlug","this","patchPath","path","unpublish","values","postPath","attrSlug","oldValues","deletePath","StaffService","StaffProductAddView","lazy","StaffProductUpdateView","StaffProductIndexView","props","useState","count","data","setData","status","setStatus","filter","setFilter","perms","useContext","SharedDataCtx","search","location","useEffect","params","URLSearchParams","i","length","list","then","catch","err","canAdd","hasPerms","query","pushQuery","URL","window","href","history","push","pathname","title","back","actions","label","to","addForwardSlash","match","url","disabled","className","Section","onClick","action","method","type","id","target","checked","set","delete","Boolean","get","htmlFor","value","onChange","e","categories","items","map","cat","slug","results","headers","renderItem","prod","Tr","Td","cover_data","name","category_data","is_pre_sale","add_to_cart_count","is_on_sale","sale_price","retail_price","is_published","page","pill","pagination","next","previous","onPreviousClick","newData","onNextClick","StaffProductRoutes","render","args","requiredPerms"],"mappings":"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","file":"static/js/8.33948848.chunk.js","sourcesContent":["import { StaffService } from '@miq/utils';\n\nclass StaffProductService extends StaffService {\n  publish(prodSlug) {\n    return this.patchPath(`${this.path}${prodSlug}/publish/`, {});\n  }\n\n  unpublish(prodSlug) {\n    return this.patchPath(`${this.path}${prodSlug}/publish/`, { unpublish: true });\n  }\n\n  // ATTR\n\n  postAttribute(prodSlug, values) {\n    return this.postPath(`${this.path}${prodSlug}/attribute/new/`, values);\n  }\n\n  patchAttribute(prodSlug, attrSlug, values, oldValues) {\n    return this.patchPath(`${this.path}${prodSlug}/attribute/${attrSlug}/`, values, oldValues);\n  }\n\n  deleteAttribute(prodSlug, attrSlug) {\n    return this.deletePath(`${this.path}${prodSlug}/attribute/${attrSlug}/`);\n  }\n\n  // PAGE\n\n  patchPage(prodSlug, values, oldValues) {\n    return this.patchPath(`${this.path}${prodSlug}/page/`, values, oldValues);\n  }\n}\n\nexport const productServices = new StaffProductService('products/');\n","import React, { lazy, useState, useContext, useEffect } from 'react';\nimport { Switch, Link } from 'react-router-dom';\n\nimport './index.scss';\n\nimport { SharedDataCtx } from '@miq/contexts';\nimport { AdminRoute, AdminNavLink, AdminView, hasPerms, PublishedStatusSpan } from '@miq/adminjs';\nimport { addForwardSlash } from '@miq/utils';\nimport { Table, ItemTable, ImgSquare, Loading, Button } from '@miq/components';\n\nimport { productServices } from './utils';\n\nconst StaffProductAddView = lazy(() => import('./AddView'));\nconst StaffProductUpdateView = lazy(() => import('./UpdateView'));\n\nconst StaffProductIndexView = (props) => {\n  const [data, setData] = useState({ count: 0 });\n  const [status, setStatus] = useState('pending');\n  const [filter, setFilter] = useState(true);\n  const { perms } = useContext(SharedDataCtx);\n\n  const { search } = props.location;\n  useEffect(() => {\n    // setStatus(\"pending\");\n    let params = new URLSearchParams(search);\n    if (![...params.values()].filter((i) => i).length) {\n      params = null;\n    }\n\n    productServices\n      .list(params)\n      .then((data) => {\n        setData(data);\n        setStatus('success');\n      })\n      .catch((err) => {\n        setStatus('failed');\n      });\n  }, [search]);\n\n  const canAdd = hasPerms(perms.perms, ['shop.add_product']);\n\n  if (status === 'pending') return <Loading />;\n  if (status === 'failed') return <div>Something went wrong. Please reload the page!</div>;\n\n  const query = new URLSearchParams(search);\n\n  // console.log(data.categories);\n\n  function pushQuery() {\n    const path = new URL(window.location.href);\n    props.history.push(`${path.pathname}?${query}`);\n  }\n\n  return (\n    <AdminView\n      title={`Products (${data.count})`}\n      back={props.back}\n      actions={\n        <AdminNavLink\n          label=\"Add product\"\n          to={`${addForwardSlash(props.match.url)}new/`}\n          disabled={!canAdd}\n          className=\"btn-primary\"\n        />\n      }\n    >\n      <AdminView.Section actions={<Button onClick={() => setFilter(!filter)}>Filter</Button>}>\n        {filter && (\n          <form action=\".\" method=\"GET\">\n            <div className=\"d-flex p-2\">\n              <input\n                type={'checkbox'}\n                className=\"miq-checkbox\"\n                id=\"published\"\n                className=\"me-2\"\n                onChange={({ target }) => {\n                  const { checked } = target;\n                  if (!checked) {\n                    query.delete('status');\n                  } else {\n                    query.set('status', 'published');\n                  }\n                  // query.set(\"published\", !value);\n                  pushQuery();\n                }}\n                checked={Boolean(query.get('status')) || false}\n              />\n              <label htmlFor=\"published\">Published</label>\n            </div>\n\n            <select\n              className=\"miq-select ms-1\"\n              value={query.get('cat') || 'all'}\n              onChange={(e) => {\n                const { value } = e.target;\n                if (!value || value === 'all') {\n                  query.delete('cat');\n                } else {\n                  query.set('cat', value);\n                }\n                pushQuery();\n              }}\n            >\n              <option value=\"all\">All categories</option>\n              {data?.categories?.items?.map((cat) => (\n                <option value={cat.value} key={cat.slug}>\n                  {cat.label}\n                </option>\n              ))}\n            </select>\n          </form>\n        )}\n      </AdminView.Section>\n\n      {data?.results && (\n        <AdminView.Section className=\"product-table mb-3\">\n          <ItemTable\n            className=\"w-100\"\n            items={data.results}\n            headers={['', '', 'Add to carts', 'Price (CFA)', 'Status']}\n            renderItem={(prod) => {\n              return (\n                <Table.Tr className=\"border-bottom\" key={prod.slug}>\n                  <Table.Td className=\"\">\n                    <ImgSquare {...prod.cover_data} className=\"rounded\" />\n                  </Table.Td>\n\n                  <Table.Td className=\"\">\n                    <Link to={`${addForwardSlash(props.match.url)}${prod.slug}/`}>\n                      <div className=\"fw-bold\" title={prod.name}>\n                        {prod.name}\n                      </div>\n                    </Link>\n                    <div className=\"text-muted text-sm\">\n                      {prod.category_data && <span className=\"me-1\">{prod.category_data.name}</span>}\n                      {prod.is_pre_sale && <span className=\"me-1\">Pre sale</span>}\n                    </div>\n                  </Table.Td>\n\n                  <Table.Td className=\"d-none d-md-table-cell text-sm text-center\">{prod.add_to_cart_count}</Table.Td>\n\n                  <Table.Td className=\"text-center\">\n                    {prod.is_on_sale ? (\n                      <span className=\"text-danger\">{prod.sale_price}</span>\n                    ) : (\n                      <span className=\"\">{prod.retail_price}</span>\n                    )}\n                  </Table.Td>\n\n                  <Table.Td className=\"d-none d-md-table-cell text-sm text-center\">\n                    <PublishedStatusSpan is_published={prod?.page?.is_published} pill />\n                  </Table.Td>\n                </Table.Tr>\n              );\n            }}\n            pagination={{\n              count: data.count,\n              next: data.next,\n              previous: data.previous,\n              onPreviousClick: () => {\n                if (!data || !data.previous) return;\n                setStatus('pending');\n                return productServices\n                  .get(data.previous)\n                  .then((newData) => {\n                    setData(newData);\n                    return setStatus('succcess');\n                  })\n                  .catch((err) => setStatus('failed'));\n              },\n              onNextClick: () => {\n                if (!data || !data.next) return;\n                setStatus('pending');\n                return productServices\n                  .get(data.next)\n                  .then((newData) => {\n                    setData(newData);\n                    return setStatus('succcess');\n                  })\n                  .catch((err) => setStatus('failed'));\n              },\n            }}\n          />\n        </AdminView.Section>\n      )}\n    </AdminView>\n  );\n};\n\nexport default function StaffProductRoutes(props) {\n  const { path, url } = props.match;\n\n  return (\n    <Switch>\n      <AdminRoute\n        path={`${path}new/`}\n        render={(args) => <StaffProductAddView back={addForwardSlash(url)} {...args} />}\n        requiredPerms={['shop.add_product']}\n      />\n      <AdminRoute\n        path={`${path}:prodSlug/`}\n        render={(args) => <StaffProductUpdateView back={addForwardSlash(url)} {...args} />}\n        requiredPerms={['shop.change_product']}\n      />\n      <AdminRoute\n        requiredPerms={['shop.view_product']}\n        render={(args) => <StaffProductIndexView {...args} back={props.back} />}\n      />\n    </Switch>\n  );\n}\n"],"sourceRoot":""}
{"version":3,"file":"static/js/85.20215e72.chunk.js","mappings":"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","sources":["../../../../shopy/shopy-storejs/src/Product/forms.tsx","../../../../shopy/shopy-storejs/src/Supplier/components.tsx","../../../../shopy/shopy-storejs/src/Supplier/index.tsx","../../../../shopy/shopy-storejs/src/Supplier/models.tsx"],"sourcesContent":["import * as React from 'react';\n\nimport Form, {\n  CheckboxFieldProps,\n  DescriptionField,\n  FormProps,\n  IFormCallbackProps,\n  IFormUpdateProps,\n  NameField,\n  SelectFieldProps,\n  TextChoicesType,\n  TextFieldProps,\n  useForm,\n} from '@miq/formjs';\nimport { getCN, isRequired as isR } from '@miq/utiljs';\n\nimport { emitter } from '../events';\nimport { CategoryChoicesType } from '../types';\n\nimport { StaffProduct, TStaffProductInstance } from './models';\nimport { URLSearchParamsInit, useSearchParams } from 'react-router-dom';\nimport { Button } from '@miq/componentjs';\nimport { SupplierOrder } from '../Supplier';\n\n/**\n *\n */\n\ninterface IProductUpdateFormProps extends IFormUpdateProps<TStaffProductInstance> {\n  onWillSubmit?: () => void;\n  fields?: string[];\n}\n\nexport const ProductQuickUpdateForm = (\n  props: Omit<IProductUpdateFormProps, 'context'> & { categories: CategoryChoicesType; orderSlug?: string }\n) => {\n  const { instance, categories, orderSlug, ...rest } = props;\n\n  const form = useForm({\n    name: instance.name || '',\n    category: instance.category || '',\n    description: instance.description || '',\n    retail_price: instance?.retail_price || 0.0,\n    is_pre_sale: instance.is_pre_sale || false,\n    is_pre_sale_text: instance.is_pre_sale_text || '',\n  });\n\n  const { errors } = form;\n  const { fields = ['name', 'category', 'description', 'retail_price', 'is_pre_sale', 'is_pre_sale_text'] } = props;\n\n  return (\n    <ProductUpdateForm {...rest} context={form} instance={instance} fields={fields}>\n      <ProductForm.NameField error={errors.name} />\n\n      <ProductForm.DescriptionField error={errors.description} />\n\n      <div className=\"d-grid grid-md-3 gap-2\">\n        {categories && <ProductForm.CategoryField categories={categories} error={errors.category} />}\n        <ProductForm.RetailPriceField error={errors.retail_price} />\n      </div>\n\n      <ProductForm.PresaleCheckboxField label=\"En pré-vente\" error={errors.is_pre_sale} />\n      {form.values.is_pre_sale && (\n        <ProductForm.PresaleTextField label=\"Pre-sale text\" placeholder=\"Explain ...\" error={errors.is_pre_sale_text} />\n      )}\n\n      <div className=\"d-flex align-items-center justify-content-between\">\n        <div>\n          {orderSlug && instance?.slug && (\n            <Button\n              onClick={() => {\n                SupplierOrder({ slug: orderSlug }).destroyItem(instance.slug!);\n              }}\n            >\n              Remove from order\n            </Button>\n          )}\n        </div>\n\n        <Form.Submit value=\"Sauvegarder\" className=\"btn-primary-3 btn-md\" />\n      </div>\n    </ProductUpdateForm>\n  );\n};\n\nexport function ProductUpdateForm({ children, ...props }: IProductUpdateFormProps) {\n  const {\n    instance = isR('StaffProduct instance'),\n    fields = isR('fields instance'),\n    onSuccess,\n    onError,\n    ...rest\n  } = props;\n\n  const { context } = rest;\n\n  const handleSubmit = (e: React.FormEvent) => {\n    e.preventDefault();\n    props?.onWillSubmit?.();\n\n    const fd: any = {};\n    fields.forEach((field) => {\n      const value = context.values[field];\n      if (value == null) return;\n      if (field == 'is_pre_sale_dt' && !value) return;\n\n      fd[field] = value;\n    });\n\n    return instance\n      .update(fd)\n      .then(({ data }: any) => {\n        onSuccess?.(data);\n        emitter.update(data);\n      })\n      .catch((err: any) => {\n        if (onError) return onError(err);\n        return context.handleError(err);\n      });\n  };\n\n  return (\n    <ProductForm {...rest} onSubmit={handleSubmit}>\n      {children}\n    </ProductForm>\n  );\n}\n\n/**\n *\n */\n\nexport interface ProductCreateFormProps extends IFormCallbackProps {}\n\nexport const ProductCreateForm: React.FC<ProductCreateFormProps> = (props) => {\n  const form = useForm({ name: '', retail_price: '', description: '' });\n\n  const { errors } = form;\n\n  const handleCreate = (e: React.FormEvent) => {\n    e.preventDefault();\n    StaffProduct()\n      .create(form.values)\n      .then((res: any) => props?.onSuccess?.(res))\n      .catch((err: any) => form.handleError(err));\n  };\n\n  return (\n    <ProductForm context={form} onSubmit={handleCreate}>\n      <ProductForm.NameField label=\"Nom du produit\" error={errors.name} />\n      <ProductForm.RetailPriceField required={false} label=\"Prix du produit\" error={errors.retail_price} />\n      <ProductForm.DescriptionField label=\"Description du produit\" error={errors.description} />\n\n      <Form.Submit value=\"Sauvegarder\" className=\"btn-primary-3\" />\n    </ProductForm>\n  );\n};\n\n/**\n *\n */\n\nexport const ProductForm = (props: FormProps) => <Form {...props} />;\n\n/**\n *\n */\n\nProductForm.NameField = (props: TextFieldProps) => (\n  <NameField placeholder=\"Entrez un titre clair et concis ...\" {...props} />\n);\nProductForm.DescriptionField = (props: TextFieldProps) => (\n  <DescriptionField placeholder=\"Décrivez les caractéristiques et les avantages ...\" {...props} />\n);\n\nProductForm.CategoryField = (props: SelectFieldProps & { categories: CategoryChoicesType }) => {\n  const { label, text, error, categories, ...rest } = props;\n\n  return (\n    <Form.Field {...{ label, text, error }}>\n      <Form.Select {...rest} required name=\"category\" nullValue={{ label: 'Sélectionnez une catégorie ...' }}>\n        {categories?.items?.map((cat) => {\n          return <Form.Option {...cat} key={cat.value} />;\n        })}\n      </Form.Select>\n    </Form.Field>\n  );\n};\n\nProductForm.SalePriceField = (props: TextFieldProps) => {\n  const { label, text, error, ...rest } = props;\n  return (\n    <Form.Field {...{ label, text, error }}>\n      <Form.Text\n        aria-describedby=\"sale_price_label\"\n        min=\"0\"\n        step=\"0.01\"\n        required\n        placeholder=\"Prix réduit\"\n        {...rest}\n        type=\"number\"\n        name=\"sale_price\"\n      />\n    </Form.Field>\n  );\n};\n\nProductForm.OnSaleCheckboxField = (props: CheckboxFieldProps) => {\n  const { label, text, error, ...rest } = props;\n\n  return (\n    <Form.Field {...{ label, text, error }} checkbox>\n      <Form.Checkbox {...rest} name=\"is_on_sale\" />\n    </Form.Field>\n  );\n};\n\nProductForm.PresaleCheckboxField = (props: CheckboxFieldProps) => {\n  const { label, text, error, ...rest } = props;\n\n  return (\n    <Form.Field {...{ label, text, error }} checkbox>\n      <Form.Checkbox {...rest} name=\"is_pre_sale\" />\n    </Form.Field>\n  );\n};\n\nProductForm.OosCheckboxField = (props: CheckboxFieldProps) => {\n  const { label = 'En rupture de stock', text, error, ...rest } = props;\n\n  return (\n    <Form.Field {...{ label, text, error }} checkbox>\n      <Form.Checkbox {...rest} name=\"is_oos\" />\n    </Form.Field>\n  );\n};\n\nProductForm.PresaleTextField = (props: TextFieldProps) => {\n  const { label, text, error, ...rest } = props;\n  return (\n    <Form.Field {...{ label, text, error }}>\n      <Form.TextAreaX placeholder=\"\" {...rest} name=\"is_pre_sale_text\" aria-describedby=\"is_pre_sale_text_label\" />\n    </Form.Field>\n  );\n};\n\nProductForm.RetailPriceField = (props: TextFieldProps) => {\n  const { label, text, error, ...rest } = props;\n\n  return (\n    <Form.Field {...{ label, text, error }}>\n      <Form.Text\n        required\n        placeholder=\"Prix\"\n        aria-describedby=\"retail_price_label\"\n        min=\"0\"\n        step=\"0.01\"\n        {...rest}\n        type=\"number\"\n        name=\"retail_price\"\n      />\n    </Form.Field>\n  );\n};\n\nProductForm.StageSelectField = (props: SelectFieldProps & { stages: TextChoicesType }) => {\n  const { label, text, error, stages, ...rest } = props;\n\n  return (\n    <Form.Field {...{ label, text, error }}>\n      <Form.Select required name={'stage'} nullValue={{ label: 'Select stage' }} {...rest}>\n        {stages?.map?.((stage) => {\n          return <Form.Option {...stage} key={stage.value} />;\n        })}\n      </Form.Select>\n    </Form.Field>\n  );\n};\n\ntype ProductListFilterFormProps = {\n  children?: React.ReactNode;\n  categories?: CategoryChoicesType;\n};\n\nexport const ProductListFilterForm = ({ children, ...props }: ProductListFilterFormProps) => {\n  const [params, setParams] = useSearchParams();\n  const [q, setQ] = React.useState<string>(params.get('q') || '');\n  const { categories, ...rest } = props;\n\n  return (\n    <form\n      {...rest}\n      action=\".\"\n      method=\"GET\"\n      onSubmit={(e) => {\n        e.preventDefault();\n\n        if (!q) params.delete('q');\n        else params.set('q', q);\n        params.delete('page');\n\n        setParams(params);\n      }}\n    >\n      {children || (\n        <>\n          <div className=\"mb-1 d-flex \">\n            <input\n              type=\"text\"\n              name=\"q\"\n              value={q}\n              onChange={(e) => {\n                const { value } = e.target;\n                setQ(value);\n                if (!value && params.get('q')) params.delete('q');\n              }}\n              className=\"miq-form-input flex-1\"\n              placeholder=\"Cherchez un produit par nom, categorie ou numero de serie ...\"\n            />\n            <Form.Submit value={'Search'} className=\"btn-primary-3 ms-1\" />\n          </div>\n\n          {categories && <ProductListFilterForm.Category {...{ params, setParams, categories }} />}\n\n          <ProductListFilterForm.Published {...{ params, setParams }} />\n          <ProductListFilterForm.Sale {...{ params, setParams }} />\n          <ProductListFilterForm.PreSale {...{ params, setParams }} />\n        </>\n      )}\n    </form>\n  );\n};\n\ntype TParamsProps = {\n  params: URLSearchParams;\n  setParams: (\n    nextInit: URLSearchParamsInit,\n    navigateOptions?:\n      | {\n          replace?: boolean | undefined;\n          state?: any;\n        }\n      | undefined\n  ) => void;\n};\n\ntype QuerySelectFieldProps = TParamsProps & {\n  emptyLabel?: string;\n  name: string;\n  children?: React.ReactNode;\n};\n\nProductListFilterForm.Category = (props: Omit<QuerySelectFieldProps, 'name'> & { categories: CategoryChoicesType }) => {\n  const { categories, ...rest } = props;\n\n  return (\n    <QuerySelectField emptyLabel=\"Categorie ...\" {...rest} name=\"cat\">\n      {categories.items.map((cat) => {\n        return (\n          <option value={cat.value} key={cat.slug}>\n            {cat.label}\n          </option>\n        );\n      })}\n    </QuerySelectField>\n  );\n};\n\nProductListFilterForm.Published = (props: Omit<QuerySelectFieldProps, 'name'>) => {\n  return (\n    <QuerySelectField emptyLabel=\"Tous les produits ...\" {...props} name=\"published\">\n      <option value=\"include\">Produits publiés</option>\n      <option value=\"exclude\">Produits non publiés</option>\n    </QuerySelectField>\n  );\n};\n\nconst QuerySelectField = ({ children, ...props }: QuerySelectFieldProps) => {\n  const { name, params, setParams, emptyLabel } = props;\n  return (\n    <select\n      className=\"miq-select\"\n      name={name}\n      value={params.get(name) || ''}\n      onChange={(e) => {\n        const { value } = e.target;\n\n        if (!value) params.delete(name);\n        else params.set(name, value);\n        params.delete('page');\n\n        setParams(params);\n      }}\n    >\n      {emptyLabel && <option value=\"\">{emptyLabel}</option>}\n      {children}\n    </select>\n  );\n};\n\nProductListFilterForm.PreSale = (props: Omit<QueryToggleFieldProps, 'name' | 'label'>) => {\n  return <QueryToggleField {...props} name=\"presale\" label=\"En pré-vente\" />;\n};\n\nProductListFilterForm.Sale = (props: Omit<QueryToggleFieldProps, 'name' | 'label'>) => {\n  return <QueryToggleField {...props} name=\"sale\" label=\"En promo\" />;\n};\n\ntype QueryToggleFieldProps = Omit<QuerySelectFieldProps, 'emptyLabel'> & { label: string; inputId?: string };\n\nconst QueryToggleField = (props: QueryToggleFieldProps) => {\n  const { label, name, params, setParams, inputId } = props;\n\n  return (\n    <div className={getCN(['miq-query-filter-toggle d-flex align-items-center'])}>\n      <input\n        type=\"checkbox\"\n        className=\"miq-checkbox me-1\"\n        id={inputId}\n        onChange={(e) => {\n          const { checked } = e.target;\n          if (!checked) params.delete(name);\n          else params.set(name, `${checked}`);\n          params.delete('page');\n          setParams(params);\n        }}\n        checked={Boolean(params.get(name)) || false}\n      />\n      <label htmlFor={inputId}>{label}</label>\n    </div>\n  );\n};\n","import * as React from 'react';\n\nimport { Button, ConfirmButton, Icons } from '@miq/componentjs';\nimport { IFormUpdateProps } from '@miq/formjs';\nimport { getCN } from '@miq/utiljs';\nimport { TSupplierOrderInstance } from './models';\n\ntype TSupplierOrderDeleteButtonProps = Omit<IFormUpdateProps<TSupplierOrderInstance>, 'context'> & {\n  label?: string;\n};\n\nexport const SupplierOrderDeleteButton: React.FC<TSupplierOrderDeleteButtonProps> = (props) => {\n  const { instance, onSuccess, onError, label } = props;\n\n  const handleDelete = (setOpen: any) => {\n    instance\n      .destroy()\n      .then((res) => {\n        setOpen?.(false);\n        onSuccess?.(res);\n        // emitter.destroy({ slug: instance.slug });\n      })\n      .catch((err) => onError?.(err));\n  };\n\n  return (\n    <ConfirmButton\n      renderHeader={() => <div>Supprimer '{instance.name}'</div>}\n      renderFooter={({ setOpen }) => (\n        <div className=\"d-flex justify-content-between align-items-center\">\n          <Button onClick={() => setOpen(false)}>Annuler</Button>\n\n          <Button onClick={() => handleDelete(setOpen)} className=\"btn-danger\">\n            Supprimer\n          </Button>\n        </div>\n      )}\n      render={() => <div className=\"p-3\">Are you sure you want to delete this</div>}\n      className={getCN(['s-order-delete-button btn-danger-3', props.className])}\n    >\n      <Icons.Trash />\n      {label && <span className=\"label\">{label}</span>}\n    </ConfirmButton>\n  );\n};\n","import * as React from 'react';\n\nimport { useRequest } from '@miq/hookjs';\nimport Staff from '@miq/staffjs';\nimport { getCN, Response } from '@miq/utiljs';\nimport { useNavigate, useSearchParams } from 'react-router-dom';\nimport { SupplierOrder } from './models';\nimport { Pagination, Table } from '@miq/componentjs';\nimport { SupplierOrderType } from '../types';\nimport { SupplierOrderDeleteButton } from './components';\n\nexport default function SupplierOrderIndexView() {\n  const navigate = useNavigate();\n  const [params] = useSearchParams();\n  const page = params.get('page');\n\n  const { res, removeItem } = useRequest(() => SupplierOrder().list({ params: { page } }), { refreshDeps: [page] });\n\n  const r = new Response(res);\n  if (!r.isSuccess) return null;\n\n  return (\n    <Staff.View\n      title=\"Orders\"\n      back=\"/staff/store/\"\n      actions={\n        <Staff.Button\n          onClick={() => {\n            SupplierOrder()\n              .create({})\n              .then(({ data }: any) => {\n                return navigate(`${data.slug}/`);\n              })\n              .catch((err: any) => {\n                // console.log(err);\n              });\n          }}\n          className=\"btn-primary-3\"\n          requiredPerms={['store.add_supplierorder']}\n          title={'Add a new order'}\n        >\n          Add order\n        </Staff.Button>\n      }\n      requiredPerms={['store.view_supplierorder']}\n    >\n      <Staff.Section footer={<Pagination {...r.data} component={Staff.Link} to />}>\n        <Table\n          border\n          items={r.items}\n          header={\n            <>\n              <Table.Th />\n              <Table.Th>Items</Table.Th>\n\n              <Table.Th>Total Cost</Table.Th>\n              <Table.Th>Est. Revenue</Table.Th>\n              <Table.Th />\n            </>\n          }\n          renderItem={(item: SupplierOrderType) => {\n            const { name = 'New order', slug, is_paid, items, items_revenue } = item;\n\n            return (\n              <Table.Tr key={slug}>\n                <Table.Td>\n                  <Staff.Link to={`${slug}/`} className=\"\">\n                    <div className={getCN(['fw-bold text-ellipsis', is_paid && 'text-line-through'])}>{name}</div>\n                  </Staff.Link>\n                  <span className=\"text-sm\">{item.avg_cost}</span>\n                </Table.Td>\n\n                <Table.Td>{items?.length}</Table.Td>\n                <Table.Td>\n                  <Price {...item.total_cost_data} />\n                </Table.Td>\n                <Table.Td>\n                  <Price {...items_revenue} />\n                </Table.Td>\n\n                <Table.Td>\n                  <SupplierOrderDeleteButton instance={SupplierOrder(item)} onSuccess={() => removeItem?.({ slug })} />\n                </Table.Td>\n              </Table.Tr>\n            );\n          }}\n          className=\"w-100\"\n        />\n      </Staff.Section>\n    </Staff.View>\n  );\n}\n\nconst Price = (props: any) => {\n  const { amountWithSymbol } = props;\n  return <div className=\"miq-price\">{amountWithSymbol}</div>;\n};\n\nexport * from './models';\n\n// <div className=\"miq-container\">\n","import { StaffModel, StaffService } from '@miq/staffjs';\nimport { SupplierOrderType } from '../types';\n\nconst timeout = 10000;\n\nclass SupplierOrderService extends StaffService<SupplierOrderType> {\n  postFnova(url: string) {\n    return this.post(`${this._path}fnova/`, { url }, { timeout });\n  }\n  postPlt(url: string) {\n    return this.post(`${this._path}plt/`, { url }, { timeout });\n  }\n\n  postShein(url: string) {\n    return this.post(`${this._path}shein/`, { url }, { timeout });\n  }\n\n  destroyItem(prodSlug: string) {\n    return this.delete(`${this._path}item/${prodSlug}/`, { timeout });\n  }\n\n  updateItem(prodSlug: string, values: Record<string, any>) {\n    return this.post(`${this._path}item/${prodSlug}/`, { ...values }, { timeout });\n  }\n}\n\nexport const SupplierOrder = (data: SupplierOrderType = {}) =>\n  StaffModel<SupplierOrderType, SupplierOrderService>(data, 'supplierorders', SupplierOrderService);\n\nexport type TSupplierOrderInstance = ReturnType<typeof SupplierOrder>;\n\nexport type SupplierType = {\n  slug?: string;\n  name_choices: any;\n  created: any;\n  updated: any;\n};\n"],"names":["ProductQuickUpdateForm","props","instance","categories","orderSlug","rest","form","useForm","name","category","description","retail_price","is_pre_sale","is_pre_sale_text","errors","fields","ProductUpdateForm","context","ProductForm","NameField","error","DescriptionField","className","CategoryField","RetailPriceField","PresaleCheckboxField","label","values","PresaleTextField","placeholder","slug","onClick","SupplierOrder","destroyItem","value","children","isR","onSuccess","onError","onSubmit","e","preventDefault","onWillSubmit","fd","forEach","field","update","then","data","emitter","catch","err","handleError","ProductCreateForm","StaffProduct","create","res","required","text","nullValue","items","map","cat","key","SalePriceField","min","step","type","OnSaleCheckboxField","checkbox","OosCheckboxField","StageSelectField","stages","stage","ProductListFilterForm","useSearchParams","params","setParams","React","get","q","setQ","action","method","set","delete","onChange","target","Category","Published","Sale","PreSale","QuerySelectField","emptyLabel","QueryToggleField","inputId","getCN","id","checked","Boolean","htmlFor","SupplierOrderDeleteButton","renderHeader","renderFooter","setOpen","destroy","handleDelete","render","SupplierOrderIndexView","navigate","useNavigate","page","useRequest","list","refreshDeps","removeItem","r","Response","isSuccess","title","back","actions","requiredPerms","footer","component","Staff","to","border","header","renderItem","item","is_paid","items_revenue","avg_cost","length","Price","total_cost_data","amountWithSymbol","timeout","SupplierOrderService","url","this","post","_path","prodSlug","StaffService","StaffModel"],"sourceRoot":""}
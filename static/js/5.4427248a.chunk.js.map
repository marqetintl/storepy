{"version":3,"sources":["shop/product/utils.jsx","shop/public/components.jsx","shop/product/components.jsx","shop/orders/components.jsx","shop/product/forms.jsx","shop/orders/forms.jsx","shop/orders/UpdateView.jsx"],"names":["productServices","prodSlug","this","patchPath","path","unpublish","values","postPath","attrSlug","oldValues","deletePath","imgSlug","slug","StaffService","ProductPriceDisplay","product","retail_price","sale_price","is_on_sale","className","amountWithSymbol","ProductAttributeList","attributes","map","attr","name","value","CategoryLinks","props","ctx","useContext","SharedDataCtx","isLoaded","categories","cat","href","url","title","showCover","cover","src_mobile","thumb_sq","name_truncated","SearchForm","search","location","push","useRef","debounce","history","query","URLSearchParams","action","required","initialValue","get","onChange","e","target","length","delete","set","current","URL","window","pathname","placeholder","minLength","maxLength","BreadCrumbs","breadcrumbs","role","item","label","ProductImageUploadButton","multiple","onCreate","imgsArray","filter","img","patch","images","then","data","onCreateSuccess","catch","err","onCreateError","ProductImageAltTextInput","image","alt_text","form","useForm","setValues","useEffect","onSuccess","onError","SupplierData","supplier_name","supplier_item_id","supplier_item_category","supplier_item_cost","supplier_item_cost_currency","supplier_item_url","rel","ProductQuickUpdateForm","setProduct","toast","productSlug","ProductForm","context","onSubmit","preventDefault","fD","is_pre_sale","category","is_pre_sale_text","success","message","SHOP_MSGS","update_success","error","update_error","handleError","Section","actions","is_published","page","pill","ProductNameInput","errors","ProductCategoryInput","ProductRetailPriceInput","ProductPresaleCheckboxInput","ProductPresaleTextInput","ProductOnSaleCheckboxInput","ProductSalePriceInput","Submit","cover_data","imgData","cover_create_success","cover_update_error","onUpdate","cover_update_success","onDelete","cover_delete_success","showLabel","input","rest","Label","TextInput","SelectInput","nullValue","items","Option","key","id","type","min","step","CheckboxInput","TextAreaX","children","fields","forEach","field","console","log","NameInput","CategoryInput","RetailPriceInput","PresaleCheckboxInput","PresaleTextInput","OnSaleCheckboxInput","SalePriceInput","StageSelect","stages","stage","SupplierProductAddForm","order_slug","useState","isLoading","setLoading","includes","supOrderServices","getSheinProductData","setValue","setErrors","disabled","formDefault","order_id","items_stage","currency","is_paid","total_cost","SupplierOrderStaffUpdateView","sOrderSlug","match","params","order","setOrder","products","setProducts","ToastCtx","detail","response","status","list","supplier_order_slug","handleSubmit","Array","isArray","val","back","SHOP_PATHS","orderList","create_success","count","results","addOrUpdateArrayObject","orderSlug","style","position","top","text","OrderItemListSection","selected","setSelected","isSelected","checked","i","next","previous","onPreviousClick","default","onNextClick","OrderItem","isEdit","setEdit","short","retail_price_data","sale_price_data","category_data","add_to_cart_count","productUpdate","onClick","OrderProductUpdateForm"],"mappings":"gMAsCaA,EAAkB,I,6JAnC7B,SAAQC,GACN,OAAOC,KAAKC,UAAL,UAAkBD,KAAKE,MAAvB,OAA8BH,EAA9B,aAAmD,M,uBAG5D,SAAUA,GACR,OAAOC,KAAKC,UAAL,UAAkBD,KAAKE,MAAvB,OAA8BH,EAA9B,aAAmD,CAAEI,WAAW,M,2BAKzE,SAAcJ,EAAUK,GACtB,OAAOJ,KAAKK,SAAL,UAAiBL,KAAKE,MAAtB,OAA6BH,EAA7B,mBAAwDK,K,4BAGjE,SAAeL,EAAUO,EAAUF,EAAQG,GACzC,OAAOP,KAAKC,UAAL,UAAkBD,KAAKE,MAAvB,OAA8BH,EAA9B,sBAAoDO,EAApD,KAAiEF,EAAQG,K,6BAGlF,SAAgBR,EAAUO,GACxB,OAAON,KAAKQ,WAAL,UAAmBR,KAAKE,MAAxB,OAA+BH,EAA/B,sBAAqDO,EAArD,Q,uBAKT,SAAUP,EAAUK,EAAQG,GAC1B,OAAOP,KAAKC,UAAL,UAAkBD,KAAKE,MAAvB,OAA8BH,EAA9B,UAAgDK,EAAQG,K,uBAKjE,SAAUR,EAAUU,GAClB,OAAOT,KAAKC,UAAL,UAAkBD,KAAKE,MAAvB,OAA8BH,EAA9B,gBAAsD,CAAEW,KAAMD,Q,QAhCvCE,GAoCH,CAAwB,c,6RCzB1CC,EAAsB,SAAC,GAAiB,IAAfC,EAAc,EAAdA,QACpC,IAAKA,IAAYA,EAAQC,aAAc,OAAO,KAE9C,IAAQA,EAA6BD,EAA7BC,aAAcC,EAAeF,EAAfE,WAEtB,OAAIF,EAAQG,YAA4B,MAAdD,EAEtB,sBAAKE,UAAU,kDAAf,UACE,qBAAKA,UAAU,2BAAf,SAA2CF,EAAWG,mBACtD,qBAAKD,UAAU,oBAAf,SAAoCH,EAAaI,sBAKrD,qBAAKD,UAAU,kDAAf,SACE,qBAAKA,UAAU,UAAf,SAA0BH,EAAaI,sBAKhCC,EAAuB,SAAC,GAAiB,IACpD,GADmD,EAAdN,SACE,IAA/BO,kBAAR,MAAqB,GAArB,EAEA,OAAKA,EAGH,oBAAIH,UAAU,oBAAd,gBACGG,QADH,IACGA,OADH,EACGA,EAAYC,KAAI,SAACC,GAChB,OACE,qBAAIL,UAAU,OAAd,UACE,uBAAMA,UAAU,aAAhB,UAA8BK,EAAKC,KAAnC,SACA,sBAAMN,UAAU,aAAhB,SAA8BK,EAAKE,UAFXF,EAAKC,WANf,MAoBbE,EAAgB,SAACC,GAAW,IAAD,EAChCC,EAAMC,qBAAWC,KAEvB,OAAKF,EAAIG,UAAaH,EAAII,WAKxB,qBAAKd,UAAU,sBAAf,mBACGU,EAAII,kBADP,aACG,EAAgBV,KAAI,SAACW,GAAS,IAAD,IAC5B,OACE,qBAAKf,UAAU,oBAAf,SACE,oBAAGgB,KAAMD,EAAIE,IAAKjB,UAAU,GAAGkB,MAAOH,EAAIT,KAA1C,UACGG,EAAMU,YAAN,OAAmBJ,QAAnB,IAAmBA,OAAnB,EAAmBA,EAAKK,QACvB,cAAC,IAAD,2BAAaL,EAAIK,OAAjB,IAAwBC,YAAe,OAAHN,QAAG,IAAHA,GAAA,UAAAA,EAAKK,aAAL,eAAYE,YAAZ,OAAwBP,QAAxB,IAAwBA,GAAxB,UAAwBA,EAAKK,aAA7B,aAAwB,EAAYC,eAE1E,qBAAKrB,UAAU,OAAf,SAAuBe,EAAIQ,qBALSR,EAAItB,WARP,MAsBxC,SAAS+B,EAAWf,GACzB,IAAQgB,EAAWhB,EAAMiB,SAAjBD,OAEFE,EAAOC,iBAAOC,KAAS,SAACZ,GAAD,oBAASR,QAAT,IAASA,GAAT,UAASA,EAAOqB,eAAhB,aAAS,EAAgBH,KAAKV,KAAM,MAE3Dc,EAAQ,IAAIC,gBAAgBP,GAgBlC,OACE,sBAAMQ,OAAO,SAASjC,UAAU,sBAAhC,SACE,cAAC,IAAD,CACEkC,UAAQ,EACRC,aAAcJ,EAAMK,IAAI,KACxBC,SApBe,SAAC,GAAW,IAATC,EAAQ,EAARA,EACd/B,EAAU+B,EAAEC,OAAZhC,MAQR,IANKA,GAASA,EAAMiC,OAAS,EAC3BT,EAAMU,OAAO,KAEbV,EAAMW,IAAI,IAAKJ,EAAEC,OAAOhC,OAGrBoB,EAAKgB,QAAV,CAEA,IAAM1D,EAAO,IAAI2D,IAAIC,OAAOnB,SAASV,MACrCW,EAAKgB,QAAL,UAAgB1D,EAAK6D,SAArB,YAAiCf,MAS7B/B,UAAU,eACV+C,YAAa,0BACbC,UAAW,EACXC,UAAW,OAMZ,IAAMC,EAAc,SAACzC,GAC1B,MAAkCE,qBAAWC,KAArCC,EAAR,EAAQA,SAAUsC,EAAlB,EAAkBA,YAElB,OAAKtC,GAAasC,EAKhB,yBAASnD,UAAU,kBAAkBoD,KAAM,aAAc,aAAW,cAApE,SACGD,EAAY/C,KAAI,SAACiD,GAChB,OACE,mBAAGrC,KAAMqC,EAAKpE,KAAMe,UAAU,OAAwBkB,MAAOmC,EAAKnC,MAAO,aAAYmC,EAAKnC,MAA1F,SACGmC,EAAKC,OADkCD,EAAKC,YAP9C,O,8LC7GEC,EAA2B,SAAC,GAA2B,IAAzB3D,EAAwB,EAAxBA,QAAYa,EAAY,iBACjE,OAAKb,GAAYA,EAAQH,KAGvB,cAAC,IAAD,CACE+D,UAAU,EACVxD,UAAU,gBACVyD,SAAU,SAACC,GAET,OADAA,EAAYA,EAAUC,QAAO,SAACC,GAAD,OAASA,GAAOA,EAAInE,QAC1CZ,IACJgF,MAAMjE,EAAQH,KAAM,CAAEqE,OAAO,GAAD,mBAAMlE,EAAQkE,QAAd,YAAyBJ,EAAUtD,KAAI,SAACwD,GAAD,OAASA,EAAInE,YAChFsE,MAAK,SAACC,GACDvD,EAAMwD,iBAAiBxD,EAAMwD,gBAAgBD,MAElDE,OAAM,SAACC,GACF1D,EAAM2D,eAAe3D,EAAM2D,cAAcD,SAdjB,MAqB3BE,EAA2B,SAAC,GAAyB,IAAvBC,EAAsB,EAAtBA,MAAU7D,EAAY,iBACzD8D,GAAgB,OAALD,QAAK,IAALA,OAAA,EAAAA,EAAOC,WAAY,GAE9BC,EAAOC,YAAQ,CAAEF,aAEjB/E,EAAO,OAAG8E,QAAH,IAAGA,OAAH,EAAGA,EAAO7E,KACjBiF,EAAYF,EAAKE,UAMvB,OAJAC,qBAAU,WACRD,EAAU,CAAEH,eACX,CAAC/E,EAASkF,EAAWH,IAEnBD,GAAUA,EAAM7E,KAGnB,cAAC,IAAD,CAAcc,MAAOiE,EAAMxE,UAAWS,EAAMT,UAA5C,SACE,cAAC,IAAD,CACEkC,UAAQ,EACRoC,MAAOA,EACPM,UAAWnE,EAAMmE,UACjBC,QAASpE,EAAMoE,QACf9B,YAAY,kCATgB,O,mGC9CvB+B,EAAe,SAAC,GAA2B,IAAzBlF,EAAwB,EAAxBA,QAAwB,iBACrD,OAAKA,EAGH,qBAAKI,UAAU,wBAAf,SACE,+BACE,+BACE,sBAAMA,UAAU,GAAhB,sBACA,sBAAMA,UAAU,GAAhB,SAAoBJ,EAAQmF,mBAE9B,+BACE,sBAAM/E,UAAU,GAAhB,qBACA,sBAAMA,UAAU,GAAhB,SAAoBJ,EAAQoF,sBAE9B,+BACE,sBAAMhF,UAAU,GAAhB,sBACA,sBAAMA,UAAU,GAAhB,SAAoBJ,EAAQqF,4BAG9B,+BACE,sBAAMjF,UAAU,GAAhB,uBACA,uBAAMA,UAAU,GAAhB,UACGJ,EAAQsF,mBADX,KACiCtF,EAAQuF,4BADzC,UAIF,6BACE,mBAAGnE,KAAMpB,EAAQwF,kBAAmBpF,UAAU,iBAAiBuC,OAAO,SAAS8C,IAAI,sBAAnF,uCAzBa,O,yeCMhB,SAASC,EAAT,GAA8D,IAAD,cAA3Bd,EAA2B,EAA3BA,KAAM5E,EAAqB,EAArBA,QAAYa,EAAS,iBAC1D8E,EAAkC9E,EAAlC8E,WAAYC,EAAsB/E,EAAtB+E,MAAO1E,EAAeL,EAAfK,WACrB2E,EAAW,OAAG7F,QAAH,IAAGA,OAAH,EAAGA,EAASH,KAE7BkF,qBAAU,cAAU,CAACc,IA4BrB,OACE,cAACC,EAAD,CAAaC,QAASnB,EAAMoB,SA3BT,SAACtD,GACpBA,EAAEuD,iBACF,IAAMC,EAAK,CACTxF,KAAMkE,EAAKrF,OAAOmB,KAClBT,aAAc2E,EAAKrF,OAAOU,aAC1BE,WAAYyE,EAAKrF,OAAOY,WACxBgG,YAAavB,EAAKrF,OAAO4G,aAQ3B,OALIvB,EAAKrF,OAAO6G,WAAUF,EAAGE,SAAWxB,EAAKrF,OAAO6G,UAChDxB,EAAKrF,OAAOY,aAAY+F,EAAGhG,WAAa0E,EAAKrF,OAAOW,YAEpD0E,EAAKrF,OAAO4G,cAAaD,EAAGG,iBAAmBzB,EAAKrF,OAAO8G,kBAExDpH,IACJgF,MAAMjE,EAAQH,KAAMqG,GACpB/B,MAAK,SAACC,GACK,OAAVuB,QAAU,IAAVA,KAAU,2BAAQ3F,GAAYoE,IACzB,OAALwB,QAAK,IAALA,KAAOU,QAAQ,CAAEC,QAASC,IAAUxG,QAAQyG,oBAE7CnC,OAAM,SAACC,GAEN,OADK,OAALqB,QAAK,IAALA,KAAOc,MAAM,CAAEH,QAASC,IAAUxG,QAAQ2G,eACnC/B,EAAKgC,YAAYrC,OAKwBnE,UAAU,4BAA9D,SACE,sBAAKA,UAAU,yBAAf,UACE,qBAAKA,UAAU,YAAf,SACE,eAAC,IAAUyG,QAAX,CACEvF,MAAM,UACNwF,QAAS,cAAC,IAAD,CAAqBC,aAAY,OAAE/G,QAAF,IAAEA,GAAF,UAAEA,EAASgH,YAAX,aAAE,EAAeD,aAAcE,MAAI,IAF/E,UAIE,qBAAK7G,UAAU,OAAf,SACE,cAAC8G,EAAD,CAAkBR,MAAO9B,EAAKuC,OAAOzG,SAGtCQ,GACC,qBAAKd,UAAU,OAAf,SACE,cAACgH,EAAD,CAAsBlG,WAAYA,EAAYwF,MAAK,OAAE9B,QAAF,IAAEA,GAAF,UAAEA,EAAMuC,cAAR,aAAE,EAAcf,aAIvE,sBAAKhG,UAAU,OAAf,UACE,qBAAKA,UAAU,OAAf,SACE,cAACiH,EAAD,CAAyBX,MAAK,OAAE9B,QAAF,IAAEA,GAAF,UAAEA,EAAMuC,cAAR,aAAE,EAAclH,iBAIhD,sBAAKG,UAAU,OAAf,UACE,qBAAKA,UAAU,iCAAf,SACE,cAACkH,EAAD,CAA6BZ,MAAK,OAAE9B,QAAF,IAAEA,GAAF,UAAEA,EAAMuC,cAAR,aAAE,EAAchB,gBAGnDvB,EAAKrF,OAAO4G,aACX,qBAAK/F,UAAU,OAAf,SACE,cAACmH,EAAD,CAAyBb,MAAK,OAAE9B,QAAF,IAAEA,GAAF,UAAEA,EAAMuC,cAAR,aAAE,EAAcd,wBAMpD,qBAAKjG,UAAU,iCAAf,SACE,cAACoH,EAAD,CAA4Bd,MAAK,OAAE9B,QAAF,IAAEA,GAAF,UAAEA,EAAMuC,cAAR,aAAE,EAAchH,eAGlDyE,EAAKrF,OAAOY,YACX,qBAAKC,UAAU,OAAf,SACE,cAACqH,EAAD,CAAuBf,MAAK,OAAE9B,QAAF,IAAEA,GAAF,UAAEA,EAAMuC,cAAR,aAAE,EAAcjH,kBAKlD,qBAAKE,UAAU,OAAf,SACE,cAAC,IAAKsH,OAAN,CAAa/G,MAAM,iBAAiBP,UAAU,6BAKpD,sBAAKA,UAAU,GAAf,UACE,cAAC,IAAD,CACEP,KAAI,OAAEG,QAAF,IAAEA,OAAF,EAAEA,EAASwB,MACf4C,KAAMpE,EAAQ2H,WACd9D,SAAU,SAAC+D,GACT3I,IACGgF,MAAMjE,EAAQH,KAAM,CAAE2B,MAAOoG,EAAQ/H,OACrCsE,MAAK,SAACC,GACK,OAAVuB,QAAU,IAAVA,KAAU,2BAAQ3F,GAAYoE,IACzB,OAALwB,QAAK,IAALA,KAAOU,QAAQ,CAAEC,QAASC,IAAUxG,QAAQ6H,0BAE7CvD,OAAM,SAACC,GACD,OAALqB,QAAK,IAALA,KAAOc,MAAM,CAAEH,QAASC,IAAUxG,QAAQ8H,yBAGhDC,SAAU,SAACJ,GAET,OADK,OAAL/B,QAAK,IAALA,KAAOU,QAAQ,CAAEC,QAASC,IAAUxG,QAAQgI,uBAC5C,OAAOrC,QAAP,IAAOA,OAAP,EAAOA,EAAU,2BAAQ3F,GAAR,IAAiB2H,iBAEpCM,SAAU,WAER,OADK,OAALrC,QAAK,IAALA,KAAOU,QAAQ,CAAEC,QAASC,IAAUxG,QAAQkI,uBAC5C,OAAOvC,QAAP,IAAOA,OAAP,EAAOA,EAAU,2BAAQ3F,GAAR,IAAiB2H,WAAY,KAAMnG,MAAO,SAE7DpB,UAAU,SAEZ,cAAC,IAAD,CAA0BsE,MAAK,OAAE1E,QAAF,IAAEA,OAAF,EAAEA,EAAS2H,qBAS7C,IAAMT,EAAmB,SAACrG,GAC/B,MAAuDA,EAA/CsH,iBAAR,WAAuDtH,EAA7B6C,aAA1B,MAAkC,OAAlC,EAA6C0E,EAA7C,YAAuDvH,EAAvD,GACA,EAA6DuH,EAArDjF,mBAAR,MAAsB,0BAAtB,EAAoDkF,EAApD,YAA6DD,EAA7D,GACA,OACE,qCACGD,GAAa,cAAC,IAAKG,MAAN,CAAY3H,MAAO+C,EAAOtD,UAAU,SAClD,cAAC,IAAKmI,UAAN,2BAAoBF,GAApB,IAA0B/F,UAAQ,EAAC5B,KAAK,OAAOyC,YAAaA,EAAaE,UAAW,UAK7E+D,EAAuB,SAACvG,GAAW,IAAD,EAC7C,EAA2DA,EAAnDsH,iBAAR,WAA2DtH,EAAjC6C,aAA1B,MAAkC,WAAlC,EAAiD0E,EAAjD,YAA2DvH,EAA3D,GACQK,EAAwBkH,EAAxBlH,WAAemH,EAAvB,YAAgCD,EAAhC,GAEA,OACE,qCACGD,GAAa,cAAC,IAAKG,MAAN,CAAY3H,MAAO+C,IACjC,cAAC,IAAK8E,YAAN,2BAAsBH,GAAtB,IAA4B/F,UAAQ,EAAC5B,KAAK,WAAW+H,UAAW,CAAE/E,MAAO,mBAAzE,gBACGxC,QADH,IACGA,GADH,UACGA,EAAYwH,aADf,aACG,EAAmBlI,KAAI,SAACW,GACvB,OAAO,wBAAC,IAAKqH,YAAYG,OAAlB,2BAA6BxH,GAA7B,IAAkCyH,IAAKzH,EAAIR,mBAO/C0G,EAA0B,SAACxG,GACtC,MAA8DA,EAAtDsH,iBAAR,WAA8DtH,EAApC6C,aAA1B,MAAkC,eAAlC,EAAqD2E,EAArD,YAA8DxH,EAA9D,GAEA,OACE,qCACGsH,GAAa,cAAC,IAAKG,MAAN,CAAY3H,MAAO+C,EAAOmF,GAAG,uBAC3C,cAAC,IAAKN,UAAN,2BACMF,GADN,IAEE/F,UAAQ,EACRwG,KAAK,SACLpI,KAAK,eACL,mBAAiB,qBACjBqI,IAAI,IACJC,KAAK,cAMA1B,EAA8B,SAACzG,GACgBA,EAAlDsH,UAAR,MAA0DtH,EAAhC6C,aAA1B,MAAkC,WAAlC,EAAiD2E,EAAjD,YAA0DxH,EAA1D,GAEA,OACE,sBAAKT,UAAU,SAAf,UACE,cAAC,IAAK6I,cAAN,2BAAwBZ,GAAxB,IAA8B3H,KAAK,cAAcN,UAAU,UAC3D,cAAC,IAAKkI,MAAN,CAAY3H,MAAO+C,QAKZ6D,EAA0B,SAAC1G,GACtC,OACE,qCACE,cAAC,IAAKyH,MAAN,CAAY3H,MAAM,gBAAgBkI,GAAG,yBAAyBzI,UAAU,uBACxE,cAAC,IAAK8I,UAAN,CAAgBxI,KAAK,mBAAmB,mBAAiB,+BAKlD8G,EAA6B,SAAC3G,GACgBA,EAAjDsH,UAAR,MAAyDtH,EAA/B6C,aAA1B,MAAkC,UAAlC,EAAgD2E,EAAhD,YAAyDxH,EAAzD,GAEA,OACE,sBAAKT,UAAU,SAAf,UACE,cAAC,IAAK6I,cAAN,2BAAwBZ,GAAxB,IAA8B3H,KAAK,aAAaN,UAAU,UAC1D,cAAC,IAAKkI,MAAN,CAAY3H,MAAO+C,QAKZ+D,EAAwB,SAAC5G,GACpC,MAA4DA,EAApDsH,iBAAR,WAA4DtH,EAAlC6C,aAA1B,MAAkC,aAAlC,EAAmD2E,EAAnD,YAA4DxH,EAA5D,GACA,OACE,qCACGsH,GAAa,cAAC,IAAKG,MAAN,CAAY3H,MAAO+C,EAAOmF,GAAG,mBAAmBzI,UAAU,uBACxE,cAAC,IAAKmI,UAAN,2BACMF,GADN,IAEE/F,UAAQ,EACRwG,KAAK,SACLpI,KAAK,aACL,mBAAiB,mBACjBqI,IAAI,IACJC,KAAK,cAsBAlD,EAAc,SAAC,GAA4D,IAA1DqD,EAAyD,EAAzDA,SAAUpD,EAA+C,EAA/CA,QAA+C,IAAtCqD,cAAsC,MAA7B,GAA6B,EAAzBlK,EAAyB,EAAzBA,SAAa2B,EAAY,iBACtDwH,GAASxH,EAAhCmE,UAAgCnE,EAArBoE,QAAnB,YAAwCpE,EAAxC,IAoCA,OACE,cAAC,IAAD,2BAAUwH,GAAV,IAAgBtC,QAASA,EAASC,SAAUnF,EAAMmF,UAnC/B,SAACtD,GACpB,GAAKqD,GAAYqD,EAAjB,CAEA1G,EAAEuD,iBACF,IAAMC,EAAK,GAiBX,GAVAkD,EAAOC,SAAQ,SAACC,GACd,IAAM3I,EAAQoF,EAAQxG,OAAO+J,GAChB,MAAT3I,IACJuF,EAAGoD,GAAS3I,MAOTzB,EAEL,OAAOD,IACJgF,MAAM/E,EAAUgH,GAChB/B,MAAK,SAACC,GAAU,IAAD,EACT,OAALvD,QAAK,IAALA,GAAA,UAAAA,EAAOmE,iBAAP,cAAAnE,EAAmBuD,MAEpBE,OAAM,SAACC,GACN,OAAI1D,EAAMoE,QAAgBpE,EAAMoE,QAAQV,IACxCgF,QAAQC,IAAI,QACLzD,EAAQa,YAAYrC,SAI/B,SACG4E,MAKPrD,EAAY2D,UAAYvC,EACxBpB,EAAY4D,cAAgBtC,EAC5BtB,EAAY6D,iBAAmBtC,EAC/BvB,EAAY8D,qBAAuBtC,EACnCxB,EAAY+D,iBAAmBtC,EAC/BzB,EAAYgE,oBAAsBtC,EAClC1B,EAAYiE,eAAiBtC,EAC7B3B,EAAYkE,YAnEsB,SAACnJ,GAAW,IAAD,EAC3C,EAAwDA,EAAhDsH,iBAAR,WAAwDtH,EAA9B6C,aAA1B,MAAkC,QAAlC,EAA8C0E,EAA9C,YAAwDvH,EAAxD,GACQoJ,EAA0B7B,EAA1B6B,OAAQvJ,EAAkB0H,EAAlB1H,KAAS2H,EAAzB,YAAkCD,EAAlC,GAEA,OACE,qCACGD,GAAa,cAAC,IAAKG,MAAN,CAAY3H,MAAO+C,IACjC,cAAC,IAAK8E,YAAN,2BAAsBH,GAAtB,IAA4B/F,UAAQ,EAAC5B,KAAMA,GAAQ,QAAS+H,UAAW,CAAE/E,MAAO,gBAAhF,gBACGuG,QADH,IACGA,GADH,UACGA,EAAQzJ,WADX,aACG,OAAAyJ,GAAc,SAACC,GACd,OAAO,wBAAC,IAAK1B,YAAYG,OAAlB,2BAA6BuB,GAA7B,IAAoCtB,IAAKsB,EAAMvJ,oB,qLCjOnDwJ,EAAyB,SAAC,GAA8B,IAA5BC,EAA2B,EAA3BA,WAAevJ,EAAY,iBAClE,EAAgCwJ,oBAAS,GAAzC,mBAAOC,EAAP,KAAkBC,EAAlB,KAEM3F,EAAOC,YAAQ,CACnBM,cAAe,QACf9D,IAAK,KA+BP,OACE,cAAC,IAAUwF,QAAX,CAAmBvF,OAAY,OAALT,QAAK,IAALA,OAAA,EAAAA,EAAOS,QAAS,qBAAsBlB,UAAU,oCAA1E,SACE,eAAC,IAAD,CAAM2F,QAASnB,EAAMoB,SA9BJ,SAACtD,GACpBA,EAAEuD,iBAEFsE,GAAW,GAEX,IAAQlJ,EAAQuD,EAAKrF,OAAb8B,IAER,OAAQuD,EAAKrF,OAAO4F,eAClB,IAAK,OACH,OAAO,KAET,QACE,OAAK9D,EAAImJ,SAAS,SACXC,IACJC,oBAAoBN,EAAY,CAAE/I,QAClC8C,MAAK,SAACC,GAGL,OAFAmG,GAAW,GACX3F,EAAK+F,SAAS,MAAO,IACrB,OAAO9J,QAAP,IAAOA,OAAP,EAAOA,EAAOmE,UAAUZ,MAEzBE,OAAM,SAACC,GAGN,OAFAK,EAAKgG,UAAL,2BAAoBhG,EAAKuC,QAAzB,IAAiC9F,IAAK,2BACtCkJ,GAAW,GACX,OAAO1J,QAAP,IAAOA,OAAP,EAAOA,EAAOoE,QAAQb,SAXS,OAkBQhE,UAAU,4BAAvD,UACGkK,GAAa,qBAAKlK,UAAU,OAAf,mDAEd,sBAAKA,UAAU,iCAAf,UACE,cAAC,IAAKmI,UAAN,CACEjG,UAAQ,EACR5B,KAAK,MACLoI,KAAK,MACLpC,MAAO9B,EAAKuC,OAAO9F,IACnB8B,YAAY,6BACZ/C,UAAU,OACVyK,SAAUP,IAGZ,cAAC,IAAK5C,OAAN,CAAa/G,MAAM,WAAWP,UAAU,oBAAoByK,SAAUP,a,oHC1C1EQ,EAAc,CAClBC,SAAU,GACVC,YAAa,GACbC,SAAU,GACVC,SAAS,EACTC,WAAY,IAGC,SAASC,EAA6BvK,GACnD,IAAQwK,EAAexK,EAAMyK,MAAMC,OAA3BF,WAER,EAA0BhB,mBAAS,IAAnC,mBAAOmB,EAAP,KAAcC,EAAd,KACA,EAAgCpB,mBAAS,IAAzC,mBAAOqB,EAAP,KAAiBC,EAAjB,KAEM/F,EAAQ7E,qBAAW6K,KAEnBhH,EAAOC,YAAQiG,GACbhG,EAAcF,EAAdE,UAuCR,GArCAC,qBAAU,WACR,GAAKsG,EACL,OAAOZ,IACJoB,OAAOR,GACPlH,MAAK,SAACC,GACLqH,EAASrH,GAETU,EAAU,CACRiG,SAAU3G,EAAK2G,UAAY,GAC3BC,YAAa5G,EAAK4G,aAAe,GACjCC,SAAU7G,EAAK6G,UAAY,GAC3BC,QAAS9G,EAAK8G,UAAW,EACzBC,WAAY/G,EAAK+G,YAAc,QAGlC7G,OAAM,SAACC,IACFA,EAAIuH,UACFvH,EAAIuH,SAASC,YAKtB,CAACV,EAAYvG,IAEhBC,qBAAU,WACR,GAAKsG,EAEL,OAAOpM,IACJ+M,KAAK,CAAEC,oBAAqBZ,IAC5BlH,MAAK,SAACC,GACLuH,EAAYvH,MAEbE,OAAM,SAACC,SAGT,CAAC8G,KAECG,EAAO,OAAO,KAEnB,IAAMU,EAAe,SAACxJ,EAAG0G,GACvB1G,EAAEuD,iBAEF,IAAIC,EAAK,GACLiG,MAAMC,QAAQhD,GAChBA,EAAOC,SAAQ,SAACC,GACd,IAAM+C,EAAMzH,EAAKrF,OAAO+J,GACb,MAAP+C,IACJnG,EAAGoD,GAAS+C,MAETnG,EAAE,eAAQtB,EAAKrF,QAEtBkL,IACGxG,MAAMoH,EAAYnF,GAClB/B,MAAK,WACJyB,EAAMU,QAAQ,CAAEC,QAASC,IAAUgF,MAAM/E,oBAE1CnC,OAAM,SAACC,GACNqB,EAAMc,MAAM,CAAEH,QAASC,IAAUgF,MAAM7E,eACvC/B,EAAKgC,YAAYrC,OAIvB,OACE,cAAC,IAAD,CACE+H,KAAMC,IAAWC,YACjBlL,MAAM,wBACNwF,QAAS,wBACT1G,UAAU,6BAJZ,SAME,sBAAKA,UAAU,yBAAf,UACE,sBAAKA,UAAU,YAAf,UACE,cAAC,EAAD,CACEgK,WAAYiB,EACZrG,UAAW,SAAChF,GAEV,OADA4F,EAAMU,QAAQ,CAAEC,QAASC,IAAUxG,QAAQyM,iBACpCd,EAAY,2BACdD,GADa,IAEhBgB,MAAOhB,EAASgB,MAAQ,EACxBC,QAASC,YAAuBlB,EAASiB,QAAS3M,SAKxD,cAAC,EAAD,2BACMa,GADN,IAEE2K,MAAOA,EACPE,SAAUA,EACVC,YAAaA,EACbkB,UAAWrB,EAAM3L,WAIrB,qBAAKO,UAAU,GAAf,SACE,sBAAKA,UAAU,GAAG0M,MAAO,CAAEC,SAAU,SAAUC,IAAK,GAApD,UACE,cAAC,IAAD,CAAMjH,QAASnB,EAAMoB,SAAUkG,EAAc9L,UAAU,oBAAvD,SACE,eAAC,IAAUyG,QAAX,CAAmBvF,MAAM,gBAAzB,UACE,oBAAIlB,UAAU,OAAd,SACE,qBAAIA,UAAU,GAAd,sBAA2BsL,EAASgB,WAEtC,sBAAKtM,UAAU,OAAf,UACE,cAAC,IAAKkI,MAAN,CAAY3H,MAAM,WAAWP,UAAU,SACvC,cAAC,IAAKmI,UAAN,CACEjG,UAAQ,EACR5B,KAAK,WACLgG,MAAO9B,EAAKuC,OAAO4D,SACnB5H,YAAY,WACZE,UAAW,QAGf,sBAAKjD,UAAU,iCAAf,UACE,cAAC,IAAK6I,cAAN,CAAoBvI,KAAK,UAAUgG,MAAO9B,EAAKuC,OAAO+D,QAAS9K,UAAU,SACzE,cAAC,IAAKkI,MAAN,CAAY3H,MAAM,YAEnBiE,EAAKrF,OAAO2L,SACX,sBAAK9K,UAAU,OAAf,UACE,cAAC,IAAKkI,MAAN,CAAY3H,MAAM,aAAakI,GAAG,qBAClC,cAAC,IAAKN,UAAN,CACEjG,UAAQ,EACRwG,KAAK,SACLpI,KAAK,yBACLgG,MAAO9B,EAAKuC,OAAOgE,WACnB,mBAAiB,mBACjBpC,IAAI,IACJC,KAAK,YAIX,qBAAK5I,UAAU,GAAf,SACE,cAAC,IAAKsH,OAAN,CAAa/G,MAAM,OAAOP,UAAU,6BAK1C,cAAC,IAAD,CAAM2F,QAASnB,EAAMoB,SAAU,SAACtD,GAAD,OAAOwJ,EAAaxJ,EAAG,CAAC,iBAAiBtC,UAAU,oBAAlF,SACE,eAAC,IAAUyG,QAAX,CAAmBvF,MAAM,QAAQ2L,KAAK,4DAAtC,UACE,cAAC,IAAYjD,YAAb,CACEtJ,KAAK,cACLuJ,OAAM,OAAEuB,QAAF,IAAEA,OAAF,EAAEA,EAAOvB,OACfvD,MAAO9B,EAAKuC,OAAO6D,YACnB7C,WAAW,EACX/H,UAAU,SAGZ,qBAAKA,UAAU,GAAf,SACE,cAAC,IAAKsH,OAAN,CAAa/G,MAAM,OAAOP,UAAU,uCAWtD,IAAM8M,EAAuB,SAAC,GAAgD,IAAD,EAA7C1B,EAA6C,EAA7CA,MAAOE,EAAsC,EAAtCA,SAAUC,EAA4B,EAA5BA,YAAgB9K,EAAY,iBAC3E,EAAgCwJ,mBAAS,IAAzC,mBAAO8C,EAAP,KAAiBC,EAAjB,KAEQxH,EAAU/E,EAAV+E,MAER,OACE,eAAC,IAAUiB,QAAX,CAAmBzG,UAAU,mBAA7B,iBACGsL,QADH,IACGA,GADH,UACGA,EAAUiB,eADb,aACG,EAAmBnM,KAAI,SAACiD,GACvB,IAAM4J,EAAaF,EAAS3C,SAAS/G,EAAK5D,MAE1C,OACE,sBAAKO,UAAU,GAAf,UACE,qBAAKA,UAAU,GAAf,SACE,uBACE0I,KAAK,WACLwE,QAASD,EACT5K,SAAU,WACQ2K,EAAZC,EAAwBF,EAASpJ,QAAO,SAACwJ,GAAD,OAAOA,IAAM9J,EAAK5D,QAC7C,GAAD,mBAAKsN,GAAL,CAAe1J,EAAK5D,aAK1C,cAAC,EAAD,CACE4D,KAAMA,EACNmC,MAAOA,EACP1E,WAAYsK,EAAMtK,WAClB6G,SAAU,SAAC3D,GACTuH,EAAY,2BACPD,GADM,IAETiB,QAASjB,EAASiB,QAAQnM,KAAI,SAAC+M,GAC7B,OAAIA,EAAE1N,OAASuE,EAAKvE,KAAauE,EAC1BmJ,aArBM9J,EAAK5D,SA6BhC,cAAC,IAAD,CACE6M,MAAOhB,EAASgB,MAChBc,KAAM9B,EAAS8B,KACfC,SAAU/B,EAAS+B,SACnBC,gBAAiB,WACfzO,IACGuD,IAAIkJ,EAAS+B,UACbtJ,MAAK,SAACC,GACLuH,EAAYvH,MAEbE,OAAM,SAACC,GACD,OAALqB,QAAK,IAALA,KAAOc,MAAM,CAAEH,QAASC,IAAUmH,cAGxCC,YAAa,WACX3O,IACGuD,IAAIkJ,EAAS8B,MACbrJ,MAAK,SAACC,GACLuH,EAAYvH,MAEbE,OAAM,SAACC,GACD,OAALqB,QAAK,IAALA,KAAOc,MAAM,CAAEH,QAASC,IAAUmH,oBAQ1CE,EAAY,SAAC,GAAwB,IAAD,IAArBpK,EAAqB,EAArBA,KAAS5C,EAAY,iBACxC,EAA0BwJ,mBAASxJ,EAAMiN,SAAU,GAAnD,mBAAOA,EAAP,KAAeC,EAAf,KAEA,OAAI,OAACtK,QAAD,IAACA,OAAD,EAACA,EAAM5D,MAGT,sBAAKO,UAAU,oCAAf,UACE,sBAAKA,UAAU,aAAf,UACE,qBAAKA,UAAU,OAAf,SACE,cAAC,IAAD,2BAAeqD,EAAKkE,YAApB,IAAgCvH,UAAU,eAG5C,sBAAKA,UAAU,gBAAf,UACE,sBAAKA,UAAU,UAAUkB,MAAOmC,EAAK/C,KAArC,UACE,sBAAMN,UAAU,OAAhB,SAAwBqD,EAAK/C,QACxB,OAAJ+C,QAAI,IAAJA,GAAA,UAAAA,EAAMuD,YAAN,eAAYD,eAAgB,cAAC,IAAD,CAAqBA,aAAY,OAAEtD,QAAF,IAAEA,GAAF,UAAEA,EAAMuD,YAAR,aAAE,EAAYD,aAAcE,MAAI,EAAC+G,OAAK,OAGtG,qBAAK5N,UAAU,GAAf,SACE,cAAC,IAAD,CACEJ,QAAO,2BAAOyD,GAAP,IAAaxD,aAAcwD,EAAKwK,kBAAmB/N,WAAYuD,EAAKyK,sBAI/E,sBAAK9N,UAAU,eAAf,UACGqD,EAAK0K,eAAiB,uBAAM/N,UAAU,OAAhB,UAAwBqD,EAAK0K,cAAczN,KAA3C,QACtB+C,EAAK0C,aAAe,sBAAM/F,UAAU,OAAhB,wBACrB,uBAAMA,UAAU,OAAhB,kBAA6BqD,EAAK2K,wBAGpC,sBAAKhO,UAAU,4DAAf,UACE,mBAAGgB,KAAMmL,IAAW8B,cAAc5K,EAAK5D,MAAO8C,OAAO,SAASvC,UAAU,+BAAxE,oBAIA,8BACE,cAAC,IAAD,CAAQkO,QAAS,kBAAMP,GAASD,IAAS1N,UAAU,mCAAnD,qCAQP0N,GAAU,cAAC,EAAD,2BAA4BjN,GAA5B,IAAmCiN,OAAQA,EAAQ9N,QAASyD,QAzCnD,MA8CpB8K,EAAyB,SAAC,GAAmC,IAAjCT,EAAgC,EAAhCA,OAAQ9N,EAAwB,EAAxBA,QAAYa,EAAY,iBAC1D+D,EAAOC,YAAQ,CACnBnE,KAAMV,EAAQU,MAAQ,GACtB0F,SAAUpG,EAAQoG,UAAY,GAC9BnG,cAAqB,OAAPD,QAAO,IAAPA,OAAA,EAAAA,EAASC,eAAgB,EACvCqF,oBAA2B,OAAPtF,QAAO,IAAPA,OAAA,EAAAA,EAASsF,qBAAsB,EACnDa,YAAanG,EAAQmG,cAAe,EACpCE,iBAAkBrG,EAAQqG,kBAAoB,KAGhD,IAAKyH,EAAQ,OAAO,KAEpB,IAKQ3G,EAAWvC,EAAXuC,OACR,OACE,cAAC,IAAD,CACEpB,QAASnB,EACT1F,SAAUc,EAAQH,KAClBuJ,OAAQ,CAAC,OAAQ,WAAY,eAAgB,cAAe,mBAAoB,sBAChFhJ,UAAU,uBACV4E,UAZiB,SAACZ,GAAU,IAAD,IAE7B,OADK,OAALvD,QAAK,IAALA,GAAA,UAAAA,EAAO+E,aAAP,mBAAcU,eAAd,gBAAwB,CAAEC,QAASC,IAAUxG,QAAQyG,iBACrD,OAAO5F,QAAP,IAAOA,OAAP,EAAOA,EAAOkH,SAAS3D,IAWrBa,QAAS,SAACV,GACR,OAAOK,EAAKgC,YAAYrC,IAP5B,SAUE,sBAAKnE,UAAU,yBAAf,UACE,sBAAKA,UAAU,iBAAf,UACE,cAAC,IAAYqJ,UAAb,CAAuB/C,MAAOS,EAAOzG,KAAMN,UAAU,SACrD,cAAC,IAAYsJ,cAAb,CAA2BxI,WAAU,OAAEL,QAAF,IAAEA,OAAF,EAAEA,EAAOK,WAAYd,UAAU,SACpE,cAAC,IAAYuJ,iBAAb,CAA8BjD,MAAOS,EAAOlH,aAAcG,UAAU,SAEpE,cAAC,IAAKkI,MAAN,CAAY3H,MAAK,8BAAyBX,EAAQuF,4BAAjC,OACjB,cAAC,IAAKgD,UAAN,CAAgB7H,KAAK,qBAAqBN,UAAU,QAGtD,sBAAKA,UAAU,YAAf,UACE,sBAAKA,UAAU,OAAf,UACE,qBAAKA,UAAU,OAAf,SACE,cAAC,IAAYwJ,qBAAb,CAAkClD,MAAOS,EAAOhB,YAAa/F,UAAU,WAGxEwE,EAAKrF,OAAO4G,aACX,qBAAK/F,UAAU,OAAf,SACE,cAAC,IAAYyJ,iBAAb,CAA8BnD,MAAOS,EAAOd,qBAIhD,cAAC,IAAKqB,OAAN,CAAa/G,MAAM,SAASP,UAAU,+BAExC,cAAC,IAAD,CAAcJ,QAASA","file":"static/js/5.4427248a.chunk.js","sourcesContent":["import { StaffService } from '@miq/utils';\n\nclass StaffProductService extends StaffService {\n  publish(prodSlug) {\n    return this.patchPath(`${this.path}${prodSlug}/publish/`, {});\n  }\n\n  unpublish(prodSlug) {\n    return this.patchPath(`${this.path}${prodSlug}/publish/`, { unpublish: true });\n  }\n\n  // ATTR\n\n  postAttribute(prodSlug, values) {\n    return this.postPath(`${this.path}${prodSlug}/attribute/new/`, values);\n  }\n\n  patchAttribute(prodSlug, attrSlug, values, oldValues) {\n    return this.patchPath(`${this.path}${prodSlug}/attribute/${attrSlug}/`, values, oldValues);\n  }\n\n  deleteAttribute(prodSlug, attrSlug) {\n    return this.deletePath(`${this.path}${prodSlug}/attribute/${attrSlug}/`);\n  }\n\n  // PAGE\n\n  patchPage(prodSlug, values, oldValues) {\n    return this.patchPath(`${this.path}${prodSlug}/page/`, values, oldValues);\n  }\n\n  // COVER\n\n  swapCover(prodSlug, imgSlug) {\n    return this.patchPath(`${this.path}${prodSlug}/swap-cover/`, { slug: imgSlug });\n  }\n}\n\nexport const productServices = new StaffProductService('products/');\n","import ReactDOM from 'react-dom';\nimport { useContext, useEffect, useRef, useState } from 'react';\n\nimport { SharedDataCtx } from '@miq/contexts';\n// import Form, { useForm } from \"@miq/form\";\nimport { Img, Picture, SearchTextInput } from '@miq/components';\nimport { IS_DEV } from '@miq/utils';\nimport debounce from 'lodash.debounce';\n\n/**\n * PRODUCT\n */\n\nexport const ProductPriceDisplay = ({ product }) => {\n  if (!product || !product.retail_price) return null;\n\n  const { retail_price, sale_price } = product;\n\n  if (product.is_on_sale && sale_price != null) {\n    return (\n      <div className=\"product-price-display d-flex align-items-center\">\n        <div className=\"text-danger fw-bold me-2\">{sale_price.amountWithSymbol}</div>\n        <div className=\"text-line-through\">{retail_price.amountWithSymbol}</div>\n      </div>\n    );\n  }\n  return (\n    <div className=\"product-price-display d-flex align-items-center\">\n      <div className=\"fw-bold\">{retail_price.amountWithSymbol}</div>\n    </div>\n  );\n};\n\nexport const ProductAttributeList = ({ product }) => {\n  const { attributes = [] } = product || {};\n\n  if (!attributes) return null;\n\n  return (\n    <ul className=\"product-attr-list\">\n      {attributes?.map((attr) => {\n        return (\n          <li className=\"attr\" key={attr.name}>\n            <span className=\"attr-label\">{attr.name} : </span>\n            <span className=\"attr-value\">{attr.value}</span>\n          </li>\n        );\n      })}\n    </ul>\n  );\n};\n\n/**\n * CATEGORY\n */\n\nexport const CategoryLinks = (props) => {\n  const ctx = useContext(SharedDataCtx);\n\n  if (!ctx.isLoaded || !ctx.categories) return null;\n\n  // console.log(ctx.categories);\n\n  return (\n    <div className=\"category-links pb-2\">\n      {ctx.categories?.map((cat) => {\n        return (\n          <div className=\"item w-25 w-md-15\" key={cat.slug}>\n            <a href={cat.url} className=\"\" title={cat.name}>\n              {props.showCover && cat?.cover && (\n                <Picture {...cat.cover} src_mobile={cat?.cover?.thumb_sq || cat?.cover?.src_mobile} />\n              )}\n              <div className=\"info\">{cat.name_truncated}</div>\n            </a>\n          </div>\n        );\n      })}\n    </div>\n  );\n};\n\nexport function SearchForm(props) {\n  const { search } = props.location;\n\n  const push = useRef(debounce((url) => props?.history?.push(url), 300));\n\n  const query = new URLSearchParams(search);\n  const handleSearch = ({ e }) => {\n    const { value } = e.target;\n\n    if (!value || value.length < 3) {\n      query.delete('q');\n    } else {\n      query.set('q', e.target.value);\n    }\n\n    if (!push.current) return;\n\n    const path = new URL(window.location.href);\n    push.current(`${path.pathname}?${query}`);\n  };\n\n  return (\n    <form action=\"/shop/\" className=\"product-search-form\">\n      <SearchTextInput\n        required\n        initialValue={query.get('q')}\n        onChange={handleSearch}\n        className=\"search-input\"\n        placeholder={'Cherchez un produit ...'}\n        minLength={3}\n        maxLength={99}\n      />\n    </form>\n  );\n}\n\nexport const BreadCrumbs = (props) => {\n  const { isLoaded, breadcrumbs } = useContext(SharedDataCtx);\n\n  if (!isLoaded || !breadcrumbs) {\n    return null;\n  }\n\n  return (\n    <section className=\"miq-breadcrumbs\" role={'navigation'} aria-label=\"breadcrumbs\">\n      {breadcrumbs.map((item) => {\n        return (\n          <a href={item.path} className=\"item\" key={item.label} title={item.title} aria-label={item.title}>\n            {item.label}\n          </a>\n        );\n      })}\n    </section>\n  );\n};\n\n//\n// NOT USED\nexport const ProductDetailImages = ({ product, ...props }) => {\n  const { images = [], cover } = product;\n  const [active, setActive] = useState(cover);\n\n  const [root, setRoot] = useState(null);\n\n  useEffect(() => {\n    if (IS_DEV) return;\n\n    const el = document.getElementById('product-detail-images');\n    if (el) setRoot(el);\n  }, [setRoot]);\n\n  if (!product) return null;\n\n  const render = (\n    <div className=\"product-images d-flex flex-column-reverse flex-sm-row\">\n      <div className=\"thumbnails d-flex flex-row flex-sm-column me-1\">\n        <Img src={cover.thumb} className=\"mb-1\" onClick={() => setActive(cover)} />\n\n        {images.map((img) => (\n          <Img src={img.thumb} onClick={() => setActive(img)} className=\"mb-1\" key={img.src} />\n        ))}\n      </div>\n\n      <div className=\"\">\n        <Img src={active.src} />\n      </div>\n    </div>\n  );\n\n  return IS_DEV ? render : root ? ReactDOM.createPortal(render, root) : null;\n};\n","import React, { useEffect } from 'react';\nimport PropTypes from 'prop-types';\n\nimport Form, { useForm, FormProvider } from '@miq/form';\nimport { ImageAltTextInput } from '@miq/adminjs';\nimport { ImgUploadButton } from '@miq/components';\nimport { productServices } from './utils';\n\n//\n// ========================= FORM COMPONENTS ===================================================================\n//\n\nexport const ProductImageUploadButton = ({ product, ...props }) => {\n  if (!product || !product.slug) return null;\n\n  return (\n    <ImgUploadButton\n      multiple={true}\n      className=\"btn-primary-3\"\n      onCreate={(imgsArray) => {\n        imgsArray = imgsArray.filter((img) => img && img.slug);\n        return productServices\n          .patch(product.slug, { images: [...product.images, ...imgsArray.map((img) => img.slug)] })\n          .then((data) => {\n            if (props.onCreateSuccess) props.onCreateSuccess(data);\n          })\n          .catch((err) => {\n            if (props.onCreateError) props.onCreateError(err);\n          });\n      }}\n    />\n  );\n};\n\nexport const ProductImageAltTextInput = ({ image, ...props }) => {\n  const alt_text = image?.alt_text || '';\n\n  const form = useForm({ alt_text });\n\n  const imgSlug = image?.slug;\n  const setValues = form.setValues;\n\n  useEffect(() => {\n    setValues({ alt_text });\n  }, [imgSlug, setValues, alt_text]);\n\n  if (!image || !image.slug) return null;\n\n  return (\n    <FormProvider value={form} className={props.className}>\n      <ImageAltTextInput\n        required\n        image={image}\n        onSuccess={props.onSuccess}\n        onError={props.onError}\n        placeholder=\"Add an alternative text ...\"\n      />\n    </FormProvider>\n  );\n};\n\nProductImageAltTextInput.propTypes = {\n  image: PropTypes.shape({\n    slug: PropTypes.string.isRequired,\n  }),\n\n  onUpdate: PropTypes.func,\n  onError: PropTypes.func,\n};\n\nexport const ProductCoverUploadButton = ({ children, product, ...props }) => {\n  if (!product || !product.slug) return null;\n\n  const handleCoverCreate = ({ slug }) => {\n    productServices\n      .patch(product.slug, { cover: slug })\n      .then((data) => {\n        if (props.onCreateSuccess) props.onCreateSuccess(data);\n      })\n      .catch((err) => {\n        if (props.onCreateError) props.onCreateError(err);\n      });\n  };\n  const handleCoverUpdate = (imgData) => {\n    if (props.onUpdateSuccess) props.onUpdateSuccess(imgData);\n  };\n\n  return (\n    <ImgUploadButton\n      slug={product.cover_data ? product.cover_data.slug : null}\n      onCreate={handleCoverCreate}\n      onUpdate={handleCoverUpdate}\n      className=\"product-cover-upload-button\"\n    >\n      {children}\n    </ImgUploadButton>\n  );\n};\n\nProductCoverUploadButton.propTypes = {\n  children: PropTypes.any.isRequired,\n  product: PropTypes.shape({ slug: PropTypes.string.isRequired }).isRequired,\n  onCreateSuccess: PropTypes.func,\n  onCreateError: PropTypes.func,\n  onUpdateSuccess: PropTypes.func,\n  onUpdateError: PropTypes.func,\n};\n","export const SupplierData = ({ product, ...props }) => {\n  if (!product) return null;\n\n  return (\n    <div className=\"product-supplier-data\">\n      <ul>\n        <li>\n          <span className=\"\">Supplier</span>\n          <span className=\"\">{product.supplier_name}</span>\n        </li>\n        <li>\n          <span className=\"\">Item id</span>\n          <span className=\"\">{product.supplier_item_id}</span>\n        </li>\n        <li>\n          <span className=\"\">Category</span>\n          <span className=\"\">{product.supplier_item_category}</span>\n        </li>\n\n        <li>\n          <span className=\"\">Item cost</span>\n          <span className=\"\">\n            {product.supplier_item_cost} ({product.supplier_item_cost_currency})\n          </span>\n        </li>\n        <li>\n          <a href={product.supplier_item_url} className=\"text-underline\" target=\"_blank\" rel=\"noopener noreferrer\">\n            View supplier page\n          </a>\n        </li>\n      </ul>\n    </div>\n  );\n};\n","import { useEffect } from 'react';\nimport { AdminView, StaffCoverUpdateForm, PublishedStatusSpan } from '@miq/adminjs';\nimport Form from '@miq/form';\nimport { productServices } from './utils';\nimport { ProductImageAltTextInput } from './components';\nimport { SHOP_MSGS } from '../constants';\n\nexport function ProductQuickUpdateForm({ form, product, ...props }) {\n  const { setProduct, toast, categories } = props;\n  const productSlug = product?.slug;\n\n  useEffect(() => {}, [productSlug]);\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    const fD = {\n      name: form.values.name,\n      retail_price: form.values.retail_price,\n      is_on_sale: form.values.is_on_sale,\n      is_pre_sale: form.values.is_pre_sale,\n    };\n\n    if (form.values.category) fD.category = form.values.category;\n    if (form.values.is_on_sale) fD.sale_price = form.values.sale_price;\n\n    if (form.values.is_pre_sale) fD.is_pre_sale_text = form.values.is_pre_sale_text;\n\n    return productServices\n      .patch(product.slug, fD)\n      .then((data) => {\n        setProduct?.({ ...product, ...data });\n        toast?.success({ message: SHOP_MSGS.product.update_success });\n      })\n      .catch((err) => {\n        toast?.error({ message: SHOP_MSGS.product.update_error });\n        return form.handleError(err);\n      });\n  };\n\n  return (\n    <ProductForm context={form} onSubmit={handleSubmit} className=\"quick-product-update-form\">\n      <div className=\"d-grid grid-md-3 gap-3\">\n        <div className=\"span-md-2\">\n          <AdminView.Section\n            title=\"Details\"\n            actions={<PublishedStatusSpan is_published={product?.page?.is_published} pill />}\n          >\n            <div className=\"mb-1\">\n              <ProductNameInput error={form.errors.name} />\n            </div>\n\n            {categories && (\n              <div className=\"mb-1\">\n                <ProductCategoryInput categories={categories} error={form?.errors?.category} />\n              </div>\n            )}\n\n            <div className=\"mb-1\">\n              <div className=\"mb-1\">\n                <ProductRetailPriceInput error={form?.errors?.retail_price} />\n              </div>\n\n              {/* PRE SALE */}\n              <div className=\"mb-1\">\n                <div className=\"d-flex align-items-center mb-1\">\n                  <ProductPresaleCheckboxInput error={form?.errors?.is_pre_sale} />\n                </div>\n\n                {form.values.is_pre_sale && (\n                  <div className=\"mb-2\">\n                    <ProductPresaleTextInput error={form?.errors?.is_pre_sale_text} />\n                  </div>\n                )}\n              </div>\n\n              {/* SALE  */}\n              <div className=\"d-flex align-items-center mb-1\">\n                <ProductOnSaleCheckboxInput error={form?.errors?.is_on_sale} />\n              </div>\n\n              {form.values.is_on_sale && (\n                <div className=\"mb-2\">\n                  <ProductSalePriceInput error={form?.errors?.sale_price} />\n                </div>\n              )}\n            </div>\n\n            <div className=\"my-3\">\n              <Form.Submit value=\"Update product\" className=\"btn btn-primary-3\" />\n            </div>\n          </AdminView.Section>\n        </div>\n\n        <div className=\"\">\n          <StaffCoverUpdateForm\n            slug={product?.cover}\n            data={product.cover_data}\n            onCreate={(imgData) => {\n              productServices\n                .patch(product.slug, { cover: imgData.slug })\n                .then((data) => {\n                  setProduct?.({ ...product, ...data });\n                  toast?.success({ message: SHOP_MSGS.product.cover_create_success });\n                })\n                .catch((err) => {\n                  toast?.error({ message: SHOP_MSGS.product.cover_update_error });\n                });\n            }}\n            onUpdate={(cover_data) => {\n              toast?.success({ message: SHOP_MSGS.product.cover_update_success });\n              return setProduct?.({ ...product, cover_data });\n            }}\n            onDelete={() => {\n              toast?.success({ message: SHOP_MSGS.product.cover_delete_success });\n              return setProduct?.({ ...product, cover_data: null, cover: null });\n            }}\n            className=\"mb-1\"\n          />\n          <ProductImageAltTextInput image={product?.cover_data} />\n        </div>\n      </div>\n    </ProductForm>\n  );\n}\n\n// INPUTS\n\nexport const ProductNameInput = (props) => {\n  const { showLabel = true, label = 'Name', ...input } = props;\n  const { placeholder = 'Give a name to the item', ...rest } = input;\n  return (\n    <>\n      {showLabel && <Form.Label value={label} className=\"mb-1\" />}\n      <Form.TextInput {...rest} required name=\"name\" placeholder={placeholder} maxLength={99} />\n    </>\n  );\n};\n\nexport const ProductCategoryInput = (props) => {\n  const { showLabel = true, label = 'Category', ...input } = props;\n  const { categories, ...rest } = input;\n\n  return (\n    <>\n      {showLabel && <Form.Label value={label} />}\n      <Form.SelectInput {...rest} required name=\"category\" nullValue={{ label: 'Select category' }}>\n        {categories?.items?.map((cat) => {\n          return <Form.SelectInput.Option {...cat} key={cat.value} />;\n        })}\n      </Form.SelectInput>\n    </>\n  );\n};\n\nexport const ProductRetailPriceInput = (props) => {\n  const { showLabel = true, label = 'Retail price', ...rest } = props;\n\n  return (\n    <>\n      {showLabel && <Form.Label value={label} id=\"retail_price_label\" />}\n      <Form.TextInput\n        {...rest}\n        required\n        type=\"number\"\n        name=\"retail_price\"\n        aria-describedby=\"retail_price_label\"\n        min=\"0\"\n        step=\"0.01\"\n      />\n    </>\n  );\n};\n\nexport const ProductPresaleCheckboxInput = (props) => {\n  const { showLabel = true, label = 'Pre-sale', ...rest } = props;\n\n  return (\n    <div className=\"d-flex\">\n      <Form.CheckboxInput {...rest} name=\"is_pre_sale\" className=\"me-2\" />\n      <Form.Label value={label} />\n    </div>\n  );\n};\n\nexport const ProductPresaleTextInput = (props) => {\n  return (\n    <>\n      <Form.Label value=\"Pre sale text\" id=\"is_pre_sale_text_label\" className=\"miq-checkbox-label\" />\n      <Form.TextAreaX name=\"is_pre_sale_text\" aria-describedby=\"is_pre_sale_text_label\" />\n    </>\n  );\n};\n\nexport const ProductOnSaleCheckboxInput = (props) => {\n  const { showLabel = true, label = 'On Sale', ...rest } = props;\n\n  return (\n    <div className=\"d-flex\">\n      <Form.CheckboxInput {...rest} name=\"is_on_sale\" className=\"me-2\" />\n      <Form.Label value={label} />\n    </div>\n  );\n};\n\nexport const ProductSalePriceInput = (props) => {\n  const { showLabel = true, label = 'Sale price', ...rest } = props;\n  return (\n    <>\n      {showLabel && <Form.Label value={label} id=\"sale_price_label\" className=\"miq-checkbox-label\" />}\n      <Form.TextInput\n        {...rest}\n        required\n        type=\"number\"\n        name=\"sale_price\"\n        aria-describedby=\"sale_price_label\"\n        min=\"0\"\n        step=\"0.01\"\n      />\n    </>\n  );\n};\n\nexport const ProductStageSelect = (props) => {\n  const { showLabel = true, label = 'Stage', ...input } = props;\n  const { stages, name, ...rest } = input;\n\n  return (\n    <>\n      {showLabel && <Form.Label value={label} />}\n      <Form.SelectInput {...rest} required name={name || 'stage'} nullValue={{ label: 'Select stage' }}>\n        {stages?.map?.((stage) => {\n          return <Form.SelectInput.Option {...stage} key={stage.value} />;\n        })}\n      </Form.SelectInput>\n    </>\n  );\n};\n\nexport const ProductForm = ({ children, context, fields = [], prodSlug, ...props }) => {\n  const { onSuccess, onError, ...rest } = props;\n\n  const handleSubmit = (e) => {\n    if (!context || !fields) return;\n\n    e.preventDefault();\n    const fD = {\n      // name: context.values.name,\n      // retail_price: form.values.retail_price,\n      // is_on_sale: form.values.is_on_sale,\n      // is_pre_sale: form.values.is_pre_sale,\n    };\n\n    fields.forEach((field) => {\n      const value = context.values[field];\n      if (value == null) return;\n      fD[field] = value;\n    });\n\n    // if (form.values.category) fD.category = form.values.category;\n    // if (form.values.is_on_sale) fD.sale_price = form.values.sale_price;\n\n    // if (form.values.is_pre_sale) fD.is_pre_sale_text = form.values.is_pre_sale_text;\n    if (!prodSlug) return;\n\n    return productServices\n      .patch(prodSlug, fD)\n      .then((data) => {\n        props?.onSuccess?.(data);\n      })\n      .catch((err) => {\n        if (props.onError) return props.onError(err);\n        console.log('ehey');\n        return context.handleError(err);\n      });\n  };\n  return (\n    <Form {...rest} context={context} onSubmit={props.onSubmit || handleSubmit}>\n      {children}\n    </Form>\n  );\n};\n\nProductForm.NameInput = ProductNameInput;\nProductForm.CategoryInput = ProductCategoryInput;\nProductForm.RetailPriceInput = ProductRetailPriceInput;\nProductForm.PresaleCheckboxInput = ProductPresaleCheckboxInput;\nProductForm.PresaleTextInput = ProductPresaleTextInput;\nProductForm.OnSaleCheckboxInput = ProductOnSaleCheckboxInput;\nProductForm.SalePriceInput = ProductSalePriceInput;\nProductForm.StageSelect = ProductStageSelect;\n","import { useState } from 'react';\n\nimport { AdminView } from '@miq/adminjs';\nimport Form, { useForm } from '@miq/form';\nimport { supOrderServices } from './utils';\n\nexport const SupplierProductAddForm = ({ order_slug, ...props }) => {\n  const [isLoading, setLoading] = useState(false);\n\n  const form = useForm({\n    supplier_name: 'shein',\n    url: '',\n  });\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n\n    setLoading(true);\n\n    const { url } = form.values;\n\n    switch (form.values.supplier_name) {\n      case 'zara':\n        return null;\n\n      default:\n        if (!url.includes('shein')) return null;\n        return supOrderServices\n          .getSheinProductData(order_slug, { url })\n          .then((data) => {\n            setLoading(false);\n            form.setValue('url', '');\n            return props?.onSuccess(data);\n          })\n          .catch((err) => {\n            form.setErrors({ ...form.errors, url: 'Something went wrong.' });\n            setLoading(false);\n            return props?.onError(data);\n          });\n    }\n  };\n\n  return (\n    <AdminView.Section title={props?.title || 'Ajouter un produit'} className=\"supplier-product-add-section mt-3\">\n      <Form context={form} onSubmit={handleSubmit} className=\"supplier-product-add-form\">\n        {isLoading && <div className=\"my-3\">Getting product data. Please wait ...</div>}\n\n        <div className=\"d-flex flex-column flex-md-row\">\n          <Form.TextInput\n            required\n            name=\"url\"\n            type=\"url\"\n            error={form.errors.url}\n            placeholder=\"Add product source url ...\"\n            className=\"me-1\"\n            disabled={isLoading}\n          />\n\n          <Form.Submit value=\"Get data\" className=\"btn btn-primary-3\" disabled={isLoading} />\n        </div>\n      </Form>\n    </AdminView.Section>\n  );\n};\n","import { useContext, useEffect, useState } from 'react';\n\nimport { AdminView, PublishedStatusSpan } from '@miq/adminjs';\nimport Form, { useForm } from '@miq/form';\nimport { ToastCtx } from '@miq/components';\nimport { ImgSquare, Button, Pagination } from '@miq/components';\nimport { addOrUpdateArrayObject } from '@miq/utils';\n\nimport { supOrderServices } from './utils';\nimport { SupplierProductAddForm } from './forms';\nimport { ProductForm } from '../product/forms';\nimport { SupplierData } from './components';\nimport { SHOP_MSGS, SHOP_PATHS } from '../constants';\nimport { productServices } from '../product/utils';\nimport { ProductPriceDisplay } from '../public/components';\n\nconst formDefault = {\n  order_id: '',\n  items_stage: '',\n  currency: '',\n  is_paid: false,\n  total_cost: '',\n};\n\nexport default function SupplierOrderStaffUpdateView(props) {\n  const { sOrderSlug } = props.match.params;\n\n  const [order, setOrder] = useState({});\n  const [products, setProducts] = useState({});\n\n  const toast = useContext(ToastCtx);\n\n  const form = useForm(formDefault);\n  const { setValues } = form;\n\n  useEffect(() => {\n    if (!sOrderSlug) return;\n    return supOrderServices\n      .detail(sOrderSlug)\n      .then((data) => {\n        setOrder(data);\n\n        setValues({\n          order_id: data.order_id || '',\n          items_stage: data.items_stage || '',\n          currency: data.currency || '',\n          is_paid: data.is_paid || false,\n          total_cost: data.total_cost || '',\n        });\n      })\n      .catch((err) => {\n        if (err.response) {\n          if (err.response.status === 404) {\n            return;\n          }\n        }\n      });\n  }, [sOrderSlug, setValues]);\n\n  useEffect(() => {\n    if (!sOrderSlug) return;\n\n    return productServices\n      .list({ supplier_order_slug: sOrderSlug })\n      .then((data) => {\n        setProducts(data);\n      })\n      .catch((err) => {\n        // console.log(err);\n      });\n  }, [sOrderSlug]);\n\n  if (!order) return null;\n\n  const handleSubmit = (e, fields) => {\n    e.preventDefault();\n\n    let fD = {};\n    if (Array.isArray(fields)) {\n      fields.forEach((field) => {\n        const val = form.values[field];\n        if (val == null) return;\n        fD[field] = val;\n      });\n    } else fD = { ...form.values };\n\n    supOrderServices\n      .patch(sOrderSlug, fD)\n      .then(() => {\n        toast.success({ message: SHOP_MSGS.order.update_success });\n      })\n      .catch((err) => {\n        toast.error({ message: SHOP_MSGS.order.update_error });\n        form.handleError(err);\n      });\n  };\n\n  return (\n    <AdminView\n      back={SHOP_PATHS.orderList()}\n      title=\"Modifier une commande\"\n      actions={<div></div>}\n      className=\"supplier-order-update-view\"\n    >\n      <div className=\"d-grid grid-md-3 gap-3\">\n        <div className=\"span-md-2\">\n          <SupplierProductAddForm\n            order_slug={sOrderSlug}\n            onSuccess={(product) => {\n              toast.success({ message: SHOP_MSGS.product.create_success });\n              return setProducts({\n                ...products,\n                count: products.count + 1,\n                results: addOrUpdateArrayObject(products.results, product),\n              });\n            }}\n          />\n\n          <OrderItemListSection\n            {...props}\n            order={order}\n            products={products}\n            setProducts={setProducts}\n            orderSlug={order.slug}\n          />\n        </div>\n\n        <div className=\"\">\n          <div className=\"\" style={{ position: 'sticky', top: 0 }}>\n            <Form context={form} onSubmit={handleSubmit} className=\"order-update-form\">\n              <AdminView.Section title=\"Order details\">\n                <ul className=\"mb-3\">\n                  <li className=\"\">Product: {products.count}</li>\n                </ul>\n                <div className=\"mb-1\">\n                  <Form.Label value=\"Order Id\" className=\"mb-1\" />\n                  <Form.TextInput\n                    required\n                    name=\"order_id\"\n                    error={form.errors.order_id}\n                    placeholder=\"Order iD\"\n                    maxLength={99}\n                  />\n                </div>\n                <div className=\"d-flex align-items-center mb-1\">\n                  <Form.CheckboxInput name=\"is_paid\" error={form.errors.is_paid} className=\"me-2\" />\n                  <Form.Label value=\"Paid\" />\n                </div>\n                {form.values.is_paid && (\n                  <div className=\"mb-1\">\n                    <Form.Label value=\"Total cost\" id=\"total_cost_label\" />\n                    <Form.TextInput\n                      required\n                      type=\"number\"\n                      name=\"retailtotal_cost_price\"\n                      error={form.errors.total_cost}\n                      aria-describedby=\"total_cost_label\"\n                      min=\"0\"\n                      step=\"0.01\"\n                    />\n                  </div>\n                )}\n                <div className=\"\">\n                  <Form.Submit value=\"Save\" className=\"btn btn-primary-3\" />\n                </div>\n              </AdminView.Section>\n            </Form>\n\n            <Form context={form} onSubmit={(e) => handleSubmit(e, ['items_stage'])} className=\"order-update-form\">\n              <AdminView.Section title=\"Stage\" text=\"This will update the stage of all products in this order.\">\n                <ProductForm.StageSelect\n                  name=\"items_stage\"\n                  stages={order?.stages}\n                  error={form.errors.items_stage}\n                  showLabel={false}\n                  className=\"mb-1\"\n                />\n\n                <div className=\"\">\n                  <Form.Submit value=\"Save\" className=\"btn btn-primary-2\" />\n                </div>\n              </AdminView.Section>\n            </Form>\n          </div>\n        </div>\n      </div>\n    </AdminView>\n  );\n}\n\nconst OrderItemListSection = ({ order, products, setProducts, ...props }) => {\n  const [selected, setSelected] = useState([]);\n\n  const { toast } = props;\n\n  return (\n    <AdminView.Section className=\"order-items mb-3\">\n      {products?.results?.map((item) => {\n        const isSelected = selected.includes(item.slug);\n\n        return (\n          <div className=\"\" key={item.slug}>\n            <div className=\"\">\n              <input\n                type=\"checkbox\"\n                checked={isSelected}\n                onChange={() => {\n                  if (isSelected) setSelected(selected.filter((i) => i !== item.slug));\n                  else setSelected([...selected, item.slug]);\n                }}\n              />\n            </div>\n\n            <OrderItem\n              item={item}\n              toast={toast}\n              categories={order.categories}\n              onUpdate={(data) => {\n                setProducts({\n                  ...products,\n                  results: products.results.map((i) => {\n                    if (i.slug === data.slug) return data;\n                    return i;\n                  }),\n                });\n              }}\n            />\n          </div>\n        );\n      })}\n      <Pagination\n        count={products.count}\n        next={products.next}\n        previous={products.previous}\n        onPreviousClick={() => {\n          productServices\n            .get(products.previous)\n            .then((data) => {\n              setProducts(data);\n            })\n            .catch((err) => {\n              toast?.error({ message: SHOP_MSGS.default });\n            });\n        }}\n        onNextClick={() => {\n          productServices\n            .get(products.next)\n            .then((data) => {\n              setProducts(data);\n            })\n            .catch((err) => {\n              toast?.error({ message: SHOP_MSGS.default });\n            });\n        }}\n      />\n    </AdminView.Section>\n  );\n};\n\nconst OrderItem = ({ item, ...props }) => {\n  const [isEdit, setEdit] = useState(props.isEdit || false);\n\n  if (!item?.slug) return null;\n\n  return (\n    <div className=\"order-item mb-2 border-1 rounded \">\n      <div className=\"d-flex p-1\">\n        <div className=\"me-1\">\n          <ImgSquare {...item.cover_data} className=\"rounded\" />\n        </div>\n\n        <div className=\"flex-1 detail\">\n          <div className=\"fw-bold\" title={item.name}>\n            <span className=\"me-2\">{item.name}</span>\n            {item?.page?.is_published && <PublishedStatusSpan is_published={item?.page?.is_published} pill short />}\n          </div>\n\n          <div className=\"\">\n            <ProductPriceDisplay\n              product={{ ...item, retail_price: item.retail_price_data, sale_price: item.sale_price_data }}\n            />\n          </div>\n\n          <div className=\"mb-1 text-sm\">\n            {item.category_data && <span className=\"me-1\">{item.category_data.name} /</span>}\n            {item.is_pre_sale && <span className=\"me-1\">Pre sale /</span>}\n            <span className=\"me-1\">atc: {item.add_to_cart_count}</span>\n          </div>\n\n          <div className=\"actions d-flex justify-content-between align-items-center\">\n            <a href={SHOP_PATHS.productUpdate(item.slug)} target=\"_blank\" className=\"update-btn btn btn-primary-2\">\n              Update\n            </a>\n\n            <div>\n              <Button onClick={() => setEdit(!isEdit)} className=\"quick-update-btn btn-secondary-3\">\n                Quick update\n              </Button>\n            </div>\n          </div>\n        </div>\n      </div>\n\n      {isEdit && <OrderProductUpdateForm {...props} isEdit={isEdit} product={item} />}\n    </div>\n  );\n};\n\nconst OrderProductUpdateForm = ({ isEdit, product, ...props }) => {\n  const form = useForm({\n    name: product.name || '',\n    category: product.category || '',\n    retail_price: product?.retail_price || 0.0,\n    supplier_item_cost: product?.supplier_item_cost || 0.0,\n    is_pre_sale: product.is_pre_sale || false,\n    is_pre_sale_text: product.is_pre_sale_text || '',\n  });\n\n  if (!isEdit) return null;\n\n  const handleUpdate = (data) => {\n    props?.toast?.success?.({ message: SHOP_MSGS.product.update_success });\n    return props?.onUpdate(data);\n  };\n\n  const { errors } = form;\n  return (\n    <ProductForm\n      context={form}\n      prodSlug={product.slug}\n      fields={['name', 'category', 'retail_price', 'is_pre_sale', 'is_pre_sale_text', 'supplier_item_cost']}\n      className=\"order-item-form mb-2\"\n      onSuccess={handleUpdate}\n      onError={(err) => {\n        return form.handleError(err);\n      }}\n    >\n      <div className=\"d-grid grid-md-5 gap-2\">\n        <div className=\"span-md-3 mb-2\">\n          <ProductForm.NameInput error={errors.name} className=\"mb-1\" />\n          <ProductForm.CategoryInput categories={props?.categories} className=\"mb-1\" />\n          <ProductForm.RetailPriceInput error={errors.retail_price} className=\"mb-1\" />\n\n          <Form.Label value={`Supplier item cost (${product.supplier_item_cost_currency})`} />\n          <Form.TextInput name=\"supplier_item_cost\" className=\"\" />\n        </div>\n\n        <div className=\"span-md-2\">\n          <div className=\"mb-3\">\n            <div className=\"mb-1\">\n              <ProductForm.PresaleCheckboxInput error={errors.is_pre_sale} className=\"mb-1\" />\n            </div>\n\n            {form.values.is_pre_sale && (\n              <div className=\"mb-1\">\n                <ProductForm.PresaleTextInput error={errors.is_pre_sale_text} />\n              </div>\n            )}\n\n            <Form.Submit value=\"Update\" className=\"btn btn-primary-3 w-100\" />\n          </div>\n          <SupplierData product={product} />\n        </div>\n      </div>\n    </ProductForm>\n  );\n};\n"],"sourceRoot":""}
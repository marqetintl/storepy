{"version":3,"file":"static/js/26.59edc23a.chunk.js","mappings":"+OAae,SAASA,IACtB,IAAMC,GAAOC,EAAAA,EAAAA,IAAQ,CAAEC,MAAO,KAC9B,GAAkCC,EAAAA,EAAAA,KAAW,kBAAMC,EAAAA,EAAAA,IAAM,CAAEC,KAAM,YAAaC,aAAY,CACxFC,YAAa,GACbC,UAAW,gBAAGC,EAAH,EAAGA,KAAH,OAAmBT,EAAKU,UAAU,CAAER,MAAOO,EAAKP,OAAS,QAF9DS,EAAR,EAAQA,IAAKC,EAAb,EAAaA,OAAQC,EAArB,EAAqBA,SAKfC,EAAI,IAAIC,EAAAA,GAASJ,GACvB,IAAKG,EAAEE,UAAW,OAAO,KAEzB,IAAMC,GAAWb,EAAAA,EAAAA,IAAMU,EAAEL,MAWzB,OACE,SAAC,UAAD,CAAYP,MAAM,yBAAyBgB,KAAK,MAAhD,UACE,SAAC,KAAD,CAAMC,QAASnB,EAAMoB,SAXJ,SAACC,GAGpB,OAFAA,EAAEC,iBAEKL,EACJM,OAAOvB,EAAKwB,QACZC,MAAK,gBAAGhB,EAAH,EAAGA,KAAH,OAAmBG,EAAOH,MAC/BiB,OAAM,gBAAGC,EAAH,EAAGA,SAAH,OAAuBd,EAASc,OAKvC,UACE,UAAC,aAAD,CAAezB,MAAM,qBAArB,WACE,SAAC,WAAD,CAAY0B,MAAM,aAAaC,MAAO7B,EAAK8B,OAAO5B,MAAlD,UACE,SAAC,UAAD,CAAW6B,UAAQ,EAACC,KAAK,QAAQC,UAAW,QAG9C,gBAAKC,UAAU,GAAf,UACE,SAAC,YAAD,CAAaC,MAAM,OAAOD,UAAU,6B,oICLnCE,EAAb,+IACE,SAAYZ,GACV,OAAOa,KAAKC,MAAL,UAAcD,KAAKE,MAAnB,UAAkCf,KAF7C,wBAKE,SAAWA,GACT,OAAOa,KAAKC,MAAL,UAAcD,KAAKE,MAAnB,SAAiCf,OAN5C,GAAoCgB,EAAAA,IAU7B,SAASC,IAAiC,IAAzBhC,EAAwB,uDAAJ,GAC1C,OAAOiC,EAAAA,EAAAA,IAAwCjC,EAAM,YAAa2B,GAO7D,SAAShC,IAA6B,IAAvBK,EAAsB,uDAAJ,GACtC,OAAOiC,EAAAA,EAAAA,IAAsBjC,EAAM","sources":["../../../../packages/miq-staffjs/src/Setting/IndexUpdateView.tsx","../../../../packages/miq-staffjs/src/Setting/models.tsx"],"sourcesContent":["import * as React from 'react';\nimport { useRequest } from '@miq/hookjs';\nimport Form, { useForm } from '@miq/formjs';\nimport { Response } from '@miq/utiljs';\nimport Staff from '..';\nimport { Index } from './models';\n\n//#region IndexModel\n\n//#endregion IndexModel\n\n//#region IndexUpdateView\n\nexport default function IndexUpdateView() {\n  const form = useForm({ title: '' });\n  const { res, setRes, setError } = useRequest(() => Index({ slug: 'current' }).retrieve(), {\n    refreshDeps: [],\n    onSuccess: ({ data }: any) => form.setValues({ title: data.title || '' }),\n  });\n\n  const r = new Response(res);\n  if (!r.isSuccess) return null;\n\n  const instance = Index(r.data);\n\n  const handleSubmit = (e: any) => {\n    e.preventDefault();\n\n    return instance\n      .update(form.values)\n      .then(({ data }: any) => setRes(data))\n      .catch(({ response }: any) => setError(response));\n  };\n\n  return (\n    <Staff.View title=\"Site HomePage Settings\" back=\"../\">\n      <Form context={form} onSubmit={handleSubmit}>\n        <Staff.Section title=\"Index Page Details\">\n          <Form.Field label=\"Meta title\" error={form.errors.title}>\n            <Form.Text required name=\"title\" maxLength={99} />\n          </Form.Field>\n\n          <div className=\"\">\n            <Form.Submit value=\"Save\" className=\"btn-primary-2\" />\n          </div>\n        </Staff.Section>\n      </Form>\n    </Staff.View>\n  );\n}\n\n//#endregion IndexUpdateView\n","import { ImgProps } from '@miq/componentjs';\nimport { StaffModel, StaffService } from '../service';\n\nexport interface SiteType {\n  navbar?: { label: string; path: string }[];\n  /** Site setting slug */\n  settings?: string;\n  name?: string;\n  domain?: string;\n}\n\nexport type SettingType = Record<string, any> & {\n  slug?: string;\n  is_live?: string;\n  site?: SiteType;\n\n  logo?: string;\n  logo_data?: ImgProps;\n\n  contact_number?: string;\n  contact_number_title?: string;\n  contact_number_display?: string;\n  contact_email?: string;\n  whatsapp_link?: string;\n  whatsapp_link_title?: string;\n\n  ga_tracking?: string;\n  fb_pixel?: string;\n  fb_app_id?: string;\n  fb_app_secret?: string;\n\n  ct_title?: string;\n  ct_text?: string;\n  ct_html?: string;\n  ct_image?: string;\n  ct_image_data?: ImgProps;\n};\n\nexport class SettingService extends StaffService<SettingType> {\n  updatePages(values: any) {\n    return this.patch(`${this._path}pages/`, values);\n  }\n\n  updateSite(values: any) {\n    return this.patch(`${this._path}site/`, values);\n  }\n}\n\nexport function Setting(data: SettingType = {}) {\n  return StaffModel<SettingType, SettingService>(data, 'settings/', SettingService);\n}\n\nexport type SettingInstance = ReturnType<typeof Setting>;\n\nexport type IndexType = {};\n\nexport function Index(data: IndexType = {}) {\n  return StaffModel<IndexType>(data, 'index/');\n}\n\nexport type IndexInstance = ReturnType<typeof Index>;\n\n// export type SettingType = typeof Setting & SettingState & { patch: (v: any) => Promise<any> };\n"],"names":["IndexUpdateView","form","useForm","title","useRequest","Index","slug","retrieve","refreshDeps","onSuccess","data","setValues","res","setRes","setError","r","Response","isSuccess","instance","back","context","onSubmit","e","preventDefault","update","values","then","catch","response","label","error","errors","required","name","maxLength","className","value","SettingService","this","patch","_path","StaffService","Setting","StaffModel"],"sourceRoot":""}
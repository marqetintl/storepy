{"version":3,"sources":["../../../../packages/miq-adminjs/src/pages/utils.jsx","../../../../packages/miq-adminjs/src/pages/PageUpdateView/index.jsx"],"names":["pagesServices","path","list","params","getService","API","this","get","pageSlug","PageUpdateView","props","match","useState","page","setPage","useEffect","then","data","catch","err","slug","sourceSlug","className","request"],"mappings":"4LAQaA,EAAgB,CACzBC,KAAM,SACNC,KAFyB,SAEpBC,GACD,OAAOC,YAAWC,IAAKC,KAAKL,KAAME,IAEtCI,IALyB,SAKrBC,EAAUL,GACV,OAAOC,YAAWC,IAAD,UAASC,KAAKL,MAAd,OAAqBO,EAArB,KAAkCL,M,kICP5C,SAASM,EAAeC,GACnC,IAAQF,EAAaE,EAAMC,MAAMR,OAAzBK,SAER,EAAwBI,mBAAS,IAAjC,mBAAOC,EAAP,KAAaC,EAAb,KAWA,OATAC,qBAAU,WACDP,GAELR,IACKO,IAAIC,GACJQ,MAAK,SAACC,GAAD,OAAUH,EAAQG,MACvBC,OAAM,SAACC,SACb,CAACX,IAECK,GAASA,EAAKO,KAGf,cAAC,IAAD,CAAYC,WAAYR,EAAKO,KAAME,UAAU,GAA7C,SACI,sBAAKA,UAAU,GAAf,UACKT,EAAKO,KAEN,cAAC,IAAD,CAAgBC,WAAYR,EAAKO,KAAMG,QAASlB,WAP5B","file":"static/js/10.b0608824.chunk.js","sourcesContent":["import { getService } from \"@miq/utils\";\nimport { API } from \"../utils\";\n// import { PAGE_CREATE_PATH } from \"../editor\";\n\nconst initialState = { results: [], items: {} };\n\nconst actions = {};\n\nexport const pagesServices = {\n    path: \"pages/\",\n    list(params) {\n        return getService(API, this.path, params);\n    },\n    get(pageSlug, params) {\n        return getService(API, `${this.path}${pageSlug}/`, params);\n    },\n};\n\nexport const pagesActions = {\n    post(values) {\n        return actions.post(`${this.path}`, values, \"ADD_UPDATE_PAGE\");\n    },\n    patch(pageSlug, values, oldValues) {\n        return actions.patch(`${this.path}${pageSlug}/`, values, oldValues);\n    },\n    postSection(pageSlug, values) {\n        return actions.post(`${this.path}${pageSlug}/section/`, values, \"APPEND_SECTION\");\n    },\n    delete(pageSlug) {\n        return actions.delete(`${this.path}${pageSlug}/`, pageSlug, \"REMOVE_PAGE\");\n    },\n};\n\nexport const pagesReducer = (state = initialState, action) => {\n    const { type, payload = {} } = action;\n    let items;\n\n    switch (type) {\n        case \"SET_PAGES\":\n            const { results, ...rest } = payload;\n            state = { ...rest };\n\n            if (results) {\n                items = {};\n\n                results.forEach((item) => {\n                    items[`${item.slug}`] = item;\n                });\n                state = { ...state, items };\n            }\n            return state;\n\n        case \"ADD_UPDATE_PAGE\":\n            items = { ...state.items, [payload.slug]: payload };\n            return { ...state, items };\n\n        case \"REMOVE_PAGE\":\n            items = state.items;\n            delete items[payload.slug];\n            return { ...state, items };\n\n        default:\n            return { ...state };\n    }\n};\n","import { useEffect, useState } from \"react\";\n\nimport EditorForm, { EditorSections } from \"@miq/editor\";\n\nimport { pagesServices } from \"../utils\";\nimport { API } from \"../../utils\";\n\nexport default function PageUpdateView(props) {\n    const { pageSlug } = props.match.params;\n\n    const [page, setPage] = useState({});\n\n    useEffect(() => {\n        if (!pageSlug) return;\n\n        pagesServices\n            .get(pageSlug)\n            .then((data) => setPage(data))\n            .catch((err) => {});\n    }, [pageSlug]);\n\n    if (!page || !page.slug) return null;\n\n    return (\n        <EditorForm sourceSlug={page.slug} className=\"\">\n            <div className=\"\">\n                {page.slug}\n\n                <EditorSections sourceSlug={page.slug} request={API} />\n            </div>\n        </EditorForm>\n    );\n}\n"],"sourceRoot":""}
{"version":3,"file":"static/js/601.4a9019c9.chunk.js","mappings":"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","sources":["../../../../shopy/shopy-storejs/src/Product/components.tsx","../../../../shopy/shopy-storejs/src/Product/models.tsx","../../../../shopy/shopy-storejs/src/Product/utils.ts","../../../../shopy/shopy-storejs/src/Supplier/forms.tsx","../../../../shopy/shopy-storejs/src/Supplier/SupplierProductList.tsx","../../../../shopy/shopy-storejs/src/Supplier/OrderUpdateView.tsx","../../../../shopy/shopy-storejs/src/components.tsx","../../../../shopy/shopy-storejs/src/events/index.tsx"],"sourcesContent":["import { NavLink, useSearchParams } from 'react-router-dom';\n\nimport { ImgAddButtonProps, StaffImg, StaffImgAddButton } from '@miq/staffjs';\nimport { IFormUpdateProps } from '@miq/formjs';\nimport { getCN } from '@miq/utiljs';\nimport { Button, ConfirmButton, Icons, ImgType } from '@miq/componentjs';\n\nimport { emitter } from '../events';\nimport { ProductType } from '../types';\nimport { ProductPriceDisplay, PublishedIcon } from '../components';\n\nimport { StaffProduct, TStaffProductInstance } from './models';\n\n//#region ============================== BUTTONS\n\nexport type ProductImagesAddButtonProps = Omit<ImgAddButtonProps, 'onSuccessMulti' | 'onErrorMulti'> & {\n  productInstance: TStaffProductInstance;\n};\n\n/**\n * Button component for adding images to a product\n * ```js\n * <ProductImagesAddButton productInstance={instance} onSuccess={(res: any) => onUpdate?.(res.data)} />\n * ```\n */\n\nexport const ProductImagesAddButton = (props: ProductImagesAddButtonProps) => {\n  const { productInstance, onSuccess, onError, ...rest } = props;\n  return (\n    <StaffImgAddButton\n      className=\"btn-primary-3\"\n      {...rest}\n      multiple={true}\n      onSuccessMulti={(resArray) => {\n        const imgsArray = resArray\n          .map(({ data }: any) => data?.slug)\n          .filter((slug) => !productInstance.images?.includes(slug));\n        return productInstance\n          .update({ images: [...productInstance.images!, ...imgsArray] })\n          .then((res) => onSuccess?.(res))\n          .catch((err) => onError?.(err));\n      }}\n    />\n  );\n};\n\nexport const ProductDeleteButton: React.FC<\n  Omit<IFormUpdateProps<TStaffProductInstance>, 'context'> & { label?: string }\n> = (props) => {\n  const { instance, onSuccess, onError, label } = props;\n\n  const handleDelete = (setOpen: any) => {\n    instance\n      .destroy()\n      .then((res: any) => {\n        setOpen?.(false);\n        onSuccess?.(res);\n        emitter.destroy({ slug: instance.slug });\n      })\n      .catch((err: any) => onError?.(err));\n  };\n  return (\n    <ConfirmButton\n      renderHeader={() => <div>Supprimer '{instance.name}'</div>}\n      renderFooter={({ setOpen }) => (\n        <div className=\"d-flex justify-content-between align-items-center\">\n          <Button onClick={() => setOpen(false)}>Annuler</Button>\n\n          <Button onClick={() => handleDelete(setOpen)} className=\"btn-danger\">\n            Supprimer\n          </Button>\n        </div>\n      )}\n      render={() => <div className=\"p-3\">Are you sure you want to delete this</div>}\n      className={getCN(['product-delete-button btn-danger-3', props.className])}\n    >\n      <Icons.Trash />\n      {label && <span className=\"label\">{label}</span>}\n    </ConfirmButton>\n  );\n};\n\n//#endregion ============================== BUTTONS\n\nexport const ProductCardItem = ({ data, ...props }: { data: ProductType }) => {\n  const instance = StaffProduct(data);\n\n  return (\n    <div className=\"p-card-list-item p-1 mb-1\">\n      <div className=\"d-flex align-items-center\">\n        <div className=\"p-name text-ellipsis\">{instance.name_truncated}</div>\n        <div className=\"ms-1\">\n          <PublishedIcon show={instance.is_published} />\n        </div>\n      </div>\n\n      <div className=\"d-flex\">\n        <StaffImg.Square {...instance?.cover_data} />\n        <div className=\"p-info ps-1\">\n          <ProductPriceDisplay {...instance.export()} className=\"d-flex flex-wrap\" />\n          <div className=\"p-category\">{instance.category_data?.name}</div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport type ProductCardListProps = {\n  items: ProductType[];\n  itempath: string;\n};\nexport const ProductCardList = ({ items, itempath }: ProductCardListProps) => {\n  const [params] = useSearchParams();\n  return (\n    <div className=\"p-card-list-items\">\n      {items.map((item: ProductType) => {\n        // let to = `${itempath}${item.slug}/?${params}`;\n        let to = `${itempath}${item.slug}/?${params}`;\n        return (\n          <NavLink to={to} key={item.slug}>\n            <ProductCardItem data={item} />\n          </NavLink>\n        );\n      })}\n    </div>\n  );\n};\n","import { StaffModel, StaffService } from '@miq/staffjs';\nimport { ProductType } from '../types';\n\nclass StaffProductService extends StaffService<ProductType> {\n  publish() {\n    return this.patch(`${this._path}publish/`, { is_published: true });\n  }\n\n  unpublish() {\n    return this.patch(`${this._path}publish/`, { is_published: false });\n  }\n\n  postSize(values: any) {\n    return this.post(`${this._path}size/new/`, values);\n  }\n  patchSize(sizeSlug: string, values: any) {\n    return this.patch(`${this._path}size/${sizeSlug}/`, values);\n  }\n  deleteSize(sizeSlug: string) {\n    return this.delete(`${this._path}size/${sizeSlug}/`);\n  }\n  postAttribute(values: any) {\n    return this.post(`${this._path}attribute/new/`, values);\n  }\n  patchAttribute(attrSlug: string, values: any) {\n    return this.patch(`${this._path}attribute/${attrSlug}/`, values);\n  }\n  deleteAttribute(attrSlug: string) {\n    return this.delete(`${this._path}attribute/${attrSlug}/`);\n  }\n  swapCover(slug: string) {\n    return this.patch(`${this._path}swap-cover/`, { slug });\n  }\n}\n\nexport const StaffProduct = (data: ProductType = {}) => {\n  let { dt_published } = data;\n  if (dt_published) dt_published = new Date(dt_published);\n\n  return StaffModel<ProductType, StaffProductService>({ ...data, dt_published }, 'products', StaffProductService);\n};\n\nexport type TStaffProductInstance = ReturnType<typeof StaffProduct>;\n","import { useSearchParams } from 'react-router-dom';\n\nimport { useRequest } from '@miq/hookjs';\nimport { StaffProduct } from './models';\n\nexport const useProductListRequest = (orderSlug?: string) => {\n  const [params] = useSearchParams();\n\n  const q = params.get('q');\n  const cat = params.get('cat');\n  const page = params.get('page');\n  const published = params.get('published');\n  const presale = params.get('presale');\n  const sale = params.get('sale');\n\n  let searchParams: any = { page, cat, published, presale, sale, q };\n  if (orderSlug) searchParams.supplier_order_slug = orderSlug;\n\n  return useRequest(() => StaffProduct().list({ params: searchParams }), {\n    refreshDeps: [q, page, cat, published, presale, sale, orderSlug],\n  });\n};\n","import * as React from 'react';\nimport Form, {\n  DescriptionField,\n  NameField,\n  FormProps,\n  IFormCallbackProps,\n  IFormUpdateProps,\n  useForm,\n  TextFieldProps,\n  CheckboxFieldProps,\n  SelectFieldProps,\n  TextChoicesType,\n} from '@miq/formjs';\nimport { SupplierOrder } from './models';\n\ninterface ISupplierOrderUpdateFormProps extends IFormUpdateProps {\n  instance: ReturnType<typeof SupplierOrder>;\n  fields: string[];\n}\n\nexport const SupplierOrderUpdateForm: React.FC<ISupplierOrderUpdateFormProps> = ({ instance, fields, ...props }) => {\n  const { onSuccess, onError, ...rest } = props;\n  const { context } = rest;\n\n  const handleSubmit = (e: React.FormEvent) => {\n    e.preventDefault();\n\n    const fd: any = {};\n    fields.forEach((field) => {\n      const value = context.values[field];\n      if (value == null) return;\n      fd[field] = value;\n    });\n\n    return instance\n      .update(fd)\n      .then((res: any) => onSuccess?.(res))\n      .catch((err: any) => {\n        if (onError) return onError(err);\n        return context?.handleError?.(err);\n      });\n  };\n  return <SupplierOrderForm {...rest} onSubmit={handleSubmit} />;\n};\n\n//#region ==================================== SUPPLIER ORDER FORM\n\nexport const SupplierOrderForm = (props: FormProps) => <Form {...props} />;\n\nSupplierOrderForm.NameField = (props: TextFieldProps) => {\n  const { label = 'Name', text = 'Write a name to help remember your order.', error, ...rest } = props;\n  return (\n    <Form.Field label={label} text={text} error={error}>\n      <Form.Text placeholder=\"Nom\" maxLength={99} {...rest} name=\"name\" />\n    </Form.Field>\n  );\n};\n\nSupplierOrderForm.OrderIDField = (props: TextFieldProps) => {\n  const { label = 'Order ID', text, error, ...rest } = props;\n  return (\n    <Form.Field label={label} text={text} error={error}>\n      <Form.Text placeholder=\"Order ID\" maxLength={99} {...rest} name=\"order_id\" />\n    </Form.Field>\n  );\n};\n\nSupplierOrderForm.IsPaidField = (props: CheckboxFieldProps) => {\n  const { label = 'Payé', text, error, ...rest } = props;\n  return (\n    <Form.Field label={label} text={text} error={error} checkbox>\n      <Form.Checkbox {...rest} name=\"is_paid\" />\n    </Form.Field>\n  );\n};\n\nSupplierOrderForm.TotalCostField = (props: TextFieldProps) => {\n  const { label = 'Coût total', text, error, ...rest } = props;\n  return (\n    <Form.Field label={label} text={text} error={error}>\n      <Form.Text min=\"0\" step=\"0.01\" {...rest} required type=\"number\" name=\"total_cost\" />\n    </Form.Field>\n  );\n};\n\nSupplierOrderForm.CurrencyField = (props: SelectFieldProps & { currencies: TextChoicesType }) => {\n  const { label, text = 'Select the supplier currency.', error, currencies, ...rest } = props;\n\n  return (\n    <Form.Field {...{ label, text, error }}>\n      <Form.Select {...rest} required name=\"currency\" nullValue={{ label: 'Sélectionnez une monnaie ...' }}>\n        {currencies?.map((curr) => {\n          return <Form.Option {...curr} key={curr.value} />;\n        })}\n      </Form.Select>\n    </Form.Field>\n  );\n};\n\nSupplierOrderForm.SupplierField = (props: SelectFieldProps & { suppliers: TextChoicesType }) => {\n  const { label, text = 'Select the supplier.', error, suppliers, ...rest } = props;\n\n  return (\n    <Form.Field {...{ label, text, error }}>\n      <Form.Select {...rest} required name=\"supplier\" nullValue={{ label: 'Sélectionnez le supplier ...' }}>\n        {suppliers?.map((supplier) => {\n          return <Form.Option {...supplier} key={supplier.value} />;\n        })}\n      </Form.Select>\n    </Form.Field>\n  );\n};\n\n//#endregion ==================================== SUPPLIER ORDER FORM\n\ninterface ISupplierOrderProductAddFormProps extends IFormCallbackProps {\n  orderInstance: ReturnType<typeof SupplierOrder>;\n  children?: React.ReactNode;\n}\n\nexport const SupplierOrderProductAddForm = ({ children, ...props }: ISupplierOrderProductAddFormProps) => {\n  const { orderInstance, onSuccess, onError } = props;\n  const supplier = orderInstance?.supplier?.toLowerCase();\n\n  const form = useForm({ supplier_name: supplier, url: '' });\n  const [isLoading, setLoading] = React.useState(false);\n\n  const handleSubmit = (e: React.FormEvent) => {\n    e.preventDefault();\n\n    const { url } = form.values;\n\n    const handleSuccess = (res: any) => {\n      setLoading(false);\n      form.setValue('url', '');\n      return onSuccess?.(res);\n    };\n\n    const handleError = (err: any) => {\n      form.setErrors({ ...form.errors, url: 'Something went wrong.' });\n      setLoading(false);\n      return onError?.(err);\n    };\n\n    const urlErrMsg = `Invalid Url: does not match supplier ${orderInstance.supplier}`;\n\n    switch (supplier) {\n      case 'fnova':\n        if (!url.includes('fashionnova')) return form.setErrors({ url: urlErrMsg });\n\n        setLoading(true);\n        return orderInstance.postFnova(url).then(handleSuccess).catch(handleError);\n      case 'plt':\n        if (!url.includes('prettylittlething')) return form.setErrors({ url: urlErrMsg });\n\n        setLoading(true);\n        return orderInstance.postPlt(url).then(handleSuccess).catch(handleError);\n\n      default:\n        if (!url.includes(supplier)) return form.setErrors({ url: urlErrMsg });\n\n        setLoading(true);\n        return orderInstance.postShein(url).then(handleSuccess).catch(handleError);\n    }\n  };\n\n  return (\n    <Form context={form} onSubmit={handleSubmit} className=\"supplier-product-add-form\">\n      <Form.Field error={form.errors.url}>\n        <div className=\"d-flex flex-column flex-md-row align-items-center\">\n          <Form.Text\n            required\n            autoFocus\n            name=\"url\"\n            type=\"url\"\n            placeholder={`Add ${supplier} product source url ...`}\n            className=\"me-1\"\n            disabled={isLoading}\n          />\n\n          <div className=\"mt-1 mt-md-0\">\n            <Form.Submit value=\"Add product\" className=\"btn btn-primary-3\" disabled={isLoading} />\n          </div>\n        </div>\n      </Form.Field>\n\n      {isLoading && <div className=\"my-3\">Getting product data. Please wait ...</div>}\n    </Form>\n  );\n};\n\nconst u = 'https://www.fashionnova.com/products/jessa-denim-mini-dress-white';\nconst shein404 = 'https://us.shein.com/Clear-Acrylic-Frame-Glasses-p-1792787-cat-2842.html';\nconst fnovavariant = 'https://www.fashionnova.com/products/kayla-seamless-bandeau-olive?variant=12191869272188';\n","import * as React from 'react';\nimport { useParams } from 'react-router-dom';\n\nimport './supplier-product-list.scss';\n\nimport Staff from '@miq/staffjs';\nimport { Button, HorizontalScrollGridLayout, Icons, Pagination, ViewSection } from '@miq/componentjs';\n\nimport { StaffProduct } from '../Product';\nimport { useProductListRequest } from '../Product';\nimport { ProductListFilterForm, ProductQuickUpdateForm } from '../Product/forms';\nimport { ProductDeleteButton } from '../Product/components';\nimport { CategoryChoicesType, ProductType } from '../types';\n\nimport { SupplierOrder } from './models';\n\nexport type SupplierProductListProps = {\n  orderInstance: ReturnType<typeof SupplierOrder>;\n  categories: CategoryChoicesType;\n  refreshOrder: () => Promise<null | undefined>;\n};\n\nexport default function SupplierProductList({ orderInstance, refreshOrder, categories }: SupplierProductListProps) {\n  const { ordSlug } = useParams();\n  const { res = { data: { results: [] } } } = useProductListRequest(ordSlug);\n  const [selected, setSelected] = React.useState<string[]>([]);\n\n  return (\n    <Staff.Section\n      header={<ProductListFilterForm categories={categories} />}\n      footer={<Pagination {...res.data} component={Staff.NavLink} to />}\n      className=\"supplier-p-list\"\n    >\n      {res.data?.results.length ? (\n        <>\n          {selected.length !== 0 && (\n            <div className=\"bg-white\" style={{ position: 'sticky', top: 0, zIndex: 1000 }}>\n              <Button>Group together</Button>\n            </div>\n          )}\n\n          {res.data.results.map((item: ProductType) => (\n            <SupplierProductListItem\n              {...{ orderInstance, categories, selected, setSelected, refreshOrder }}\n              instance={StaffProduct(item)}\n              key={item.slug}\n            />\n          ))}\n        </>\n      ) : null}\n    </Staff.Section>\n  );\n}\n\ntype SupplierProductListItemProps = {\n  orderInstance: ReturnType<typeof SupplierOrder>;\n  categories: CategoryChoicesType;\n  instance: ReturnType<typeof StaffProduct>;\n  selected: string[];\n  setSelected: React.Dispatch<React.SetStateAction<string[]>>;\n  refreshOrder: () => Promise<null | undefined>;\n};\n\nconst SupplierProductListItem = (props: SupplierProductListItemProps) => {\n  const [hide, setHide] = React.useState<boolean>(false);\n  const { instance, categories } = props;\n\n  if (hide) return null;\n\n  const { supplier_item } = instance;\n  const { orderInstance } = props;\n\n  // console.log(instance.data);\n\n  return (\n    <ViewSection\n      border\n      title={\n        <div className=\"d-flex align-items-center\">\n          <ItemCheckBox {...props} />\n\n          <div style={{ width: 48, height: 48 }}>\n            <Staff.Img.Square slug=\"slug\" src=\"src\" {...instance.cover_data} className=\"rounded\" />\n          </div>\n        </div>\n      }\n      actions={\n        <div className=\"d-flex\">\n          <ProductDeleteButton\n            instance={instance}\n            onSuccess={() => {\n              setHide(true);\n              props?.refreshOrder?.();\n            }}\n            className=\"me-2\"\n          />\n          <Staff.Link to={`./${instance.slug}/`} className=\"btn btn-primary-3\">\n            <Icons.PencilSquare />\n          </Staff.Link>\n        </div>\n      }\n      className=\"suppier-p-list-item bg-white\"\n    >\n      <HorizontalScrollGridLayout className=\"form-tab no-scroll-bar gap-2\">\n        <ProductQuickUpdateForm instance={instance} categories={categories} orderSlug={orderInstance?.slug} />\n\n        <div className=\"\">\n          <div className=\"mb-1\">\n            {`${supplier_item.item_id ? <span className=\"\">Item ID: {supplier_item.item_id}</span> : ''}`}\n          </div>\n          <ul>\n            {supplier_item.category && (\n              <li className=\"mb-1\">\n                <div className=\"text-sm\">Supplier Category</div>\n                <div className=\"text-muted\">{supplier_item.category}</div>\n              </li>\n            )}\n            <li className=\"mb-1\">\n              <div className=\"text-sm\">FOB Cost({orderInstance.currency})</div>\n              <div className=\"text-muted\">{supplier_item.cost}</div>\n            </li>\n\n            {supplier_item.url && (\n              <li className=\"\">\n                <a href={supplier_item.url} target=\"_blank\" className=\"text-underline\" rel=\"noopener noreferrer\">\n                  View supplier product page\n                </a>\n              </li>\n            )}\n          </ul>\n        </div>\n      </HorizontalScrollGridLayout>\n    </ViewSection>\n  );\n};\n\nconst ItemCheckBox = ({ instance, selected, setSelected }: SupplierProductListItemProps) => (\n  <input\n    type=\"checkbox\"\n    name=\"selected\"\n    className=\"me-2\"\n    onChange={({ target }) => {\n      const { checked } = target;\n      if (checked) setSelected([...selected, instance.slug!]);\n      else setSelected((selected) => selected.filter((i) => i !== instance.slug));\n    }}\n  />\n);\n","import * as React from 'react';\n\nimport Form, { useForm } from '@miq/formjs';\nimport { useRequest } from '@miq/hookjs';\nimport Staff from '@miq/staffjs';\nimport { Response } from '@miq/utiljs';\nimport { useParams } from 'react-router-dom';\nimport { SupplierOrder } from './models';\nimport { Loading, ViewSection } from '@miq/componentjs';\nimport { SupplierOrderForm, SupplierOrderProductAddForm, SupplierOrderUpdateForm } from './forms';\nimport SupplierProductList from './SupplierProductList';\nimport { SupplierOrderType } from '../types';\nimport { SharedDataCtx } from '@miq/contextjs';\n\nconst formFields: { [key: string]: any } = {\n  name: '',\n  order_id: '',\n  items_stage: '',\n  currency: 'USD',\n  supplier: '',\n  is_paid: false,\n  total_cost: '',\n};\n\nconst mapDataToValues = (data: any = {}): SupplierOrderType => {\n  const values: any = {};\n  Object.keys(formFields).forEach((k) => {\n    values[k] = data[`${k}`] || formFields[`${k}`];\n  });\n  return values;\n};\n\nexport default function OrderUpdateView() {\n  const { ordSlug } = useParams();\n\n  const form = useForm<SupplierOrderType>(mapDataToValues());\n\n  const { suppliers, currencies } = React.useContext(SharedDataCtx) as any;\n\n  const { setValues } = form;\n  const {\n    res,\n    loading,\n    setLoading,\n    setRes: setOrder,\n    refresh: refreshOrder,\n  } = useRequest(() => SupplierOrder({ slug: ordSlug }).retrieve(), {\n    refreshDeps: [ordSlug],\n    onSuccess: (res) => setValues(mapDataToValues(res.data)),\n  });\n\n  const r = new Response(res);\n  if (!r.isSuccess) return null;\n\n  const instance = SupplierOrder(r.data);\n\n  if (!instance.supplier || !instance.currency)\n    return (\n      <Staff.View title=\"Modifier une commande\" back=\"/staff/store/orders/\">\n        <Staff.Section className=\"d-flex justify-content-center mt-4\">\n          <SupplierOrderUpdateForm\n            context={form}\n            instance={instance}\n            fields={['name', 'currency', 'supplier']}\n            onSuccess={(res) => setOrder(res)}\n          >\n            <SupplierOrderForm.NameField required label=\"Nom\" error={form.errors.currency} />\n            <SupplierOrderForm.SupplierField\n              required\n              label=\"Supplier\"\n              suppliers={suppliers}\n              error={form.errors.supplier}\n            />\n            <SupplierOrderForm.CurrencyField\n              required\n              label=\"Supplier Currency\"\n              currencies={currencies}\n              error={form.errors.currency}\n            />\n\n            <Form.Submit value=\"Sauvegarder\" className=\"btn-primary-3\" />\n          </SupplierOrderUpdateForm>\n        </Staff.Section>\n      </Staff.View>\n    );\n\n  return (\n    <Staff.View title={form.values.name} back=\"/staff/store/orders/\">\n      <div className=\"d-flex flex-column flex-xl-row\">\n        <div className=\"min-w-35\">\n          <Staff.Section\n            border\n            className=\"bg-white mb-1\"\n            title={`Order Details${!loading && ` (${instance.products?.length})`}`}\n            text={`Supplier: ${instance.supplier} | Currency: ${instance.currency}`}\n          >\n            <div className=\"d-grid grid-md-5 gap-2\">\n              <div className=\"span-md-3\">\n                <SupplierOrderUpdateForm\n                  {...{ instance, context: form, fields: ['is_paid', 'order_id', 'total_cost'] }}\n                  onSuccess={(res) => setOrder(res)}\n                >\n                  <ViewSection border footer={<Form.Submit value=\"Sauvegarder\" className=\"btn-primary-3\" />}>\n                    <SupplierOrderForm.IsPaidField error={form.errors.is_paid} />\n                    {form.values.is_paid && (\n                      <>\n                        <SupplierOrderForm.OrderIDField required={form.values.is_paid} error={form.errors.order_id} />\n                        <SupplierOrderForm.TotalCostField\n                          required={form.values.is_paid}\n                          error={form.errors.total_cost}\n                        />\n                      </>\n                    )}\n                  </ViewSection>\n                </SupplierOrderUpdateForm>\n              </div>\n\n              <div className=\"span-md-2\">\n                <ul className=\"mb-3\">\n                  <li>Total cost: {instance.items_cost.amountWithSymbol}</li>\n                  <li>Est. revenue: {instance.items_revenue.amountWithSymbol}</li>\n                </ul>\n              </div>\n            </div>\n          </Staff.Section>\n        </div>\n\n        <div className=\"miq-container-1024 ms-xl-1\">\n          <Staff.Section\n            header={\n              <div className=\"miq-container-md center bg-white\">\n                <SupplierOrderProductAddForm\n                  orderInstance={instance}\n                  onSuccess={(res) => {\n                    setLoading();\n                    setOrder(res);\n                  }}\n                />\n              </div>\n            }\n          >\n            {loading ? (\n              <Loading icon />\n            ) : (\n              <SupplierProductList\n                orderInstance={instance}\n                categories={r?.data?.categories}\n                refreshOrder={refreshOrder}\n              />\n            )}\n          </Staff.Section>\n        </div>\n      </div>\n    </Staff.View>\n  );\n}\n","import React from 'react';\nimport { Button, ButtonProps, Icons, ToastEmitter } from '@miq/componentjs';\n\n// https://www.bennadel.com/blog/3961-having-fun-with-the-horizontal-usage-of-position-sticky-in-angular-11-0-5.htm\n\nimport './component.scss';\n\nimport { StaffCategory } from './Category';\nimport { StaffProduct } from './Product';\nimport { PriceDataType, ProductType } from './types';\nimport { getCN } from '@miq/utiljs';\n\ntype InstanceType = ReturnType<typeof StaffProduct> | ReturnType<typeof StaffCategory>;\n\ninterface UpdateButtonProps extends ButtonProps {\n  instance: InstanceType;\n  onSuccess: (r: any) => void;\n}\n\nexport const PublishButton: React.FC<UpdateButtonProps> = (props) => {\n  const { instance, onClick, onSuccess, onError, ...rest } = props;\n\n  const handleClick = () => {\n    if (instance.is_published) return null;\n    return instance\n      .publish()\n      .then((res: any) => onSuccess?.(res))\n      .catch((err: any) => onError?.(err));\n  };\n\n  return <Button onClick={handleClick} className=\"btn-primary btn-md\" {...rest} disabled={instance.is_published} />;\n};\n\nexport const UnPublishButton: React.FC<UpdateButtonProps> = (props) => {\n  const { instance, onClick, onSuccess, onError, ...rest } = props;\n\n  const handleClick = () => {\n    if (!instance.is_published) return null;\n    return instance\n      .unpublish()\n      .then((res: any) => onSuccess?.(res))\n      .catch((err: any) => onError?.(err));\n  };\n\n  return <Button className=\"btn-danger btn-md\" onClick={handleClick} {...rest} disabled={!instance.is_published} />;\n};\n\n//#region ================================== COMPONENTS =============================================================\n\nexport type PriceDisplayProps = PriceDataType & {\n  className?: string;\n  sale?: string | boolean;\n  lineThrough?: string | boolean;\n};\n\nexport const PriceDisplay = ({ amountWithSymbol, className, sale, lineThrough }: PriceDisplayProps) => (\n  <div className={getCN(['miq-price-display', sale && 'text-danger', lineThrough && 'text-line-through', className])}>\n    {amountWithSymbol}\n  </div>\n);\n\nexport const ProductPriceDisplay = ({\n  retail_price_data,\n  is_on_sale,\n  sale_price_data,\n  ...props\n}: ProductType & { className?: string; style?: any }) => {\n  if (!retail_price_data) return null;\n\n  const isSale = is_on_sale && sale_price_data?.amountWithSymbol != null;\n\n  return (\n    <div className={getCN(['miq-product-price-display', props.className])} style={props.style}>\n      {isSale && <PriceDisplay sale {...sale_price_data} className=\"miq-sale-price me-1\" />}\n      <PriceDisplay {...retail_price_data} lineThrough={isSale} className=\"miq-retail-price\" />\n    </div>\n  );\n};\n\nexport const ProductSupplierData = (props: { instance: InstanceType }) => {\n  // const { instance } = props;\n\n  return (\n    <div className=\"supplier-data\">\n      <div className=\"item\">\n        <span className=\"title\">Supplier</span>\n        {/* <span className=\"value\">{instance.supplier_name}</span> */}\n      </div>\n      <div className=\"item\">\n        <span className=\"title\">Item ID</span>\n        {/* <span className=\"value\">{instance.supplier_item_id}</span> */}\n      </div>\n      <div className=\"item\">\n        <span className=\"title\">Category</span>\n        {/* <span className=\"value\">{instance.supplier_item_category}</span> */}\n      </div>\n      <div className=\"item\">\n        <span className=\"title\"> Item cost</span>\n        <span className=\"value\">{/* {instance.supplier_item_cost} ({instance.supplier_item_cost_currency}) */}</span>\n      </div>\n    </div>\n  );\n};\n\nexport const PublishedIcon = ({ show, ...props }: React.ComponentPropsWithoutRef<'svg'> & { show?: boolean }) =>\n  show ? <Icons.CheckCircle {...props} className=\"published-icon\" /> : null;\n\n//#endregion ===============================================================================================\n\nexport const toast = new ToastEmitter();\n\n{\n  /* <Toaster instance={t}></Toaster> */\n}\n// <button\n//   onClick={() => {\n//     t.info({ message: 'Hello', autoClose: true });\n//   }}\n// >\n//   Click me\n// </button>\n","import * as React from 'react';\nimport EventEmitter from 'events';\n\ninterface IEventStateSyncProps {\n  children?: React.ReactNode;\n}\n\nclass CrudEmitter extends EventEmitter {\n  prefix?: string;\n\n  constructor(...args: any) {\n    const { prefix = '', ...rest } = args;\n    super(rest);\n\n    this.prefix = prefix;\n  }\n\n  create(payload: any) {\n    this.emit(`${this.prefix}-create`, payload);\n  }\n  retrieve(payload: any) {\n    this.emit(`${this.prefix}-retrieve`, payload);\n  }\n  list(payload: any) {\n    this.emit(`${this.prefix}-list`, payload);\n  }\n  update(payload: any) {\n    this.emit(`${this.prefix}-update`, payload);\n  }\n  destroy(payload: any) {\n    this.emit(`${this.prefix}-destroy`, payload);\n  }\n}\n\nexport const emitter = new CrudEmitter();\n\ntype FN<T> = T & { [key: string]: any; slug: string };\n\ntype CallBacksType<T = void> = {\n  onList?: () => void;\n  onRetrieve?: () => void;\n  onCreate?: (payload: FN<T>) => void;\n  onUpdate?: (payload: FN<T>) => void;\n  onDestroy?: (payload: FN<T>) => void;\n};\n\nexport function useCrudEmitter(callbacks: CallBacksType, match?: (p: any) => boolean) {\n  React.useEffect(() => {\n    emitter.on('-create', (payload: any) => {\n      if (match && !match(payload)) return;\n\n      callbacks.onCreate?.(payload);\n    });\n\n    emitter.on('-update', (payload: any) => {\n      if (match && !match(payload)) return;\n\n      callbacks.onUpdate?.(payload);\n    });\n\n    emitter.on('-destroy', (payload: any) => {\n      if (match && !match(payload)) return;\n\n      callbacks.onDestroy?.(payload);\n    });\n  }, []);\n}\n"],"names":["ProductImagesAddButton","props","productInstance","onSuccess","onError","rest","className","multiple","onSuccessMulti","resArray","imgsArray","map","data","slug","filter","images","includes","update","then","res","catch","err","ProductDeleteButton","instance","label","renderHeader","name","renderFooter","setOpen","onClick","destroy","emitter","handleDelete","render","getCN","ProductCardItem","StaffProduct","name_truncated","show","is_published","cover_data","export","category_data","ProductCardList","items","itempath","useSearchParams","params","item","to","StaffProductService","this","patch","_path","values","post","sizeSlug","delete","attrSlug","StaffService","dt_published","Date","StaffModel","useProductListRequest","orderSlug","q","get","cat","page","published","presale","sale","searchParams","supplier_order_slug","useRequest","list","refreshDeps","SupplierOrderUpdateForm","fields","context","SupplierOrderForm","onSubmit","e","preventDefault","fd","forEach","field","value","handleError","NameField","text","error","placeholder","maxLength","OrderIDField","IsPaidField","checkbox","TotalCostField","min","step","required","type","CurrencyField","currencies","nullValue","curr","key","SupplierField","suppliers","supplier","SupplierOrderProductAddForm","children","orderInstance","toLowerCase","form","useForm","supplier_name","url","React","isLoading","setLoading","handleSuccess","setValue","setErrors","errors","urlErrMsg","postFnova","postPlt","postShein","autoFocus","disabled","SupplierProductList","refreshOrder","categories","ordSlug","useParams","results","selected","setSelected","header","footer","component","Staff","length","style","position","top","zIndex","SupplierProductListItem","hide","setHide","supplier_item","border","title","ItemCheckBox","width","height","src","actions","item_id","category","currency","cost","href","target","rel","onChange","checked","i","formFields","order_id","items_stage","is_paid","total_cost","mapDataToValues","Object","keys","k","OrderUpdateView","SharedDataCtx","setValues","SupplierOrder","retrieve","loading","setOrder","setRes","refresh","r","Response","isSuccess","back","products","items_cost","amountWithSymbol","items_revenue","icon","PublishButton","publish","UnPublishButton","unpublish","PriceDisplay","lineThrough","ProductPriceDisplay","retail_price_data","is_on_sale","sale_price_data","isSale","PublishedIcon","ToastEmitter","CrudEmitter","args","prefix","payload","emit","EventEmitter","useCrudEmitter","callbacks","match","on","onCreate","call","onUpdate","onDestroy"],"sourceRoot":""}
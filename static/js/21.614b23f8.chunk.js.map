{"version":3,"sources":["shop/category/UpdateView.jsx"],"names":["StaffCategoryUpdateView","props","catSlug","match","params","useState","cat","setCat","toast","useContext","ToastCtx","form","useForm","name","description","title","slug_public","is_published","setValues","useEffect","catServices","detail","then","data","page","catch","err","response","error","message","status","back","className","slug","cover","cover_data","onCreate","imgData","patch","console","log","onUpdate","onDelete","Section","actions","pill","context","onSubmit","e","preventDefault","values","handleError","Label","value","errors","TextAreaX","placeholder","Submit","patchPage","success","TextInput","required","maxLength","CheckboxInput"],"mappings":"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","file":"static/js/21.614b23f8.chunk.js","sourcesContent":["import { useContext, useEffect, useState } from \"react\";\n\nimport { AdminView, StaffCoverUpdateForm, PublishedStatusSpan } from \"@miq/adminjs\";\nimport Form, { useForm } from \"@miq/form\";\nimport {\n  // Icons,\n  // IconNavLink,\n  ToastCtx,\n  ImgSquare,\n  // IconButton,\n  ImgDeleteIconButton,\n} from \"@miq/components\";\n\nimport { catServices } from \"./utils\";\nimport { CatNameInput } from \"./components\";\n\nexport default function StaffCategoryUpdateView(props) {\n  const { catSlug } = props.match.params;\n\n  const [cat, setCat] = useState(null);\n  const toast = useContext(ToastCtx);\n\n  const form = useForm({ name: \"\", description: \"\", title: \"\", slug_public: \"\", is_published: false });\n  const { setValues } = form;\n\n  useEffect(() => {\n    catServices\n      .detail(catSlug)\n      .then((data) => {\n        setCat(data);\n\n        setValues({\n          name: data.name || \"\",\n          description: data.description || \"\",\n          title: data.page.title || \"\",\n          slug_public: data?.page?.slug_public || \"\",\n          is_published: data?.is_published || false,\n        });\n      })\n      .catch((err) => {\n        if (err.response) {\n          toast.error({ message: \"Something went wrong\" });\n          if (err.response.status === 404) {\n            return;\n          }\n        }\n      });\n  }, [catSlug, setValues]);\n\n  if (!cat) return null;\n\n  const handleUpdate = (e) => {\n    e.preventDefault();\n    catServices\n      .patch(cat.slug, { name: form.values.name, description: form.values.description })\n      .then((data) => {})\n      .catch((err) => {\n        form.handleError(err);\n      });\n  };\n\n  return (\n    <AdminView back={props?.back} title=\"Modifier une catégorie\" className=\"cat-update-view\">\n      <div className=\"view-header d-flex flex-column flex-md-row mb-2\">\n        <div className=\"mb-2 w-md-25\">\n          <StaffCoverUpdateForm\n            slug={cat?.cover}\n            data={cat.cover_data}\n            onCreate={(imgData) => {\n              catServices\n                .patch(cat.slug, { cover: imgData.slug })\n                .then((data) => {\n                  setCat(data);\n                })\n                .catch((err) => {\n                  console.log(err);\n                });\n            }}\n            onUpdate={(cover_data) => {\n              return setCat({ ...cat, cover_data });\n            }}\n            onDelete={() => {\n              return setCat({ ...cat, cover_data: null, cover: null });\n            }}\n          />\n        </div>\n        <div className=\"ms-1 ms-md-2 flex-1\">\n          <AdminView.Section\n            title=\"Details\"\n            actions={<PublishedStatusSpan is_published={cat?.page?.is_published} pill />}\n          >\n            <Form context={form} onSubmit={handleUpdate}>\n              <div className=\"mb-1\">\n                <Form.Label value=\"Nom de la catégorie\" className=\"mb-1\" />\n                <CatNameInput error={form.errors.name} />\n              </div>\n\n              <div className=\"mb-1\">\n                <Form.Label value=\"Description de la catégorie\" className=\"mb-1\" />\n                <Form.TextAreaX\n                  name=\"description\"\n                  error={form.errors.description}\n                  placeholder={\"Decrivez la catégorie ...\"}\n                />\n              </div>\n\n              <div className=\"my-2\">\n                <Form.Submit value=\"Sauvegarder\" className=\"btn btn-primary\" />\n              </div>\n            </Form>\n          </AdminView.Section>\n        </div>\n      </div>\n\n      <Form\n        context={form}\n        onSubmit={(e) => {\n          e.preventDefault();\n          const { title, slug_public, is_published } = form.values;\n          return catServices\n            .patchPage(\n              catSlug,\n              { title, slug_public, is_published },\n              { title: cat.page.title, slug_public: cat.page.slug_public, is_published: cat.page.is_published }\n            )\n            .then((data) => {\n              // setCat(data);\n              toast.success({ message: \"Category updated.\" });\n            })\n            .catch((err) => {\n              form.handleError(err);\n              toast.error({ message: \"Could not update item.\" });\n            });\n        }}\n      >\n        <AdminView.Section title=\"Seo\">\n          <div className=\"mb-1\">\n            <Form.Label value=\"Title\" className=\"mb-1\" />\n            <Form.TextInput\n              required\n              name=\"title\"\n              error={form.errors.title}\n              placeholder=\"Give a name to the item\"\n              maxLength={99}\n            />\n          </div>\n          <div className=\"mb-1\">\n            <Form.Label value=\"Slug\" className=\"mb-1\" />\n            <Form.TextInput\n              required\n              name=\"slug_public\"\n              error={form.errors.slug_public}\n              placeholder={\"Write slug ...\"}\n              maxLength={99}\n            />\n          </div>\n        </AdminView.Section>\n\n        <AdminView.Section title=\"Status\">\n          <div className=\"d-flex align-items-center\">\n            <Form.CheckboxInput name=\"is_published\" error={form.errors.is_published} className=\"me-2\" />\n            <Form.Label value=\"Publier cette categorie\" />\n          </div>\n        </AdminView.Section>\n\n        <div className=\"\">\n          <Form.Submit value=\"Save\" className=\"btn btn-primary-3\" />\n        </div>\n      </Form>\n    </AdminView>\n  );\n}\n"],"sourceRoot":""}
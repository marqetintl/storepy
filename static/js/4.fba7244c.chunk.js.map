{"version":3,"sources":["../../../../packages/miq-sharedjs/src/editor/src/Section/ImageSection/index.jsx"],"names":["ImgUploadButton","children","className","onClick","console","log","UploadTab","props","tab","LibraryTab","UnsplashTab","ImgSectionEdit","useState","setTab","ImgSectionPreview","data","context","isEdit","getClassName","image","setEdit","Icon","Icons","CloudArrowUp","src","ImageSection","forwardRef","ref","id","Image","JumbotronSection","propTypes","sectionRequiredProps","IS_DEV","displayName"],"mappings":"kOAkBMA,EAAkB,SAAC,GAAkB,IAAhBC,EAAe,EAAfA,SACzB,OACE,qBAAKC,UAAU,GAAGC,QAAS,kBAAMC,QAAQC,IAAI,iBAA7C,SACGJ,KAKDK,EAAY,SAACC,GACjB,IAAQC,EAAQD,EAARC,IAER,MAAY,YAARA,EAA0B,cAACC,EAAD,eAAgBF,IAClC,aAARC,EAA2B,cAACE,EAAD,eAAiBH,IAG9C,sBAAKL,UAAU,aAAf,UACE,qBAAKA,UAAU,GAAf,sCACA,qBAAKA,UAAU,GAAf,gBACA,qBAAKA,UAAU,GAAf,2BAIAO,EAAa,SAACF,GAClB,OAAO,qBAAKL,UAAU,cAAf,kCAGHQ,EAAc,SAACH,GACnB,OAAO,qBAAKL,UAAU,eAAf,mCAGHS,EAAiB,SAACJ,GACtB,MAAsBK,mBAAS,OAA/B,mBAAOJ,EAAP,KAAYK,EAAZ,KACA,OACE,sBAAKX,UAAU,eAAf,UACE,sBAAKA,UAAU,GAAf,UACE,wBAAQC,QAAS,kBAAMU,EAAO,QAA9B,iBACA,wBAAQV,QAAS,kBAAMU,EAAO,YAA9B,qBACA,wBAAQV,QAAS,kBAAMU,EAAO,aAA9B,yBAGF,cAACP,EAAD,CAAiBE,QAEjB,cAACR,EAAD,QAKAc,EAAoB,SAACP,GACzB,IAAQQ,EAASR,EAATQ,KAER,GAAIR,EAAMS,QAAQC,OAAQ,OAAO,cAACN,EAAD,eAAoBJ,IAKrD,OACE,sBACEL,UAAWgB,YAAa,CAAC,mBAAoBH,EAAKI,OAAS,UAC3DhB,QAAS,kBAAMI,EAAMS,QAAQI,SAASb,EAAMS,QAAQC,SAFtD,UAIE,cAAC,IAAD,CAAKI,KAAMC,IAAMC,aAAcC,IAPjC,2LAQIT,EAAKI,OAAS,gEAKhBM,EAAeC,sBAAW,SAACnB,EAAOoB,GACtC,OACE,sBAAKC,GAAIrB,EAAMqB,GAAUD,MAAOzB,UAAWgB,YAAa,CAACX,EAAML,UAAW,gBAA1E,UACE,cAAC,IAAD,CAAemB,KAAMC,IAAMO,QAE3B,cAAC,IAAD,UACE,cAACf,EAAD,eAAuBP,MAGzB,cAAC,IAAD,UACE,qBAAKL,UAAU,UAAf,SACE,cAAC,IAAD,eAAyBK,cAOnCuB,iBAAiBC,UAAjB,eACKC,KAGUP,YAEXQ,MACFR,EAAaS,YAAc","file":"static/js/4.fba7244c.chunk.js","sourcesContent":["import { forwardRef, useState } from 'react';\n\nimport { Img, Icons } from '@miq/components';\nimport { getClassName, IS_DEV } from '@miq/utils';\n\nimport './img-section.scss';\n\nimport { SectionDeleteButton } from '../section-components';\nimport { SectionBody, SectionFooter, SectionHeader } from '../section-ui';\n\nimport { sectionRequiredProps } from '../utils';\n\n/**\n * IMAGE SECTION\n * images Icon:viewlist\n * slider; distribute-horizontal\n */\n\nconst ImgUploadButton = ({ children }) => {\n  return (\n    <div className=\"\" onClick={() => console.log('Uploading...')}>\n      {children}\n    </div>\n  );\n};\n\nconst UploadTab = (props) => {\n  const { tab } = props;\n\n  if (tab === 'library') return <LibraryTab {...props} />;\n  if (tab === 'unsplash') return <UnsplashTab {...props} />;\n\n  return (\n    <div className=\"tab-upload\">\n      <div className=\"\">Click to upload an image</div>\n      <div className=\"\">or</div>\n      <div className=\"\">Paste url</div>\n    </div>\n  );\n};\nconst LibraryTab = (props) => {\n  return <div className=\"tab-library\">Images from library</div>;\n};\n\nconst UnsplashTab = (props) => {\n  return <div className=\"tab-unsplash\">Images from unsplash</div>;\n};\n\nconst ImgSectionEdit = (props) => {\n  const [tab, setTab] = useState('new');\n  return (\n    <div className=\"section-edit\">\n      <div className=\"\">\n        <button onClick={() => setTab('new')}>New</button>\n        <button onClick={() => setTab('library')}>Library</button>\n        <button onClick={() => setTab('unsplash')}>Unsplash</button>\n      </div>\n\n      <UploadTab {...{ tab }} />\n\n      <ImgUploadButton />\n    </div>\n  );\n};\n\nconst ImgSectionPreview = (props) => {\n  const { data } = props;\n\n  if (props.context.isEdit) return <ImgSectionEdit {...props} />;\n\n  const src =\n    'https://images.unsplash.com/photo-1621570070821-2e2b1358fae3?crop=entropy&cs=tinysrgb&fit=max&fm=jpg&ixid=MnwxMTc3M3wxfDF8YWxsfDF8fHx8fHwyfHwxNjIxOTkyNDMw&ixlib=rb-1.2.1&q=80&w=2000';\n\n  return (\n    <div\n      className={getClassName(['section-preview', !data.image && 'empty'])}\n      onClick={() => props.context.setEdit(!props.context.isEdit)}\n    >\n      <Img Icon={Icons.CloudArrowUp} src={src} />\n      {!data.image && <span>Click to upload an image</span>}\n    </div>\n  );\n};\n\nconst ImageSection = forwardRef((props, ref) => {\n  return (\n    <div id={props.id} {...{ ref }} className={getClassName([props.className, 'section-img'])}>\n      <SectionHeader Icon={Icons.Image} />\n\n      <SectionBody>\n        <ImgSectionPreview {...props} />\n      </SectionBody>\n\n      <SectionFooter>\n        <div className=\"actions\">\n          <SectionDeleteButton {...props} />\n        </div>\n      </SectionFooter>\n    </div>\n  );\n});\n\nJumbotronSection.propTypes = {\n  ...sectionRequiredProps,\n};\n\nexport default ImageSection;\n\nif (IS_DEV) {\n  ImageSection.displayName = 'ImageSection';\n}\n"],"sourceRoot":""}